using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Logistics{
    /// <summary>
    /// Strongly-typed collection for the InfinitasInvoiceView class.
    /// </summary>
    [Serializable]
    public partial class InfinitasInvoiceViewCollection : ReadOnlyList<InfinitasInvoiceView, InfinitasInvoiceViewCollection>
    {        
        public InfinitasInvoiceViewCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the InfinitasInvoiceView view.
    /// </summary>
    [Serializable]
    public partial class InfinitasInvoiceView : ReadOnlyRecord<InfinitasInvoiceView>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("InfinitasInvoiceView", TableType.View, DataService.GetInstance("WWIprov"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarOrderNumber = new TableSchema.TableColumn(schema);
                colvarOrderNumber.ColumnName = "OrderNumber";
                colvarOrderNumber.DataType = DbType.Int32;
                colvarOrderNumber.MaxLength = 0;
                colvarOrderNumber.AutoIncrement = false;
                colvarOrderNumber.IsNullable = true;
                colvarOrderNumber.IsPrimaryKey = false;
                colvarOrderNumber.IsForeignKey = false;
                colvarOrderNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderNumber);
                
                TableSchema.TableColumn colvarInvoiceDate = new TableSchema.TableColumn(schema);
                colvarInvoiceDate.ColumnName = "InvoiceDate";
                colvarInvoiceDate.DataType = DbType.DateTime;
                colvarInvoiceDate.MaxLength = 0;
                colvarInvoiceDate.AutoIncrement = false;
                colvarInvoiceDate.IsNullable = true;
                colvarInvoiceDate.IsPrimaryKey = false;
                colvarInvoiceDate.IsForeignKey = false;
                colvarInvoiceDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarInvoiceDate);
                
                TableSchema.TableColumn colvarInvoiceCurrencyName = new TableSchema.TableColumn(schema);
                colvarInvoiceCurrencyName.ColumnName = "InvoiceCurrencyName";
                colvarInvoiceCurrencyName.DataType = DbType.String;
                colvarInvoiceCurrencyName.MaxLength = 50;
                colvarInvoiceCurrencyName.AutoIncrement = false;
                colvarInvoiceCurrencyName.IsNullable = true;
                colvarInvoiceCurrencyName.IsPrimaryKey = false;
                colvarInvoiceCurrencyName.IsForeignKey = false;
                colvarInvoiceCurrencyName.IsReadOnly = false;
                
                schema.Columns.Add(colvarInvoiceCurrencyName);
                
                TableSchema.TableColumn colvarTitle = new TableSchema.TableColumn(schema);
                colvarTitle.ColumnName = "Title";
                colvarTitle.DataType = DbType.String;
                colvarTitle.MaxLength = 100;
                colvarTitle.AutoIncrement = false;
                colvarTitle.IsNullable = true;
                colvarTitle.IsPrimaryKey = false;
                colvarTitle.IsForeignKey = false;
                colvarTitle.IsReadOnly = false;
                
                schema.Columns.Add(colvarTitle);
                
                TableSchema.TableColumn colvarIsbn = new TableSchema.TableColumn(schema);
                colvarIsbn.ColumnName = "ISBN";
                colvarIsbn.DataType = DbType.String;
                colvarIsbn.MaxLength = 50;
                colvarIsbn.AutoIncrement = false;
                colvarIsbn.IsNullable = true;
                colvarIsbn.IsPrimaryKey = false;
                colvarIsbn.IsForeignKey = false;
                colvarIsbn.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsbn);
                
                TableSchema.TableColumn colvarCopies = new TableSchema.TableColumn(schema);
                colvarCopies.ColumnName = "Copies";
                colvarCopies.DataType = DbType.Int32;
                colvarCopies.MaxLength = 0;
                colvarCopies.AutoIncrement = false;
                colvarCopies.IsNullable = true;
                colvarCopies.IsPrimaryKey = false;
                colvarCopies.IsForeignKey = false;
                colvarCopies.IsReadOnly = false;
                
                schema.Columns.Add(colvarCopies);
                
                TableSchema.TableColumn colvarCustomersRef = new TableSchema.TableColumn(schema);
                colvarCustomersRef.ColumnName = "CustomersRef";
                colvarCustomersRef.DataType = DbType.String;
                colvarCustomersRef.MaxLength = 20;
                colvarCustomersRef.AutoIncrement = false;
                colvarCustomersRef.IsNullable = true;
                colvarCustomersRef.IsPrimaryKey = false;
                colvarCustomersRef.IsForeignKey = false;
                colvarCustomersRef.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomersRef);
                
                TableSchema.TableColumn colvarPaymentDueDate = new TableSchema.TableColumn(schema);
                colvarPaymentDueDate.ColumnName = "PaymentDueDate";
                colvarPaymentDueDate.DataType = DbType.DateTime;
                colvarPaymentDueDate.MaxLength = 0;
                colvarPaymentDueDate.AutoIncrement = false;
                colvarPaymentDueDate.IsNullable = true;
                colvarPaymentDueDate.IsPrimaryKey = false;
                colvarPaymentDueDate.IsForeignKey = false;
                colvarPaymentDueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentDueDate);
                
                TableSchema.TableColumn colvarHCInvoiceAmount2 = new TableSchema.TableColumn(schema);
                colvarHCInvoiceAmount2.ColumnName = "HCInvoiceAmount2";
                colvarHCInvoiceAmount2.DataType = DbType.Currency;
                colvarHCInvoiceAmount2.MaxLength = 0;
                colvarHCInvoiceAmount2.AutoIncrement = false;
                colvarHCInvoiceAmount2.IsNullable = true;
                colvarHCInvoiceAmount2.IsPrimaryKey = false;
                colvarHCInvoiceAmount2.IsForeignKey = false;
                colvarHCInvoiceAmount2.IsReadOnly = false;
                
                schema.Columns.Add(colvarHCInvoiceAmount2);
                
                TableSchema.TableColumn colvarConsolNumber = new TableSchema.TableColumn(schema);
                colvarConsolNumber.ColumnName = "ConsolNumber";
                colvarConsolNumber.DataType = DbType.Int32;
                colvarConsolNumber.MaxLength = 0;
                colvarConsolNumber.AutoIncrement = false;
                colvarConsolNumber.IsNullable = true;
                colvarConsolNumber.IsPrimaryKey = false;
                colvarConsolNumber.IsForeignKey = false;
                colvarConsolNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsolNumber);
                
                TableSchema.TableColumn colvarHodderPricePerCopy = new TableSchema.TableColumn(schema);
                colvarHodderPricePerCopy.ColumnName = "HodderPricePerCopy";
                colvarHodderPricePerCopy.DataType = DbType.Single;
                colvarHodderPricePerCopy.MaxLength = 0;
                colvarHodderPricePerCopy.AutoIncrement = false;
                colvarHodderPricePerCopy.IsNullable = true;
                colvarHodderPricePerCopy.IsPrimaryKey = false;
                colvarHodderPricePerCopy.IsForeignKey = false;
                colvarHodderPricePerCopy.IsReadOnly = false;
                
                schema.Columns.Add(colvarHodderPricePerCopy);
                
                TableSchema.TableColumn colvarCompanyName = new TableSchema.TableColumn(schema);
                colvarCompanyName.ColumnName = "CompanyName";
                colvarCompanyName.DataType = DbType.String;
                colvarCompanyName.MaxLength = 50;
                colvarCompanyName.AutoIncrement = false;
                colvarCompanyName.IsNullable = true;
                colvarCompanyName.IsPrimaryKey = false;
                colvarCompanyName.IsForeignKey = false;
                colvarCompanyName.IsReadOnly = false;
                
                schema.Columns.Add(colvarCompanyName);
                
                TableSchema.TableColumn colvarInvoiceNumber = new TableSchema.TableColumn(schema);
                colvarInvoiceNumber.ColumnName = "InvoiceNumber";
                colvarInvoiceNumber.DataType = DbType.Int32;
                colvarInvoiceNumber.MaxLength = 0;
                colvarInvoiceNumber.AutoIncrement = false;
                colvarInvoiceNumber.IsNullable = true;
                colvarInvoiceNumber.IsPrimaryKey = false;
                colvarInvoiceNumber.IsForeignKey = false;
                colvarInvoiceNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarInvoiceNumber);
                
                TableSchema.TableColumn colvarContactName = new TableSchema.TableColumn(schema);
                colvarContactName.ColumnName = "ContactName";
                colvarContactName.DataType = DbType.String;
                colvarContactName.MaxLength = 50;
                colvarContactName.AutoIncrement = false;
                colvarContactName.IsNullable = true;
                colvarContactName.IsPrimaryKey = false;
                colvarContactName.IsForeignKey = false;
                colvarContactName.IsReadOnly = false;
                
                schema.Columns.Add(colvarContactName);
                
                TableSchema.TableColumn colvarContainerNumber = new TableSchema.TableColumn(schema);
                colvarContainerNumber.ColumnName = "ContainerNumber";
                colvarContainerNumber.DataType = DbType.String;
                colvarContainerNumber.MaxLength = 50;
                colvarContainerNumber.AutoIncrement = false;
                colvarContainerNumber.IsNullable = true;
                colvarContainerNumber.IsPrimaryKey = false;
                colvarContainerNumber.IsForeignKey = false;
                colvarContainerNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarContainerNumber);
                
                TableSchema.TableColumn colvarPrinter = new TableSchema.TableColumn(schema);
                colvarPrinter.ColumnName = "Printer";
                colvarPrinter.DataType = DbType.String;
                colvarPrinter.MaxLength = 50;
                colvarPrinter.AutoIncrement = false;
                colvarPrinter.IsNullable = true;
                colvarPrinter.IsPrimaryKey = false;
                colvarPrinter.IsForeignKey = false;
                colvarPrinter.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinter);
                
                TableSchema.TableColumn colvarVoyage = new TableSchema.TableColumn(schema);
                colvarVoyage.ColumnName = "Voyage";
                colvarVoyage.DataType = DbType.String;
                colvarVoyage.MaxLength = 50;
                colvarVoyage.AutoIncrement = false;
                colvarVoyage.IsNullable = true;
                colvarVoyage.IsPrimaryKey = false;
                colvarVoyage.IsForeignKey = false;
                colvarVoyage.IsReadOnly = false;
                
                schema.Columns.Add(colvarVoyage);
                
                TableSchema.TableColumn colvarEta = new TableSchema.TableColumn(schema);
                colvarEta.ColumnName = "ETA";
                colvarEta.DataType = DbType.DateTime;
                colvarEta.MaxLength = 0;
                colvarEta.AutoIncrement = false;
                colvarEta.IsNullable = true;
                colvarEta.IsPrimaryKey = false;
                colvarEta.IsForeignKey = false;
                colvarEta.IsReadOnly = false;
                
                schema.Columns.Add(colvarEta);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["WWIprov"].AddSchema("InfinitasInvoiceView",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public InfinitasInvoiceView()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public InfinitasInvoiceView(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public InfinitasInvoiceView(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public InfinitasInvoiceView(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("OrderNumber")]
        [Bindable(true)]
        public int? OrderNumber 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OrderNumber");
		    }
            set 
		    {
			    SetColumnValue("OrderNumber", value);
            }
        }
	      
        [XmlAttribute("InvoiceDate")]
        [Bindable(true)]
        public DateTime? InvoiceDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("InvoiceDate");
		    }
            set 
		    {
			    SetColumnValue("InvoiceDate", value);
            }
        }
	      
        [XmlAttribute("InvoiceCurrencyName")]
        [Bindable(true)]
        public string InvoiceCurrencyName 
	    {
		    get
		    {
			    return GetColumnValue<string>("InvoiceCurrencyName");
		    }
            set 
		    {
			    SetColumnValue("InvoiceCurrencyName", value);
            }
        }
	      
        [XmlAttribute("Title")]
        [Bindable(true)]
        public string Title 
	    {
		    get
		    {
			    return GetColumnValue<string>("Title");
		    }
            set 
		    {
			    SetColumnValue("Title", value);
            }
        }
	      
        [XmlAttribute("Isbn")]
        [Bindable(true)]
        public string Isbn 
	    {
		    get
		    {
			    return GetColumnValue<string>("ISBN");
		    }
            set 
		    {
			    SetColumnValue("ISBN", value);
            }
        }
	      
        [XmlAttribute("Copies")]
        [Bindable(true)]
        public int? Copies 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Copies");
		    }
            set 
		    {
			    SetColumnValue("Copies", value);
            }
        }
	      
        [XmlAttribute("CustomersRef")]
        [Bindable(true)]
        public string CustomersRef 
	    {
		    get
		    {
			    return GetColumnValue<string>("CustomersRef");
		    }
            set 
		    {
			    SetColumnValue("CustomersRef", value);
            }
        }
	      
        [XmlAttribute("PaymentDueDate")]
        [Bindable(true)]
        public DateTime? PaymentDueDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("PaymentDueDate");
		    }
            set 
		    {
			    SetColumnValue("PaymentDueDate", value);
            }
        }
	      
        [XmlAttribute("HCInvoiceAmount2")]
        [Bindable(true)]
        public decimal? HCInvoiceAmount2 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("HCInvoiceAmount2");
		    }
            set 
		    {
			    SetColumnValue("HCInvoiceAmount2", value);
            }
        }
	      
        [XmlAttribute("ConsolNumber")]
        [Bindable(true)]
        public int? ConsolNumber 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ConsolNumber");
		    }
            set 
		    {
			    SetColumnValue("ConsolNumber", value);
            }
        }
	      
        [XmlAttribute("HodderPricePerCopy")]
        [Bindable(true)]
        public float? HodderPricePerCopy 
	    {
		    get
		    {
			    return GetColumnValue<float?>("HodderPricePerCopy");
		    }
            set 
		    {
			    SetColumnValue("HodderPricePerCopy", value);
            }
        }
	      
        [XmlAttribute("CompanyName")]
        [Bindable(true)]
        public string CompanyName 
	    {
		    get
		    {
			    return GetColumnValue<string>("CompanyName");
		    }
            set 
		    {
			    SetColumnValue("CompanyName", value);
            }
        }
	      
        [XmlAttribute("InvoiceNumber")]
        [Bindable(true)]
        public int? InvoiceNumber 
	    {
		    get
		    {
			    return GetColumnValue<int?>("InvoiceNumber");
		    }
            set 
		    {
			    SetColumnValue("InvoiceNumber", value);
            }
        }
	      
        [XmlAttribute("ContactName")]
        [Bindable(true)]
        public string ContactName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ContactName");
		    }
            set 
		    {
			    SetColumnValue("ContactName", value);
            }
        }
	      
        [XmlAttribute("ContainerNumber")]
        [Bindable(true)]
        public string ContainerNumber 
	    {
		    get
		    {
			    return GetColumnValue<string>("ContainerNumber");
		    }
            set 
		    {
			    SetColumnValue("ContainerNumber", value);
            }
        }
	      
        [XmlAttribute("Printer")]
        [Bindable(true)]
        public string Printer 
	    {
		    get
		    {
			    return GetColumnValue<string>("Printer");
		    }
            set 
		    {
			    SetColumnValue("Printer", value);
            }
        }
	      
        [XmlAttribute("Voyage")]
        [Bindable(true)]
        public string Voyage 
	    {
		    get
		    {
			    return GetColumnValue<string>("Voyage");
		    }
            set 
		    {
			    SetColumnValue("Voyage", value);
            }
        }
	      
        [XmlAttribute("Eta")]
        [Bindable(true)]
        public DateTime? Eta 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ETA");
		    }
            set 
		    {
			    SetColumnValue("ETA", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string OrderNumber = @"OrderNumber";
            
            public static string InvoiceDate = @"InvoiceDate";
            
            public static string InvoiceCurrencyName = @"InvoiceCurrencyName";
            
            public static string Title = @"Title";
            
            public static string Isbn = @"ISBN";
            
            public static string Copies = @"Copies";
            
            public static string CustomersRef = @"CustomersRef";
            
            public static string PaymentDueDate = @"PaymentDueDate";
            
            public static string HCInvoiceAmount2 = @"HCInvoiceAmount2";
            
            public static string ConsolNumber = @"ConsolNumber";
            
            public static string HodderPricePerCopy = @"HodderPricePerCopy";
            
            public static string CompanyName = @"CompanyName";
            
            public static string InvoiceNumber = @"InvoiceNumber";
            
            public static string ContactName = @"ContactName";
            
            public static string ContainerNumber = @"ContainerNumber";
            
            public static string Printer = @"Printer";
            
            public static string Voyage = @"Voyage";
            
            public static string Eta = @"ETA";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
