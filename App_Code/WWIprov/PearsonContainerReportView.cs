using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Logistics{
    /// <summary>
    /// Strongly-typed collection for the PearsonContainerReportView class.
    /// </summary>
    [Serializable]
    public partial class PearsonContainerReportViewCollection : ReadOnlyList<PearsonContainerReportView, PearsonContainerReportViewCollection>
    {        
        public PearsonContainerReportViewCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the PearsonContainerReportView view.
    /// </summary>
    [Serializable]
    public partial class PearsonContainerReportView : ReadOnlyRecord<PearsonContainerReportView>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("PearsonContainerReportView", TableType.View, DataService.GetInstance("WWIprov"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarContainerNumber = new TableSchema.TableColumn(schema);
                colvarContainerNumber.ColumnName = "ContainerNumber";
                colvarContainerNumber.DataType = DbType.String;
                colvarContainerNumber.MaxLength = 50;
                colvarContainerNumber.AutoIncrement = false;
                colvarContainerNumber.IsNullable = true;
                colvarContainerNumber.IsPrimaryKey = false;
                colvarContainerNumber.IsForeignKey = false;
                colvarContainerNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarContainerNumber);
                
                TableSchema.TableColumn colvarJoined = new TableSchema.TableColumn(schema);
                colvarJoined.ColumnName = "Joined";
                colvarJoined.DataType = DbType.String;
                colvarJoined.MaxLength = 50;
                colvarJoined.AutoIncrement = false;
                colvarJoined.IsNullable = true;
                colvarJoined.IsPrimaryKey = false;
                colvarJoined.IsForeignKey = false;
                colvarJoined.IsReadOnly = false;
                
                schema.Columns.Add(colvarJoined);
                
                TableSchema.TableColumn colvarEta = new TableSchema.TableColumn(schema);
                colvarEta.ColumnName = "ETA";
                colvarEta.DataType = DbType.DateTime;
                colvarEta.MaxLength = 0;
                colvarEta.AutoIncrement = false;
                colvarEta.IsNullable = true;
                colvarEta.IsPrimaryKey = false;
                colvarEta.IsForeignKey = false;
                colvarEta.IsReadOnly = false;
                
                schema.Columns.Add(colvarEta);
                
                TableSchema.TableColumn colvarPortName = new TableSchema.TableColumn(schema);
                colvarPortName.ColumnName = "PortName";
                colvarPortName.DataType = DbType.String;
                colvarPortName.MaxLength = 30;
                colvarPortName.AutoIncrement = false;
                colvarPortName.IsNullable = true;
                colvarPortName.IsPrimaryKey = false;
                colvarPortName.IsForeignKey = false;
                colvarPortName.IsReadOnly = false;
                
                schema.Columns.Add(colvarPortName);
                
                TableSchema.TableColumn colvarTitle = new TableSchema.TableColumn(schema);
                colvarTitle.ColumnName = "Title";
                colvarTitle.DataType = DbType.String;
                colvarTitle.MaxLength = 100;
                colvarTitle.AutoIncrement = false;
                colvarTitle.IsNullable = true;
                colvarTitle.IsPrimaryKey = false;
                colvarTitle.IsForeignKey = false;
                colvarTitle.IsReadOnly = false;
                
                schema.Columns.Add(colvarTitle);
                
                TableSchema.TableColumn colvarCopies = new TableSchema.TableColumn(schema);
                colvarCopies.ColumnName = "Copies";
                colvarCopies.DataType = DbType.Int32;
                colvarCopies.MaxLength = 0;
                colvarCopies.AutoIncrement = false;
                colvarCopies.IsNullable = true;
                colvarCopies.IsPrimaryKey = false;
                colvarCopies.IsForeignKey = false;
                colvarCopies.IsReadOnly = false;
                
                schema.Columns.Add(colvarCopies);
                
                TableSchema.TableColumn colvarIsbn = new TableSchema.TableColumn(schema);
                colvarIsbn.ColumnName = "ISBN";
                colvarIsbn.DataType = DbType.String;
                colvarIsbn.MaxLength = 50;
                colvarIsbn.AutoIncrement = false;
                colvarIsbn.IsNullable = true;
                colvarIsbn.IsPrimaryKey = false;
                colvarIsbn.IsForeignKey = false;
                colvarIsbn.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsbn);
                
                TableSchema.TableColumn colvarImpression = new TableSchema.TableColumn(schema);
                colvarImpression.ColumnName = "Impression";
                colvarImpression.DataType = DbType.String;
                colvarImpression.MaxLength = 50;
                colvarImpression.AutoIncrement = false;
                colvarImpression.IsNullable = true;
                colvarImpression.IsPrimaryKey = false;
                colvarImpression.IsForeignKey = false;
                colvarImpression.IsReadOnly = false;
                
                schema.Columns.Add(colvarImpression);
                
                TableSchema.TableColumn colvarPublishipRef = new TableSchema.TableColumn(schema);
                colvarPublishipRef.ColumnName = "PublishipRef";
                colvarPublishipRef.DataType = DbType.Int32;
                colvarPublishipRef.MaxLength = 0;
                colvarPublishipRef.AutoIncrement = false;
                colvarPublishipRef.IsNullable = true;
                colvarPublishipRef.IsPrimaryKey = false;
                colvarPublishipRef.IsForeignKey = false;
                colvarPublishipRef.IsReadOnly = false;
                
                schema.Columns.Add(colvarPublishipRef);
                
                TableSchema.TableColumn colvarPONumber = new TableSchema.TableColumn(schema);
                colvarPONumber.ColumnName = "PONumber";
                colvarPONumber.DataType = DbType.String;
                colvarPONumber.MaxLength = 50;
                colvarPONumber.AutoIncrement = false;
                colvarPONumber.IsNullable = true;
                colvarPONumber.IsPrimaryKey = false;
                colvarPONumber.IsForeignKey = false;
                colvarPONumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarPONumber);
                
                TableSchema.TableColumn colvarSSRNo = new TableSchema.TableColumn(schema);
                colvarSSRNo.ColumnName = "SSRNo";
                colvarSSRNo.DataType = DbType.String;
                colvarSSRNo.MaxLength = 50;
                colvarSSRNo.AutoIncrement = false;
                colvarSSRNo.IsNullable = true;
                colvarSSRNo.IsPrimaryKey = false;
                colvarSSRNo.IsForeignKey = false;
                colvarSSRNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarSSRNo);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["WWIprov"].AddSchema("PearsonContainerReportView",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public PearsonContainerReportView()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public PearsonContainerReportView(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public PearsonContainerReportView(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public PearsonContainerReportView(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("ContainerNumber")]
        [Bindable(true)]
        public string ContainerNumber 
	    {
		    get
		    {
			    return GetColumnValue<string>("ContainerNumber");
		    }
            set 
		    {
			    SetColumnValue("ContainerNumber", value);
            }
        }
	      
        [XmlAttribute("Joined")]
        [Bindable(true)]
        public string Joined 
	    {
		    get
		    {
			    return GetColumnValue<string>("Joined");
		    }
            set 
		    {
			    SetColumnValue("Joined", value);
            }
        }
	      
        [XmlAttribute("Eta")]
        [Bindable(true)]
        public DateTime? Eta 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ETA");
		    }
            set 
		    {
			    SetColumnValue("ETA", value);
            }
        }
	      
        [XmlAttribute("PortName")]
        [Bindable(true)]
        public string PortName 
	    {
		    get
		    {
			    return GetColumnValue<string>("PortName");
		    }
            set 
		    {
			    SetColumnValue("PortName", value);
            }
        }
	      
        [XmlAttribute("Title")]
        [Bindable(true)]
        public string Title 
	    {
		    get
		    {
			    return GetColumnValue<string>("Title");
		    }
            set 
		    {
			    SetColumnValue("Title", value);
            }
        }
	      
        [XmlAttribute("Copies")]
        [Bindable(true)]
        public int? Copies 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Copies");
		    }
            set 
		    {
			    SetColumnValue("Copies", value);
            }
        }
	      
        [XmlAttribute("Isbn")]
        [Bindable(true)]
        public string Isbn 
	    {
		    get
		    {
			    return GetColumnValue<string>("ISBN");
		    }
            set 
		    {
			    SetColumnValue("ISBN", value);
            }
        }
	      
        [XmlAttribute("Impression")]
        [Bindable(true)]
        public string Impression 
	    {
		    get
		    {
			    return GetColumnValue<string>("Impression");
		    }
            set 
		    {
			    SetColumnValue("Impression", value);
            }
        }
	      
        [XmlAttribute("PublishipRef")]
        [Bindable(true)]
        public int? PublishipRef 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PublishipRef");
		    }
            set 
		    {
			    SetColumnValue("PublishipRef", value);
            }
        }
	      
        [XmlAttribute("PONumber")]
        [Bindable(true)]
        public string PONumber 
	    {
		    get
		    {
			    return GetColumnValue<string>("PONumber");
		    }
            set 
		    {
			    SetColumnValue("PONumber", value);
            }
        }
	      
        [XmlAttribute("SSRNo")]
        [Bindable(true)]
        public string SSRNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("SSRNo");
		    }
            set 
		    {
			    SetColumnValue("SSRNo", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string ContainerNumber = @"ContainerNumber";
            
            public static string Joined = @"Joined";
            
            public static string Eta = @"ETA";
            
            public static string PortName = @"PortName";
            
            public static string Title = @"Title";
            
            public static string Copies = @"Copies";
            
            public static string Isbn = @"ISBN";
            
            public static string Impression = @"Impression";
            
            public static string PublishipRef = @"PublishipRef";
            
            public static string PONumber = @"PONumber";
            
            public static string SSRNo = @"SSRNo";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
