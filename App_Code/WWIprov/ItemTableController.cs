using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Logistics
{
    /// <summary>
    /// Controller class for ItemTable
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class ItemTableController
    {
        // Preload our schema..
        ItemTable thisSchemaLoad = new ItemTable();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public ItemTableCollection FetchAll()
        {
            ItemTableCollection coll = new ItemTableCollection();
            Query qry = new Query(ItemTable.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public ItemTableCollection FetchByID(object TitleID)
        {
            ItemTableCollection coll = new ItemTableCollection().Where("TitleID", TitleID).Load();
            return coll;
        }

        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public ItemTableCollection FetchByOrderNumber(object OrderNumber)
        {
            ItemTableCollection coll = new ItemTableCollection().Where("OrderNumber", OrderNumber).Load();
            return coll;
        }

		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public ItemTableCollection FetchByQuery(Query qry)
        {
            ItemTableCollection coll = new ItemTableCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object TitleID)
        {
            return (ItemTable.Delete(TitleID) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object TitleID)
        {
            return (ItemTable.Destroy(TitleID) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int? OrderNumber,string Title,string Isbn,string SSRNo,DateTime? SSRDate,string Impression,string PONumber,string OtherRef,int? Copies,DateTime? CopiesLastUpdated,string ItemDesc,int? Packages,int? PackageID,int? Weight,int? Volume,double? PerCopy,decimal? TotalValue,byte[] Ts)
	    {
		    ItemTable item = new ItemTable();
		    
            item.OrderNumber = OrderNumber;
            
            item.Title = Title;
            
            item.Isbn = Isbn;
            
            item.SSRNo = SSRNo;
            
            item.SSRDate = SSRDate;
            
            item.Impression = Impression;
            
            item.PONumber = PONumber;
            
            item.OtherRef = OtherRef;
            
            item.Copies = Copies;
            
            item.CopiesLastUpdated = CopiesLastUpdated;
            
            item.ItemDesc = ItemDesc;
            
            item.Packages = Packages;
            
            item.PackageID = PackageID;
            
            item.Weight = Weight;
            
            item.Volume = Volume;
            
            item.PerCopy = PerCopy;
            
            item.TotalValue = TotalValue;
            
            item.Ts = Ts;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int TitleID,int? OrderNumber,string Title,string Isbn,string SSRNo,DateTime? SSRDate,string Impression,string PONumber,string OtherRef,int? Copies,DateTime? CopiesLastUpdated,string ItemDesc,int? Packages,int? PackageID,int? Weight,int? Volume,double? PerCopy,decimal? TotalValue,byte[] Ts)
	    {
		    ItemTable item = new ItemTable();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.TitleID = TitleID;
				
			item.OrderNumber = OrderNumber;
				
			item.Title = Title;
				
			item.Isbn = Isbn;
				
			item.SSRNo = SSRNo;
				
			item.SSRDate = SSRDate;
				
			item.Impression = Impression;
				
			item.PONumber = PONumber;
				
			item.OtherRef = OtherRef;
				
			item.Copies = Copies;
				
			item.CopiesLastUpdated = CopiesLastUpdated;
				
			item.ItemDesc = ItemDesc;
				
			item.Packages = Packages;
				
			item.PackageID = PackageID;
				
			item.Weight = Weight;
				
			item.Volume = Volume;
				
			item.PerCopy = PerCopy;
				
			item.TotalValue = TotalValue;
				
			item.Ts = Ts;
				
	        item.Save(UserName);
	    }
    }
}
