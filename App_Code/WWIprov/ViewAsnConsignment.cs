using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Logistics{
    /// <summary>
    /// Strongly-typed collection for the ViewAsnConsignment class.
    /// </summary>
    [Serializable]
    public partial class ViewAsnConsignmentCollection : ReadOnlyList<ViewAsnConsignment, ViewAsnConsignmentCollection>
    {        
        public ViewAsnConsignmentCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the view_asn_consignment view.
    /// </summary>
    [Serializable]
    public partial class ViewAsnConsignment : ReadOnlyRecord<ViewAsnConsignment>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("view_asn_consignment", TableType.View, DataService.GetInstance("WWIprov"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarOrderID = new TableSchema.TableColumn(schema);
                colvarOrderID.ColumnName = "OrderID";
                colvarOrderID.DataType = DbType.Int32;
                colvarOrderID.MaxLength = 0;
                colvarOrderID.AutoIncrement = false;
                colvarOrderID.IsNullable = true;
                colvarOrderID.IsPrimaryKey = false;
                colvarOrderID.IsForeignKey = false;
                colvarOrderID.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderID);
                
                TableSchema.TableColumn colvarItemId = new TableSchema.TableColumn(schema);
                colvarItemId.ColumnName = "item_id";
                colvarItemId.DataType = DbType.Int32;
                colvarItemId.MaxLength = 0;
                colvarItemId.AutoIncrement = false;
                colvarItemId.IsNullable = false;
                colvarItemId.IsPrimaryKey = false;
                colvarItemId.IsForeignKey = false;
                colvarItemId.IsReadOnly = false;
                
                schema.Columns.Add(colvarItemId);
                
                TableSchema.TableColumn colvarDespatchNoteId = new TableSchema.TableColumn(schema);
                colvarDespatchNoteId.ColumnName = "despatch_note_id";
                colvarDespatchNoteId.DataType = DbType.Int32;
                colvarDespatchNoteId.MaxLength = 0;
                colvarDespatchNoteId.AutoIncrement = false;
                colvarDespatchNoteId.IsNullable = false;
                colvarDespatchNoteId.IsPrimaryKey = false;
                colvarDespatchNoteId.IsForeignKey = false;
                colvarDespatchNoteId.IsReadOnly = false;
                
                schema.Columns.Add(colvarDespatchNoteId);
                
                TableSchema.TableColumn colvarOrderNumber = new TableSchema.TableColumn(schema);
                colvarOrderNumber.ColumnName = "OrderNumber";
                colvarOrderNumber.DataType = DbType.Int32;
                colvarOrderNumber.MaxLength = 0;
                colvarOrderNumber.AutoIncrement = false;
                colvarOrderNumber.IsNullable = true;
                colvarOrderNumber.IsPrimaryKey = false;
                colvarOrderNumber.IsForeignKey = false;
                colvarOrderNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderNumber);
                
                TableSchema.TableColumn colvarStatusDate = new TableSchema.TableColumn(schema);
                colvarStatusDate.ColumnName = "StatusDate";
                colvarStatusDate.DataType = DbType.DateTime;
                colvarStatusDate.MaxLength = 0;
                colvarStatusDate.AutoIncrement = false;
                colvarStatusDate.IsNullable = true;
                colvarStatusDate.IsPrimaryKey = false;
                colvarStatusDate.IsForeignKey = false;
                colvarStatusDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarStatusDate);
                
                TableSchema.TableColumn colvarCurrentStatusDate = new TableSchema.TableColumn(schema);
                colvarCurrentStatusDate.ColumnName = "CurrentStatusDate";
                colvarCurrentStatusDate.DataType = DbType.DateTime;
                colvarCurrentStatusDate.MaxLength = 0;
                colvarCurrentStatusDate.AutoIncrement = false;
                colvarCurrentStatusDate.IsNullable = true;
                colvarCurrentStatusDate.IsPrimaryKey = false;
                colvarCurrentStatusDate.IsForeignKey = false;
                colvarCurrentStatusDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarCurrentStatusDate);
                
                TableSchema.TableColumn colvarDeliveryTo = new TableSchema.TableColumn(schema);
                colvarDeliveryTo.ColumnName = "delivery_to";
                colvarDeliveryTo.DataType = DbType.String;
                colvarDeliveryTo.MaxLength = 50;
                colvarDeliveryTo.AutoIncrement = false;
                colvarDeliveryTo.IsNullable = true;
                colvarDeliveryTo.IsPrimaryKey = false;
                colvarDeliveryTo.IsForeignKey = false;
                colvarDeliveryTo.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeliveryTo);
                
                TableSchema.TableColumn colvarDeliveryAddr1 = new TableSchema.TableColumn(schema);
                colvarDeliveryAddr1.ColumnName = "delivery_addr1";
                colvarDeliveryAddr1.DataType = DbType.String;
                colvarDeliveryAddr1.MaxLength = 40;
                colvarDeliveryAddr1.AutoIncrement = false;
                colvarDeliveryAddr1.IsNullable = true;
                colvarDeliveryAddr1.IsPrimaryKey = false;
                colvarDeliveryAddr1.IsForeignKey = false;
                colvarDeliveryAddr1.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeliveryAddr1);
                
                TableSchema.TableColumn colvarDeliveryAddr2 = new TableSchema.TableColumn(schema);
                colvarDeliveryAddr2.ColumnName = "delivery_addr2";
                colvarDeliveryAddr2.DataType = DbType.String;
                colvarDeliveryAddr2.MaxLength = 40;
                colvarDeliveryAddr2.AutoIncrement = false;
                colvarDeliveryAddr2.IsNullable = true;
                colvarDeliveryAddr2.IsPrimaryKey = false;
                colvarDeliveryAddr2.IsForeignKey = false;
                colvarDeliveryAddr2.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeliveryAddr2);
                
                TableSchema.TableColumn colvarDeliveryAddr3 = new TableSchema.TableColumn(schema);
                colvarDeliveryAddr3.ColumnName = "delivery_addr3";
                colvarDeliveryAddr3.DataType = DbType.String;
                colvarDeliveryAddr3.MaxLength = 40;
                colvarDeliveryAddr3.AutoIncrement = false;
                colvarDeliveryAddr3.IsNullable = true;
                colvarDeliveryAddr3.IsPrimaryKey = false;
                colvarDeliveryAddr3.IsForeignKey = false;
                colvarDeliveryAddr3.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeliveryAddr3);
                
                TableSchema.TableColumn colvarDeliveryPostcode = new TableSchema.TableColumn(schema);
                colvarDeliveryPostcode.ColumnName = "delivery_postcode";
                colvarDeliveryPostcode.DataType = DbType.String;
                colvarDeliveryPostcode.MaxLength = 50;
                colvarDeliveryPostcode.AutoIncrement = false;
                colvarDeliveryPostcode.IsNullable = true;
                colvarDeliveryPostcode.IsPrimaryKey = false;
                colvarDeliveryPostcode.IsForeignKey = false;
                colvarDeliveryPostcode.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeliveryPostcode);
                
                TableSchema.TableColumn colvarDeliveryTelno = new TableSchema.TableColumn(schema);
                colvarDeliveryTelno.ColumnName = "delivery_telno";
                colvarDeliveryTelno.DataType = DbType.String;
                colvarDeliveryTelno.MaxLength = 20;
                colvarDeliveryTelno.AutoIncrement = false;
                colvarDeliveryTelno.IsNullable = true;
                colvarDeliveryTelno.IsPrimaryKey = false;
                colvarDeliveryTelno.IsForeignKey = false;
                colvarDeliveryTelno.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeliveryTelno);
                
                TableSchema.TableColumn colvarCurrentStatus = new TableSchema.TableColumn(schema);
                colvarCurrentStatus.ColumnName = "current_status";
                colvarCurrentStatus.DataType = DbType.String;
                colvarCurrentStatus.MaxLength = 50;
                colvarCurrentStatus.AutoIncrement = false;
                colvarCurrentStatus.IsNullable = true;
                colvarCurrentStatus.IsPrimaryKey = false;
                colvarCurrentStatus.IsForeignKey = false;
                colvarCurrentStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarCurrentStatus);
                
                TableSchema.TableColumn colvarCustomersRef = new TableSchema.TableColumn(schema);
                colvarCustomersRef.ColumnName = "CustomersRef";
                colvarCustomersRef.DataType = DbType.String;
                colvarCustomersRef.MaxLength = 20;
                colvarCustomersRef.AutoIncrement = false;
                colvarCustomersRef.IsNullable = true;
                colvarCustomersRef.IsPrimaryKey = false;
                colvarCustomersRef.IsForeignKey = false;
                colvarCustomersRef.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomersRef);
                
                TableSchema.TableColumn colvarUnitPricePerCopy = new TableSchema.TableColumn(schema);
                colvarUnitPricePerCopy.ColumnName = "UnitPricePerCopy";
                colvarUnitPricePerCopy.DataType = DbType.Single;
                colvarUnitPricePerCopy.MaxLength = 0;
                colvarUnitPricePerCopy.AutoIncrement = false;
                colvarUnitPricePerCopy.IsNullable = true;
                colvarUnitPricePerCopy.IsPrimaryKey = false;
                colvarUnitPricePerCopy.IsForeignKey = false;
                colvarUnitPricePerCopy.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitPricePerCopy);
                
                TableSchema.TableColumn colvarPearsonDivCode = new TableSchema.TableColumn(schema);
                colvarPearsonDivCode.ColumnName = "PearsonDivCode";
                colvarPearsonDivCode.DataType = DbType.String;
                colvarPearsonDivCode.MaxLength = 50;
                colvarPearsonDivCode.AutoIncrement = false;
                colvarPearsonDivCode.IsNullable = true;
                colvarPearsonDivCode.IsPrimaryKey = false;
                colvarPearsonDivCode.IsForeignKey = false;
                colvarPearsonDivCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPearsonDivCode);
                
                TableSchema.TableColumn colvarContainerNumber = new TableSchema.TableColumn(schema);
                colvarContainerNumber.ColumnName = "ContainerNumber";
                colvarContainerNumber.DataType = DbType.String;
                colvarContainerNumber.MaxLength = 50;
                colvarContainerNumber.AutoIncrement = false;
                colvarContainerNumber.IsNullable = true;
                colvarContainerNumber.IsPrimaryKey = false;
                colvarContainerNumber.IsForeignKey = false;
                colvarContainerNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarContainerNumber);
                
                TableSchema.TableColumn colvarBuyerName = new TableSchema.TableColumn(schema);
                colvarBuyerName.ColumnName = "buyer_name";
                colvarBuyerName.DataType = DbType.String;
                colvarBuyerName.MaxLength = 50;
                colvarBuyerName.AutoIncrement = false;
                colvarBuyerName.IsNullable = true;
                colvarBuyerName.IsPrimaryKey = false;
                colvarBuyerName.IsForeignKey = false;
                colvarBuyerName.IsReadOnly = false;
                
                schema.Columns.Add(colvarBuyerName);
                
                TableSchema.TableColumn colvarBuyerAddr1 = new TableSchema.TableColumn(schema);
                colvarBuyerAddr1.ColumnName = "buyer_addr1";
                colvarBuyerAddr1.DataType = DbType.String;
                colvarBuyerAddr1.MaxLength = 40;
                colvarBuyerAddr1.AutoIncrement = false;
                colvarBuyerAddr1.IsNullable = true;
                colvarBuyerAddr1.IsPrimaryKey = false;
                colvarBuyerAddr1.IsForeignKey = false;
                colvarBuyerAddr1.IsReadOnly = false;
                
                schema.Columns.Add(colvarBuyerAddr1);
                
                TableSchema.TableColumn colvarBuyerAddr2 = new TableSchema.TableColumn(schema);
                colvarBuyerAddr2.ColumnName = "buyer_addr2";
                colvarBuyerAddr2.DataType = DbType.String;
                colvarBuyerAddr2.MaxLength = 40;
                colvarBuyerAddr2.AutoIncrement = false;
                colvarBuyerAddr2.IsNullable = true;
                colvarBuyerAddr2.IsPrimaryKey = false;
                colvarBuyerAddr2.IsForeignKey = false;
                colvarBuyerAddr2.IsReadOnly = false;
                
                schema.Columns.Add(colvarBuyerAddr2);
                
                TableSchema.TableColumn colvarBuyerAddr3 = new TableSchema.TableColumn(schema);
                colvarBuyerAddr3.ColumnName = "buyer_addr3";
                colvarBuyerAddr3.DataType = DbType.String;
                colvarBuyerAddr3.MaxLength = 40;
                colvarBuyerAddr3.AutoIncrement = false;
                colvarBuyerAddr3.IsNullable = true;
                colvarBuyerAddr3.IsPrimaryKey = false;
                colvarBuyerAddr3.IsForeignKey = false;
                colvarBuyerAddr3.IsReadOnly = false;
                
                schema.Columns.Add(colvarBuyerAddr3);
                
                TableSchema.TableColumn colvarBuyerPostcode = new TableSchema.TableColumn(schema);
                colvarBuyerPostcode.ColumnName = "buyer_postcode";
                colvarBuyerPostcode.DataType = DbType.String;
                colvarBuyerPostcode.MaxLength = 50;
                colvarBuyerPostcode.AutoIncrement = false;
                colvarBuyerPostcode.IsNullable = true;
                colvarBuyerPostcode.IsPrimaryKey = false;
                colvarBuyerPostcode.IsForeignKey = false;
                colvarBuyerPostcode.IsReadOnly = false;
                
                schema.Columns.Add(colvarBuyerPostcode);
                
                TableSchema.TableColumn colvarPrinterName = new TableSchema.TableColumn(schema);
                colvarPrinterName.ColumnName = "printer_name";
                colvarPrinterName.DataType = DbType.String;
                colvarPrinterName.MaxLength = 50;
                colvarPrinterName.AutoIncrement = false;
                colvarPrinterName.IsNullable = true;
                colvarPrinterName.IsPrimaryKey = false;
                colvarPrinterName.IsForeignKey = false;
                colvarPrinterName.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinterName);
                
                TableSchema.TableColumn colvarPrinterAddr1 = new TableSchema.TableColumn(schema);
                colvarPrinterAddr1.ColumnName = "printer_addr1";
                colvarPrinterAddr1.DataType = DbType.String;
                colvarPrinterAddr1.MaxLength = 40;
                colvarPrinterAddr1.AutoIncrement = false;
                colvarPrinterAddr1.IsNullable = true;
                colvarPrinterAddr1.IsPrimaryKey = false;
                colvarPrinterAddr1.IsForeignKey = false;
                colvarPrinterAddr1.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinterAddr1);
                
                TableSchema.TableColumn colvarPrinterAddr2 = new TableSchema.TableColumn(schema);
                colvarPrinterAddr2.ColumnName = "printer_addr2";
                colvarPrinterAddr2.DataType = DbType.String;
                colvarPrinterAddr2.MaxLength = 40;
                colvarPrinterAddr2.AutoIncrement = false;
                colvarPrinterAddr2.IsNullable = true;
                colvarPrinterAddr2.IsPrimaryKey = false;
                colvarPrinterAddr2.IsForeignKey = false;
                colvarPrinterAddr2.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinterAddr2);
                
                TableSchema.TableColumn colvarPrinterAddr3 = new TableSchema.TableColumn(schema);
                colvarPrinterAddr3.ColumnName = "printer_addr3";
                colvarPrinterAddr3.DataType = DbType.String;
                colvarPrinterAddr3.MaxLength = 40;
                colvarPrinterAddr3.AutoIncrement = false;
                colvarPrinterAddr3.IsNullable = true;
                colvarPrinterAddr3.IsPrimaryKey = false;
                colvarPrinterAddr3.IsForeignKey = false;
                colvarPrinterAddr3.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinterAddr3);
                
                TableSchema.TableColumn colvarPrinterPostcode = new TableSchema.TableColumn(schema);
                colvarPrinterPostcode.ColumnName = "printer_postcode";
                colvarPrinterPostcode.DataType = DbType.String;
                colvarPrinterPostcode.MaxLength = 50;
                colvarPrinterPostcode.AutoIncrement = false;
                colvarPrinterPostcode.IsNullable = true;
                colvarPrinterPostcode.IsPrimaryKey = false;
                colvarPrinterPostcode.IsForeignKey = false;
                colvarPrinterPostcode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinterPostcode);
                
                TableSchema.TableColumn colvarPublishipRef = new TableSchema.TableColumn(schema);
                colvarPublishipRef.ColumnName = "publiship_ref";
                colvarPublishipRef.DataType = DbType.String;
                colvarPublishipRef.MaxLength = 20;
                colvarPublishipRef.AutoIncrement = false;
                colvarPublishipRef.IsNullable = true;
                colvarPublishipRef.IsPrimaryKey = false;
                colvarPublishipRef.IsForeignKey = false;
                colvarPublishipRef.IsReadOnly = false;
                
                schema.Columns.Add(colvarPublishipRef);
                
                TableSchema.TableColumn colvarBuyersOrderNumber = new TableSchema.TableColumn(schema);
                colvarBuyersOrderNumber.ColumnName = "buyers_order_number";
                colvarBuyersOrderNumber.DataType = DbType.String;
                colvarBuyersOrderNumber.MaxLength = 50;
                colvarBuyersOrderNumber.AutoIncrement = false;
                colvarBuyersOrderNumber.IsNullable = true;
                colvarBuyersOrderNumber.IsPrimaryKey = false;
                colvarBuyersOrderNumber.IsForeignKey = false;
                colvarBuyersOrderNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarBuyersOrderNumber);
                
                TableSchema.TableColumn colvarPrintersJobNumber = new TableSchema.TableColumn(schema);
                colvarPrintersJobNumber.ColumnName = "printers_job_number";
                colvarPrintersJobNumber.DataType = DbType.String;
                colvarPrintersJobNumber.MaxLength = 50;
                colvarPrintersJobNumber.AutoIncrement = false;
                colvarPrintersJobNumber.IsNullable = true;
                colvarPrintersJobNumber.IsPrimaryKey = false;
                colvarPrintersJobNumber.IsForeignKey = false;
                colvarPrintersJobNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrintersJobNumber);
                
                TableSchema.TableColumn colvarIsbn = new TableSchema.TableColumn(schema);
                colvarIsbn.ColumnName = "isbn";
                colvarIsbn.DataType = DbType.String;
                colvarIsbn.MaxLength = 20;
                colvarIsbn.AutoIncrement = false;
                colvarIsbn.IsNullable = true;
                colvarIsbn.IsPrimaryKey = false;
                colvarIsbn.IsForeignKey = false;
                colvarIsbn.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsbn);
                
                TableSchema.TableColumn colvarTitle = new TableSchema.TableColumn(schema);
                colvarTitle.ColumnName = "title";
                colvarTitle.DataType = DbType.String;
                colvarTitle.MaxLength = 100;
                colvarTitle.AutoIncrement = false;
                colvarTitle.IsNullable = true;
                colvarTitle.IsPrimaryKey = false;
                colvarTitle.IsForeignKey = false;
                colvarTitle.IsReadOnly = false;
                
                schema.Columns.Add(colvarTitle);
                
                TableSchema.TableColumn colvarImpression = new TableSchema.TableColumn(schema);
                colvarImpression.ColumnName = "impression";
                colvarImpression.DataType = DbType.String;
                colvarImpression.MaxLength = 10;
                colvarImpression.AutoIncrement = false;
                colvarImpression.IsNullable = true;
                colvarImpression.IsPrimaryKey = false;
                colvarImpression.IsForeignKey = false;
                colvarImpression.IsReadOnly = false;
                
                schema.Columns.Add(colvarImpression);
                
                TableSchema.TableColumn colvarTotalQty = new TableSchema.TableColumn(schema);
                colvarTotalQty.ColumnName = "total_qty";
                colvarTotalQty.DataType = DbType.Int32;
                colvarTotalQty.MaxLength = 0;
                colvarTotalQty.AutoIncrement = false;
                colvarTotalQty.IsNullable = true;
                colvarTotalQty.IsPrimaryKey = false;
                colvarTotalQty.IsForeignKey = false;
                colvarTotalQty.IsReadOnly = false;
                
                schema.Columns.Add(colvarTotalQty);
                
                TableSchema.TableColumn colvarFullPallets = new TableSchema.TableColumn(schema);
                colvarFullPallets.ColumnName = "full_pallets";
                colvarFullPallets.DataType = DbType.Int32;
                colvarFullPallets.MaxLength = 0;
                colvarFullPallets.AutoIncrement = false;
                colvarFullPallets.IsNullable = true;
                colvarFullPallets.IsPrimaryKey = false;
                colvarFullPallets.IsForeignKey = false;
                colvarFullPallets.IsReadOnly = false;
                
                schema.Columns.Add(colvarFullPallets);
                
                TableSchema.TableColumn colvarUnitsFull = new TableSchema.TableColumn(schema);
                colvarUnitsFull.ColumnName = "units_full";
                colvarUnitsFull.DataType = DbType.Int32;
                colvarUnitsFull.MaxLength = 0;
                colvarUnitsFull.AutoIncrement = false;
                colvarUnitsFull.IsNullable = true;
                colvarUnitsFull.IsPrimaryKey = false;
                colvarUnitsFull.IsForeignKey = false;
                colvarUnitsFull.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitsFull);
                
                TableSchema.TableColumn colvarPartPallets = new TableSchema.TableColumn(schema);
                colvarPartPallets.ColumnName = "part_pallets";
                colvarPartPallets.DataType = DbType.Int32;
                colvarPartPallets.MaxLength = 0;
                colvarPartPallets.AutoIncrement = false;
                colvarPartPallets.IsNullable = true;
                colvarPartPallets.IsPrimaryKey = false;
                colvarPartPallets.IsForeignKey = false;
                colvarPartPallets.IsReadOnly = false;
                
                schema.Columns.Add(colvarPartPallets);
                
                TableSchema.TableColumn colvarUnitsPart = new TableSchema.TableColumn(schema);
                colvarUnitsPart.ColumnName = "units_part";
                colvarUnitsPart.DataType = DbType.Int32;
                colvarUnitsPart.MaxLength = 0;
                colvarUnitsPart.AutoIncrement = false;
                colvarUnitsPart.IsNullable = true;
                colvarUnitsPart.IsPrimaryKey = false;
                colvarUnitsPart.IsForeignKey = false;
                colvarUnitsPart.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitsPart);
                
                TableSchema.TableColumn colvarParcelCount = new TableSchema.TableColumn(schema);
                colvarParcelCount.ColumnName = "parcel_count";
                colvarParcelCount.DataType = DbType.Int32;
                colvarParcelCount.MaxLength = 0;
                colvarParcelCount.AutoIncrement = false;
                colvarParcelCount.IsNullable = true;
                colvarParcelCount.IsPrimaryKey = false;
                colvarParcelCount.IsForeignKey = false;
                colvarParcelCount.IsReadOnly = false;
                
                schema.Columns.Add(colvarParcelCount);
                
                TableSchema.TableColumn colvarUnitsPerParcel = new TableSchema.TableColumn(schema);
                colvarUnitsPerParcel.ColumnName = "units_per_parcel";
                colvarUnitsPerParcel.DataType = DbType.Int32;
                colvarUnitsPerParcel.MaxLength = 0;
                colvarUnitsPerParcel.AutoIncrement = false;
                colvarUnitsPerParcel.IsNullable = true;
                colvarUnitsPerParcel.IsPrimaryKey = false;
                colvarUnitsPerParcel.IsForeignKey = false;
                colvarUnitsPerParcel.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitsPerParcel);
                
                TableSchema.TableColumn colvarParcelsPerLayer = new TableSchema.TableColumn(schema);
                colvarParcelsPerLayer.ColumnName = "parcels_per_layer";
                colvarParcelsPerLayer.DataType = DbType.Int32;
                colvarParcelsPerLayer.MaxLength = 0;
                colvarParcelsPerLayer.AutoIncrement = false;
                colvarParcelsPerLayer.IsNullable = true;
                colvarParcelsPerLayer.IsPrimaryKey = false;
                colvarParcelsPerLayer.IsForeignKey = false;
                colvarParcelsPerLayer.IsReadOnly = false;
                
                schema.Columns.Add(colvarParcelsPerLayer);
                
                TableSchema.TableColumn colvarOddsCount = new TableSchema.TableColumn(schema);
                colvarOddsCount.ColumnName = "odds_count";
                colvarOddsCount.DataType = DbType.Int32;
                colvarOddsCount.MaxLength = 0;
                colvarOddsCount.AutoIncrement = false;
                colvarOddsCount.IsNullable = true;
                colvarOddsCount.IsPrimaryKey = false;
                colvarOddsCount.IsForeignKey = false;
                colvarOddsCount.IsReadOnly = false;
                
                schema.Columns.Add(colvarOddsCount);
                
                TableSchema.TableColumn colvarHeight = new TableSchema.TableColumn(schema);
                colvarHeight.ColumnName = "height";
                colvarHeight.DataType = DbType.Decimal;
                colvarHeight.MaxLength = 0;
                colvarHeight.AutoIncrement = false;
                colvarHeight.IsNullable = true;
                colvarHeight.IsPrimaryKey = false;
                colvarHeight.IsForeignKey = false;
                colvarHeight.IsReadOnly = false;
                
                schema.Columns.Add(colvarHeight);
                
                TableSchema.TableColumn colvarWidth = new TableSchema.TableColumn(schema);
                colvarWidth.ColumnName = "width";
                colvarWidth.DataType = DbType.Decimal;
                colvarWidth.MaxLength = 0;
                colvarWidth.AutoIncrement = false;
                colvarWidth.IsNullable = true;
                colvarWidth.IsPrimaryKey = false;
                colvarWidth.IsForeignKey = false;
                colvarWidth.IsReadOnly = false;
                
                schema.Columns.Add(colvarWidth);
                
                TableSchema.TableColumn colvarDepth = new TableSchema.TableColumn(schema);
                colvarDepth.ColumnName = "depth";
                colvarDepth.DataType = DbType.Decimal;
                colvarDepth.MaxLength = 0;
                colvarDepth.AutoIncrement = false;
                colvarDepth.IsNullable = true;
                colvarDepth.IsPrimaryKey = false;
                colvarDepth.IsForeignKey = false;
                colvarDepth.IsReadOnly = false;
                
                schema.Columns.Add(colvarDepth);
                
                TableSchema.TableColumn colvarUnitNetWeight = new TableSchema.TableColumn(schema);
                colvarUnitNetWeight.ColumnName = "unit_net_weight";
                colvarUnitNetWeight.DataType = DbType.Decimal;
                colvarUnitNetWeight.MaxLength = 0;
                colvarUnitNetWeight.AutoIncrement = false;
                colvarUnitNetWeight.IsNullable = true;
                colvarUnitNetWeight.IsPrimaryKey = false;
                colvarUnitNetWeight.IsForeignKey = false;
                colvarUnitNetWeight.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitNetWeight);
                
                TableSchema.TableColumn colvarParcelHeight = new TableSchema.TableColumn(schema);
                colvarParcelHeight.ColumnName = "parcel_height";
                colvarParcelHeight.DataType = DbType.Decimal;
                colvarParcelHeight.MaxLength = 0;
                colvarParcelHeight.AutoIncrement = false;
                colvarParcelHeight.IsNullable = true;
                colvarParcelHeight.IsPrimaryKey = false;
                colvarParcelHeight.IsForeignKey = false;
                colvarParcelHeight.IsReadOnly = false;
                
                schema.Columns.Add(colvarParcelHeight);
                
                TableSchema.TableColumn colvarParcelWidth = new TableSchema.TableColumn(schema);
                colvarParcelWidth.ColumnName = "parcel_width";
                colvarParcelWidth.DataType = DbType.Decimal;
                colvarParcelWidth.MaxLength = 0;
                colvarParcelWidth.AutoIncrement = false;
                colvarParcelWidth.IsNullable = true;
                colvarParcelWidth.IsPrimaryKey = false;
                colvarParcelWidth.IsForeignKey = false;
                colvarParcelWidth.IsReadOnly = false;
                
                schema.Columns.Add(colvarParcelWidth);
                
                TableSchema.TableColumn colvarParcelDepth = new TableSchema.TableColumn(schema);
                colvarParcelDepth.ColumnName = "parcel_depth";
                colvarParcelDepth.DataType = DbType.Decimal;
                colvarParcelDepth.MaxLength = 0;
                colvarParcelDepth.AutoIncrement = false;
                colvarParcelDepth.IsNullable = true;
                colvarParcelDepth.IsPrimaryKey = false;
                colvarParcelDepth.IsForeignKey = false;
                colvarParcelDepth.IsReadOnly = false;
                
                schema.Columns.Add(colvarParcelDepth);
                
                TableSchema.TableColumn colvarParcelUnitgrossweight = new TableSchema.TableColumn(schema);
                colvarParcelUnitgrossweight.ColumnName = "parcel_unitgrossweight";
                colvarParcelUnitgrossweight.DataType = DbType.Decimal;
                colvarParcelUnitgrossweight.MaxLength = 0;
                colvarParcelUnitgrossweight.AutoIncrement = false;
                colvarParcelUnitgrossweight.IsNullable = true;
                colvarParcelUnitgrossweight.IsPrimaryKey = false;
                colvarParcelUnitgrossweight.IsForeignKey = false;
                colvarParcelUnitgrossweight.IsReadOnly = false;
                
                schema.Columns.Add(colvarParcelUnitgrossweight);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["WWIprov"].AddSchema("view_asn_consignment",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewAsnConsignment()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewAsnConsignment(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewAsnConsignment(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewAsnConsignment(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("OrderID")]
        [Bindable(true)]
        public int? OrderID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OrderID");
		    }
            set 
		    {
			    SetColumnValue("OrderID", value);
            }
        }
	      
        [XmlAttribute("ItemId")]
        [Bindable(true)]
        public int ItemId 
	    {
		    get
		    {
			    return GetColumnValue<int>("item_id");
		    }
            set 
		    {
			    SetColumnValue("item_id", value);
            }
        }
	      
        [XmlAttribute("DespatchNoteId")]
        [Bindable(true)]
        public int DespatchNoteId 
	    {
		    get
		    {
			    return GetColumnValue<int>("despatch_note_id");
		    }
            set 
		    {
			    SetColumnValue("despatch_note_id", value);
            }
        }
	      
        [XmlAttribute("OrderNumber")]
        [Bindable(true)]
        public int? OrderNumber 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OrderNumber");
		    }
            set 
		    {
			    SetColumnValue("OrderNumber", value);
            }
        }
	      
        [XmlAttribute("StatusDate")]
        [Bindable(true)]
        public DateTime? StatusDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("StatusDate");
		    }
            set 
		    {
			    SetColumnValue("StatusDate", value);
            }
        }
	      
        [XmlAttribute("CurrentStatusDate")]
        [Bindable(true)]
        public DateTime? CurrentStatusDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("CurrentStatusDate");
		    }
            set 
		    {
			    SetColumnValue("CurrentStatusDate", value);
            }
        }
	      
        [XmlAttribute("DeliveryTo")]
        [Bindable(true)]
        public string DeliveryTo 
	    {
		    get
		    {
			    return GetColumnValue<string>("delivery_to");
		    }
            set 
		    {
			    SetColumnValue("delivery_to", value);
            }
        }
	      
        [XmlAttribute("DeliveryAddr1")]
        [Bindable(true)]
        public string DeliveryAddr1 
	    {
		    get
		    {
			    return GetColumnValue<string>("delivery_addr1");
		    }
            set 
		    {
			    SetColumnValue("delivery_addr1", value);
            }
        }
	      
        [XmlAttribute("DeliveryAddr2")]
        [Bindable(true)]
        public string DeliveryAddr2 
	    {
		    get
		    {
			    return GetColumnValue<string>("delivery_addr2");
		    }
            set 
		    {
			    SetColumnValue("delivery_addr2", value);
            }
        }
	      
        [XmlAttribute("DeliveryAddr3")]
        [Bindable(true)]
        public string DeliveryAddr3 
	    {
		    get
		    {
			    return GetColumnValue<string>("delivery_addr3");
		    }
            set 
		    {
			    SetColumnValue("delivery_addr3", value);
            }
        }
	      
        [XmlAttribute("DeliveryPostcode")]
        [Bindable(true)]
        public string DeliveryPostcode 
	    {
		    get
		    {
			    return GetColumnValue<string>("delivery_postcode");
		    }
            set 
		    {
			    SetColumnValue("delivery_postcode", value);
            }
        }
	      
        [XmlAttribute("DeliveryTelno")]
        [Bindable(true)]
        public string DeliveryTelno 
	    {
		    get
		    {
			    return GetColumnValue<string>("delivery_telno");
		    }
            set 
		    {
			    SetColumnValue("delivery_telno", value);
            }
        }
	      
        [XmlAttribute("CurrentStatus")]
        [Bindable(true)]
        public string CurrentStatus 
	    {
		    get
		    {
			    return GetColumnValue<string>("current_status");
		    }
            set 
		    {
			    SetColumnValue("current_status", value);
            }
        }
	      
        [XmlAttribute("CustomersRef")]
        [Bindable(true)]
        public string CustomersRef 
	    {
		    get
		    {
			    return GetColumnValue<string>("CustomersRef");
		    }
            set 
		    {
			    SetColumnValue("CustomersRef", value);
            }
        }
	      
        [XmlAttribute("UnitPricePerCopy")]
        [Bindable(true)]
        public float? UnitPricePerCopy 
	    {
		    get
		    {
			    return GetColumnValue<float?>("UnitPricePerCopy");
		    }
            set 
		    {
			    SetColumnValue("UnitPricePerCopy", value);
            }
        }
	      
        [XmlAttribute("PearsonDivCode")]
        [Bindable(true)]
        public string PearsonDivCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("PearsonDivCode");
		    }
            set 
		    {
			    SetColumnValue("PearsonDivCode", value);
            }
        }
	      
        [XmlAttribute("ContainerNumber")]
        [Bindable(true)]
        public string ContainerNumber 
	    {
		    get
		    {
			    return GetColumnValue<string>("ContainerNumber");
		    }
            set 
		    {
			    SetColumnValue("ContainerNumber", value);
            }
        }
	      
        [XmlAttribute("BuyerName")]
        [Bindable(true)]
        public string BuyerName 
	    {
		    get
		    {
			    return GetColumnValue<string>("buyer_name");
		    }
            set 
		    {
			    SetColumnValue("buyer_name", value);
            }
        }
	      
        [XmlAttribute("BuyerAddr1")]
        [Bindable(true)]
        public string BuyerAddr1 
	    {
		    get
		    {
			    return GetColumnValue<string>("buyer_addr1");
		    }
            set 
		    {
			    SetColumnValue("buyer_addr1", value);
            }
        }
	      
        [XmlAttribute("BuyerAddr2")]
        [Bindable(true)]
        public string BuyerAddr2 
	    {
		    get
		    {
			    return GetColumnValue<string>("buyer_addr2");
		    }
            set 
		    {
			    SetColumnValue("buyer_addr2", value);
            }
        }
	      
        [XmlAttribute("BuyerAddr3")]
        [Bindable(true)]
        public string BuyerAddr3 
	    {
		    get
		    {
			    return GetColumnValue<string>("buyer_addr3");
		    }
            set 
		    {
			    SetColumnValue("buyer_addr3", value);
            }
        }
	      
        [XmlAttribute("BuyerPostcode")]
        [Bindable(true)]
        public string BuyerPostcode 
	    {
		    get
		    {
			    return GetColumnValue<string>("buyer_postcode");
		    }
            set 
		    {
			    SetColumnValue("buyer_postcode", value);
            }
        }
	      
        [XmlAttribute("PrinterName")]
        [Bindable(true)]
        public string PrinterName 
	    {
		    get
		    {
			    return GetColumnValue<string>("printer_name");
		    }
            set 
		    {
			    SetColumnValue("printer_name", value);
            }
        }
	      
        [XmlAttribute("PrinterAddr1")]
        [Bindable(true)]
        public string PrinterAddr1 
	    {
		    get
		    {
			    return GetColumnValue<string>("printer_addr1");
		    }
            set 
		    {
			    SetColumnValue("printer_addr1", value);
            }
        }
	      
        [XmlAttribute("PrinterAddr2")]
        [Bindable(true)]
        public string PrinterAddr2 
	    {
		    get
		    {
			    return GetColumnValue<string>("printer_addr2");
		    }
            set 
		    {
			    SetColumnValue("printer_addr2", value);
            }
        }
	      
        [XmlAttribute("PrinterAddr3")]
        [Bindable(true)]
        public string PrinterAddr3 
	    {
		    get
		    {
			    return GetColumnValue<string>("printer_addr3");
		    }
            set 
		    {
			    SetColumnValue("printer_addr3", value);
            }
        }
	      
        [XmlAttribute("PrinterPostcode")]
        [Bindable(true)]
        public string PrinterPostcode 
	    {
		    get
		    {
			    return GetColumnValue<string>("printer_postcode");
		    }
            set 
		    {
			    SetColumnValue("printer_postcode", value);
            }
        }
	      
        [XmlAttribute("PublishipRef")]
        [Bindable(true)]
        public string PublishipRef 
	    {
		    get
		    {
			    return GetColumnValue<string>("publiship_ref");
		    }
            set 
		    {
			    SetColumnValue("publiship_ref", value);
            }
        }
	      
        [XmlAttribute("BuyersOrderNumber")]
        [Bindable(true)]
        public string BuyersOrderNumber 
	    {
		    get
		    {
			    return GetColumnValue<string>("buyers_order_number");
		    }
            set 
		    {
			    SetColumnValue("buyers_order_number", value);
            }
        }
	      
        [XmlAttribute("PrintersJobNumber")]
        [Bindable(true)]
        public string PrintersJobNumber 
	    {
		    get
		    {
			    return GetColumnValue<string>("printers_job_number");
		    }
            set 
		    {
			    SetColumnValue("printers_job_number", value);
            }
        }
	      
        [XmlAttribute("Isbn")]
        [Bindable(true)]
        public string Isbn 
	    {
		    get
		    {
			    return GetColumnValue<string>("isbn");
		    }
            set 
		    {
			    SetColumnValue("isbn", value);
            }
        }
	      
        [XmlAttribute("Title")]
        [Bindable(true)]
        public string Title 
	    {
		    get
		    {
			    return GetColumnValue<string>("title");
		    }
            set 
		    {
			    SetColumnValue("title", value);
            }
        }
	      
        [XmlAttribute("Impression")]
        [Bindable(true)]
        public string Impression 
	    {
		    get
		    {
			    return GetColumnValue<string>("impression");
		    }
            set 
		    {
			    SetColumnValue("impression", value);
            }
        }
	      
        [XmlAttribute("TotalQty")]
        [Bindable(true)]
        public int? TotalQty 
	    {
		    get
		    {
			    return GetColumnValue<int?>("total_qty");
		    }
            set 
		    {
			    SetColumnValue("total_qty", value);
            }
        }
	      
        [XmlAttribute("FullPallets")]
        [Bindable(true)]
        public int? FullPallets 
	    {
		    get
		    {
			    return GetColumnValue<int?>("full_pallets");
		    }
            set 
		    {
			    SetColumnValue("full_pallets", value);
            }
        }
	      
        [XmlAttribute("UnitsFull")]
        [Bindable(true)]
        public int? UnitsFull 
	    {
		    get
		    {
			    return GetColumnValue<int?>("units_full");
		    }
            set 
		    {
			    SetColumnValue("units_full", value);
            }
        }
	      
        [XmlAttribute("PartPallets")]
        [Bindable(true)]
        public int? PartPallets 
	    {
		    get
		    {
			    return GetColumnValue<int?>("part_pallets");
		    }
            set 
		    {
			    SetColumnValue("part_pallets", value);
            }
        }
	      
        [XmlAttribute("UnitsPart")]
        [Bindable(true)]
        public int? UnitsPart 
	    {
		    get
		    {
			    return GetColumnValue<int?>("units_part");
		    }
            set 
		    {
			    SetColumnValue("units_part", value);
            }
        }
	      
        [XmlAttribute("ParcelCount")]
        [Bindable(true)]
        public int? ParcelCount 
	    {
		    get
		    {
			    return GetColumnValue<int?>("parcel_count");
		    }
            set 
		    {
			    SetColumnValue("parcel_count", value);
            }
        }
	      
        [XmlAttribute("UnitsPerParcel")]
        [Bindable(true)]
        public int? UnitsPerParcel 
	    {
		    get
		    {
			    return GetColumnValue<int?>("units_per_parcel");
		    }
            set 
		    {
			    SetColumnValue("units_per_parcel", value);
            }
        }
	      
        [XmlAttribute("ParcelsPerLayer")]
        [Bindable(true)]
        public int? ParcelsPerLayer 
	    {
		    get
		    {
			    return GetColumnValue<int?>("parcels_per_layer");
		    }
            set 
		    {
			    SetColumnValue("parcels_per_layer", value);
            }
        }
	      
        [XmlAttribute("OddsCount")]
        [Bindable(true)]
        public int? OddsCount 
	    {
		    get
		    {
			    return GetColumnValue<int?>("odds_count");
		    }
            set 
		    {
			    SetColumnValue("odds_count", value);
            }
        }
	      
        [XmlAttribute("Height")]
        [Bindable(true)]
        public decimal? Height 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("height");
		    }
            set 
		    {
			    SetColumnValue("height", value);
            }
        }
	      
        [XmlAttribute("Width")]
        [Bindable(true)]
        public decimal? Width 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("width");
		    }
            set 
		    {
			    SetColumnValue("width", value);
            }
        }
	      
        [XmlAttribute("Depth")]
        [Bindable(true)]
        public decimal? Depth 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("depth");
		    }
            set 
		    {
			    SetColumnValue("depth", value);
            }
        }
	      
        [XmlAttribute("UnitNetWeight")]
        [Bindable(true)]
        public decimal? UnitNetWeight 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("unit_net_weight");
		    }
            set 
		    {
			    SetColumnValue("unit_net_weight", value);
            }
        }
	      
        [XmlAttribute("ParcelHeight")]
        [Bindable(true)]
        public decimal? ParcelHeight 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("parcel_height");
		    }
            set 
		    {
			    SetColumnValue("parcel_height", value);
            }
        }
	      
        [XmlAttribute("ParcelWidth")]
        [Bindable(true)]
        public decimal? ParcelWidth 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("parcel_width");
		    }
            set 
		    {
			    SetColumnValue("parcel_width", value);
            }
        }
	      
        [XmlAttribute("ParcelDepth")]
        [Bindable(true)]
        public decimal? ParcelDepth 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("parcel_depth");
		    }
            set 
		    {
			    SetColumnValue("parcel_depth", value);
            }
        }
	      
        [XmlAttribute("ParcelUnitgrossweight")]
        [Bindable(true)]
        public decimal? ParcelUnitgrossweight 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("parcel_unitgrossweight");
		    }
            set 
		    {
			    SetColumnValue("parcel_unitgrossweight", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string OrderID = @"OrderID";
            
            public static string ItemId = @"item_id";
            
            public static string DespatchNoteId = @"despatch_note_id";
            
            public static string OrderNumber = @"OrderNumber";
            
            public static string StatusDate = @"StatusDate";
            
            public static string CurrentStatusDate = @"CurrentStatusDate";
            
            public static string DeliveryTo = @"delivery_to";
            
            public static string DeliveryAddr1 = @"delivery_addr1";
            
            public static string DeliveryAddr2 = @"delivery_addr2";
            
            public static string DeliveryAddr3 = @"delivery_addr3";
            
            public static string DeliveryPostcode = @"delivery_postcode";
            
            public static string DeliveryTelno = @"delivery_telno";
            
            public static string CurrentStatus = @"current_status";
            
            public static string CustomersRef = @"CustomersRef";
            
            public static string UnitPricePerCopy = @"UnitPricePerCopy";
            
            public static string PearsonDivCode = @"PearsonDivCode";
            
            public static string ContainerNumber = @"ContainerNumber";
            
            public static string BuyerName = @"buyer_name";
            
            public static string BuyerAddr1 = @"buyer_addr1";
            
            public static string BuyerAddr2 = @"buyer_addr2";
            
            public static string BuyerAddr3 = @"buyer_addr3";
            
            public static string BuyerPostcode = @"buyer_postcode";
            
            public static string PrinterName = @"printer_name";
            
            public static string PrinterAddr1 = @"printer_addr1";
            
            public static string PrinterAddr2 = @"printer_addr2";
            
            public static string PrinterAddr3 = @"printer_addr3";
            
            public static string PrinterPostcode = @"printer_postcode";
            
            public static string PublishipRef = @"publiship_ref";
            
            public static string BuyersOrderNumber = @"buyers_order_number";
            
            public static string PrintersJobNumber = @"printers_job_number";
            
            public static string Isbn = @"isbn";
            
            public static string Title = @"title";
            
            public static string Impression = @"impression";
            
            public static string TotalQty = @"total_qty";
            
            public static string FullPallets = @"full_pallets";
            
            public static string UnitsFull = @"units_full";
            
            public static string PartPallets = @"part_pallets";
            
            public static string UnitsPart = @"units_part";
            
            public static string ParcelCount = @"parcel_count";
            
            public static string UnitsPerParcel = @"units_per_parcel";
            
            public static string ParcelsPerLayer = @"parcels_per_layer";
            
            public static string OddsCount = @"odds_count";
            
            public static string Height = @"height";
            
            public static string Width = @"width";
            
            public static string Depth = @"depth";
            
            public static string UnitNetWeight = @"unit_net_weight";
            
            public static string ParcelHeight = @"parcel_height";
            
            public static string ParcelWidth = @"parcel_width";
            
            public static string ParcelDepth = @"parcel_depth";
            
            public static string ParcelUnitgrossweight = @"parcel_unitgrossweight";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
