using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Logistics{
    /// <summary>
    /// Strongly-typed collection for the DeliverySubReportView class.
    /// </summary>
    [Serializable]
    public partial class DeliverySubReportViewCollection : ReadOnlyList<DeliverySubReportView, DeliverySubReportViewCollection>
    {        
        public DeliverySubReportViewCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the DeliverySubReportView view.
    /// </summary>
    [Serializable]
    public partial class DeliverySubReportView : ReadOnlyRecord<DeliverySubReportView>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("DeliverySubReportView", TableType.View, DataService.GetInstance("WWIprov"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarDeliveryID = new TableSchema.TableColumn(schema);
                colvarDeliveryID.ColumnName = "DeliveryID";
                colvarDeliveryID.DataType = DbType.Int32;
                colvarDeliveryID.MaxLength = 0;
                colvarDeliveryID.AutoIncrement = false;
                colvarDeliveryID.IsNullable = false;
                colvarDeliveryID.IsPrimaryKey = false;
                colvarDeliveryID.IsForeignKey = false;
                colvarDeliveryID.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeliveryID);
                
                TableSchema.TableColumn colvarCompanyName = new TableSchema.TableColumn(schema);
                colvarCompanyName.ColumnName = "CompanyName";
                colvarCompanyName.DataType = DbType.String;
                colvarCompanyName.MaxLength = 50;
                colvarCompanyName.AutoIncrement = false;
                colvarCompanyName.IsNullable = true;
                colvarCompanyName.IsPrimaryKey = false;
                colvarCompanyName.IsForeignKey = false;
                colvarCompanyName.IsReadOnly = false;
                
                schema.Columns.Add(colvarCompanyName);
                
                TableSchema.TableColumn colvarTitle = new TableSchema.TableColumn(schema);
                colvarTitle.ColumnName = "Title";
                colvarTitle.DataType = DbType.String;
                colvarTitle.MaxLength = 150;
                colvarTitle.AutoIncrement = false;
                colvarTitle.IsNullable = true;
                colvarTitle.IsPrimaryKey = false;
                colvarTitle.IsForeignKey = false;
                colvarTitle.IsReadOnly = false;
                
                schema.Columns.Add(colvarTitle);
                
                TableSchema.TableColumn colvarTitleID = new TableSchema.TableColumn(schema);
                colvarTitleID.ColumnName = "TitleID";
                colvarTitleID.DataType = DbType.Int32;
                colvarTitleID.MaxLength = 0;
                colvarTitleID.AutoIncrement = false;
                colvarTitleID.IsNullable = true;
                colvarTitleID.IsPrimaryKey = false;
                colvarTitleID.IsForeignKey = false;
                colvarTitleID.IsReadOnly = false;
                
                schema.Columns.Add(colvarTitleID);
                
                TableSchema.TableColumn colvarCopies = new TableSchema.TableColumn(schema);
                colvarCopies.ColumnName = "Copies";
                colvarCopies.DataType = DbType.Int32;
                colvarCopies.MaxLength = 0;
                colvarCopies.AutoIncrement = false;
                colvarCopies.IsNullable = true;
                colvarCopies.IsPrimaryKey = false;
                colvarCopies.IsForeignKey = false;
                colvarCopies.IsReadOnly = false;
                
                schema.Columns.Add(colvarCopies);
                
                TableSchema.TableColumn colvarEXPR1 = new TableSchema.TableColumn(schema);
                colvarEXPR1.ColumnName = "EXPR1";
                colvarEXPR1.DataType = DbType.Int32;
                colvarEXPR1.MaxLength = 0;
                colvarEXPR1.AutoIncrement = false;
                colvarEXPR1.IsNullable = true;
                colvarEXPR1.IsPrimaryKey = false;
                colvarEXPR1.IsForeignKey = false;
                colvarEXPR1.IsReadOnly = false;
                
                schema.Columns.Add(colvarEXPR1);
                
                TableSchema.TableColumn colvarOrderNumber = new TableSchema.TableColumn(schema);
                colvarOrderNumber.ColumnName = "OrderNumber";
                colvarOrderNumber.DataType = DbType.Int32;
                colvarOrderNumber.MaxLength = 0;
                colvarOrderNumber.AutoIncrement = false;
                colvarOrderNumber.IsNullable = true;
                colvarOrderNumber.IsPrimaryKey = false;
                colvarOrderNumber.IsForeignKey = false;
                colvarOrderNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderNumber);
                
                TableSchema.TableColumn colvarStatusDate = new TableSchema.TableColumn(schema);
                colvarStatusDate.ColumnName = "StatusDate";
                colvarStatusDate.DataType = DbType.DateTime;
                colvarStatusDate.MaxLength = 0;
                colvarStatusDate.AutoIncrement = false;
                colvarStatusDate.IsNullable = true;
                colvarStatusDate.IsPrimaryKey = false;
                colvarStatusDate.IsForeignKey = false;
                colvarStatusDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarStatusDate);
                
                TableSchema.TableColumn colvarCurrentStatusID = new TableSchema.TableColumn(schema);
                colvarCurrentStatusID.ColumnName = "CurrentStatusID";
                colvarCurrentStatusID.DataType = DbType.Int32;
                colvarCurrentStatusID.MaxLength = 0;
                colvarCurrentStatusID.AutoIncrement = false;
                colvarCurrentStatusID.IsNullable = true;
                colvarCurrentStatusID.IsPrimaryKey = false;
                colvarCurrentStatusID.IsForeignKey = false;
                colvarCurrentStatusID.IsReadOnly = false;
                
                schema.Columns.Add(colvarCurrentStatusID);
                
                TableSchema.TableColumn colvarCurrentStatusDate = new TableSchema.TableColumn(schema);
                colvarCurrentStatusDate.ColumnName = "CurrentStatusDate";
                colvarCurrentStatusDate.DataType = DbType.DateTime;
                colvarCurrentStatusDate.MaxLength = 0;
                colvarCurrentStatusDate.AutoIncrement = false;
                colvarCurrentStatusDate.IsNullable = true;
                colvarCurrentStatusDate.IsPrimaryKey = false;
                colvarCurrentStatusDate.IsForeignKey = false;
                colvarCurrentStatusDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarCurrentStatusDate);
                
                TableSchema.TableColumn colvarDeliveryAddress = new TableSchema.TableColumn(schema);
                colvarDeliveryAddress.ColumnName = "DeliveryAddress";
                colvarDeliveryAddress.DataType = DbType.Int32;
                colvarDeliveryAddress.MaxLength = 0;
                colvarDeliveryAddress.AutoIncrement = false;
                colvarDeliveryAddress.IsNullable = true;
                colvarDeliveryAddress.IsPrimaryKey = false;
                colvarDeliveryAddress.IsForeignKey = false;
                colvarDeliveryAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeliveryAddress);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["WWIprov"].AddSchema("DeliverySubReportView",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public DeliverySubReportView()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public DeliverySubReportView(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public DeliverySubReportView(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public DeliverySubReportView(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("DeliveryID")]
        [Bindable(true)]
        public int DeliveryID 
	    {
		    get
		    {
			    return GetColumnValue<int>("DeliveryID");
		    }
            set 
		    {
			    SetColumnValue("DeliveryID", value);
            }
        }
	      
        [XmlAttribute("CompanyName")]
        [Bindable(true)]
        public string CompanyName 
	    {
		    get
		    {
			    return GetColumnValue<string>("CompanyName");
		    }
            set 
		    {
			    SetColumnValue("CompanyName", value);
            }
        }
	      
        [XmlAttribute("Title")]
        [Bindable(true)]
        public string Title 
	    {
		    get
		    {
			    return GetColumnValue<string>("Title");
		    }
            set 
		    {
			    SetColumnValue("Title", value);
            }
        }
	      
        [XmlAttribute("TitleID")]
        [Bindable(true)]
        public int? TitleID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("TitleID");
		    }
            set 
		    {
			    SetColumnValue("TitleID", value);
            }
        }
	      
        [XmlAttribute("Copies")]
        [Bindable(true)]
        public int? Copies 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Copies");
		    }
            set 
		    {
			    SetColumnValue("Copies", value);
            }
        }
	      
        [XmlAttribute("EXPR1")]
        [Bindable(true)]
        public int? EXPR1 
	    {
		    get
		    {
			    return GetColumnValue<int?>("EXPR1");
		    }
            set 
		    {
			    SetColumnValue("EXPR1", value);
            }
        }
	      
        [XmlAttribute("OrderNumber")]
        [Bindable(true)]
        public int? OrderNumber 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OrderNumber");
		    }
            set 
		    {
			    SetColumnValue("OrderNumber", value);
            }
        }
	      
        [XmlAttribute("StatusDate")]
        [Bindable(true)]
        public DateTime? StatusDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("StatusDate");
		    }
            set 
		    {
			    SetColumnValue("StatusDate", value);
            }
        }
	      
        [XmlAttribute("CurrentStatusID")]
        [Bindable(true)]
        public int? CurrentStatusID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CurrentStatusID");
		    }
            set 
		    {
			    SetColumnValue("CurrentStatusID", value);
            }
        }
	      
        [XmlAttribute("CurrentStatusDate")]
        [Bindable(true)]
        public DateTime? CurrentStatusDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("CurrentStatusDate");
		    }
            set 
		    {
			    SetColumnValue("CurrentStatusDate", value);
            }
        }
	      
        [XmlAttribute("DeliveryAddress")]
        [Bindable(true)]
        public int? DeliveryAddress 
	    {
		    get
		    {
			    return GetColumnValue<int?>("DeliveryAddress");
		    }
            set 
		    {
			    SetColumnValue("DeliveryAddress", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string DeliveryID = @"DeliveryID";
            
            public static string CompanyName = @"CompanyName";
            
            public static string Title = @"Title";
            
            public static string TitleID = @"TitleID";
            
            public static string Copies = @"Copies";
            
            public static string EXPR1 = @"EXPR1";
            
            public static string OrderNumber = @"OrderNumber";
            
            public static string StatusDate = @"StatusDate";
            
            public static string CurrentStatusID = @"CurrentStatusID";
            
            public static string CurrentStatusDate = @"CurrentStatusDate";
            
            public static string DeliveryAddress = @"DeliveryAddress";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
