using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Logistics{
    /// <summary>
    /// Strongly-typed collection for the ViewOrderSummary class.
    /// </summary>
    [Serializable]
    public partial class ViewOrderSummaryCollection : ReadOnlyList<ViewOrderSummary, ViewOrderSummaryCollection>
    {        
        public ViewOrderSummaryCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the view_order_summary view.
    /// </summary>
    [Serializable]
    public partial class ViewOrderSummary : ReadOnlyRecord<ViewOrderSummary>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("view_order_summary", TableType.View, DataService.GetInstance("WWIprov"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarOrderID = new TableSchema.TableColumn(schema);
                colvarOrderID.ColumnName = "OrderID";
                colvarOrderID.DataType = DbType.Int32;
                colvarOrderID.MaxLength = 0;
                colvarOrderID.AutoIncrement = false;
                colvarOrderID.IsNullable = false;
                colvarOrderID.IsPrimaryKey = false;
                colvarOrderID.IsForeignKey = false;
                colvarOrderID.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderID);
                
                TableSchema.TableColumn colvarCompanyID = new TableSchema.TableColumn(schema);
                colvarCompanyID.ColumnName = "CompanyID";
                colvarCompanyID.DataType = DbType.Int32;
                colvarCompanyID.MaxLength = 0;
                colvarCompanyID.AutoIncrement = false;
                colvarCompanyID.IsNullable = true;
                colvarCompanyID.IsPrimaryKey = false;
                colvarCompanyID.IsForeignKey = false;
                colvarCompanyID.IsReadOnly = false;
                
                schema.Columns.Add(colvarCompanyID);
                
                TableSchema.TableColumn colvarOrderControllerID = new TableSchema.TableColumn(schema);
                colvarOrderControllerID.ColumnName = "OrderControllerID";
                colvarOrderControllerID.DataType = DbType.Int32;
                colvarOrderControllerID.MaxLength = 0;
                colvarOrderControllerID.AutoIncrement = false;
                colvarOrderControllerID.IsNullable = true;
                colvarOrderControllerID.IsPrimaryKey = false;
                colvarOrderControllerID.IsForeignKey = false;
                colvarOrderControllerID.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderControllerID);
                
                TableSchema.TableColumn colvarOrderNumber = new TableSchema.TableColumn(schema);
                colvarOrderNumber.ColumnName = "OrderNumber";
                colvarOrderNumber.DataType = DbType.Int32;
                colvarOrderNumber.MaxLength = 0;
                colvarOrderNumber.AutoIncrement = false;
                colvarOrderNumber.IsNullable = true;
                colvarOrderNumber.IsPrimaryKey = false;
                colvarOrderNumber.IsForeignKey = false;
                colvarOrderNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderNumber);
                
                TableSchema.TableColumn colvarHouseBLNUmber = new TableSchema.TableColumn(schema);
                colvarHouseBLNUmber.ColumnName = "HouseBLNUmber";
                colvarHouseBLNUmber.DataType = DbType.String;
                colvarHouseBLNUmber.MaxLength = 50;
                colvarHouseBLNUmber.AutoIncrement = false;
                colvarHouseBLNUmber.IsNullable = true;
                colvarHouseBLNUmber.IsPrimaryKey = false;
                colvarHouseBLNUmber.IsForeignKey = false;
                colvarHouseBLNUmber.IsReadOnly = false;
                
                schema.Columns.Add(colvarHouseBLNUmber);
                
                TableSchema.TableColumn colvarCustomersRef = new TableSchema.TableColumn(schema);
                colvarCustomersRef.ColumnName = "CustomersRef";
                colvarCustomersRef.DataType = DbType.String;
                colvarCustomersRef.MaxLength = 20;
                colvarCustomersRef.AutoIncrement = false;
                colvarCustomersRef.IsNullable = true;
                colvarCustomersRef.IsPrimaryKey = false;
                colvarCustomersRef.IsForeignKey = false;
                colvarCustomersRef.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomersRef);
                
                TableSchema.TableColumn colvarDateOrderCreated = new TableSchema.TableColumn(schema);
                colvarDateOrderCreated.ColumnName = "DateOrderCreated";
                colvarDateOrderCreated.DataType = DbType.DateTime;
                colvarDateOrderCreated.MaxLength = 0;
                colvarDateOrderCreated.AutoIncrement = false;
                colvarDateOrderCreated.IsNullable = true;
                colvarDateOrderCreated.IsPrimaryKey = false;
                colvarDateOrderCreated.IsForeignKey = false;
                colvarDateOrderCreated.IsReadOnly = false;
                
                schema.Columns.Add(colvarDateOrderCreated);
                
                TableSchema.TableColumn colvarEts = new TableSchema.TableColumn(schema);
                colvarEts.ColumnName = "ETS";
                colvarEts.DataType = DbType.DateTime;
                colvarEts.MaxLength = 0;
                colvarEts.AutoIncrement = false;
                colvarEts.IsNullable = true;
                colvarEts.IsPrimaryKey = false;
                colvarEts.IsForeignKey = false;
                colvarEts.IsReadOnly = false;
                
                schema.Columns.Add(colvarEts);
                
                TableSchema.TableColumn colvarEta = new TableSchema.TableColumn(schema);
                colvarEta.ColumnName = "ETA";
                colvarEta.DataType = DbType.DateTime;
                colvarEta.MaxLength = 0;
                colvarEta.AutoIncrement = false;
                colvarEta.IsNullable = true;
                colvarEta.IsPrimaryKey = false;
                colvarEta.IsForeignKey = false;
                colvarEta.IsReadOnly = false;
                
                schema.Columns.Add(colvarEta);
                
                TableSchema.TableColumn colvarJobClosed = new TableSchema.TableColumn(schema);
                colvarJobClosed.ColumnName = "JobClosed";
                colvarJobClosed.DataType = DbType.Boolean;
                colvarJobClosed.MaxLength = 0;
                colvarJobClosed.AutoIncrement = false;
                colvarJobClosed.IsNullable = false;
                colvarJobClosed.IsPrimaryKey = false;
                colvarJobClosed.IsForeignKey = false;
                colvarJobClosed.IsReadOnly = false;
                
                schema.Columns.Add(colvarJobClosed);
                
                TableSchema.TableColumn colvarContactID = new TableSchema.TableColumn(schema);
                colvarContactID.ColumnName = "ContactID";
                colvarContactID.DataType = DbType.Int32;
                colvarContactID.MaxLength = 0;
                colvarContactID.AutoIncrement = false;
                colvarContactID.IsNullable = true;
                colvarContactID.IsPrimaryKey = false;
                colvarContactID.IsForeignKey = false;
                colvarContactID.IsReadOnly = false;
                
                schema.Columns.Add(colvarContactID);
                
                TableSchema.TableColumn colvarExWorksDate = new TableSchema.TableColumn(schema);
                colvarExWorksDate.ColumnName = "ExWorksDate";
                colvarExWorksDate.DataType = DbType.DateTime;
                colvarExWorksDate.MaxLength = 0;
                colvarExWorksDate.AutoIncrement = false;
                colvarExWorksDate.IsNullable = true;
                colvarExWorksDate.IsPrimaryKey = false;
                colvarExWorksDate.IsForeignKey = false;
                colvarExWorksDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarExWorksDate);
                
                TableSchema.TableColumn colvarCargoReady = new TableSchema.TableColumn(schema);
                colvarCargoReady.ColumnName = "CargoReady";
                colvarCargoReady.DataType = DbType.DateTime;
                colvarCargoReady.MaxLength = 0;
                colvarCargoReady.AutoIncrement = false;
                colvarCargoReady.IsNullable = true;
                colvarCargoReady.IsPrimaryKey = false;
                colvarCargoReady.IsForeignKey = false;
                colvarCargoReady.IsReadOnly = false;
                
                schema.Columns.Add(colvarCargoReady);
                
                TableSchema.TableColumn colvarPrinterID = new TableSchema.TableColumn(schema);
                colvarPrinterID.ColumnName = "PrinterID";
                colvarPrinterID.DataType = DbType.Int32;
                colvarPrinterID.MaxLength = 0;
                colvarPrinterID.AutoIncrement = false;
                colvarPrinterID.IsNullable = true;
                colvarPrinterID.IsPrimaryKey = false;
                colvarPrinterID.IsForeignKey = false;
                colvarPrinterID.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinterID);
                
                TableSchema.TableColumn colvarWarehouseDate = new TableSchema.TableColumn(schema);
                colvarWarehouseDate.ColumnName = "WarehouseDate";
                colvarWarehouseDate.DataType = DbType.DateTime;
                colvarWarehouseDate.MaxLength = 0;
                colvarWarehouseDate.AutoIncrement = false;
                colvarWarehouseDate.IsNullable = true;
                colvarWarehouseDate.IsPrimaryKey = false;
                colvarWarehouseDate.IsForeignKey = false;
                colvarWarehouseDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarWarehouseDate);
                
                TableSchema.TableColumn colvarConsigneeID = new TableSchema.TableColumn(schema);
                colvarConsigneeID.ColumnName = "ConsigneeID";
                colvarConsigneeID.DataType = DbType.Int32;
                colvarConsigneeID.MaxLength = 0;
                colvarConsigneeID.AutoIncrement = false;
                colvarConsigneeID.IsNullable = true;
                colvarConsigneeID.IsPrimaryKey = false;
                colvarConsigneeID.IsForeignKey = false;
                colvarConsigneeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsigneeID);
                
                TableSchema.TableColumn colvarOfficeIndicator = new TableSchema.TableColumn(schema);
                colvarOfficeIndicator.ColumnName = "OfficeIndicator";
                colvarOfficeIndicator.DataType = DbType.String;
                colvarOfficeIndicator.MaxLength = 50;
                colvarOfficeIndicator.AutoIncrement = false;
                colvarOfficeIndicator.IsNullable = true;
                colvarOfficeIndicator.IsPrimaryKey = false;
                colvarOfficeIndicator.IsForeignKey = false;
                colvarOfficeIndicator.IsReadOnly = false;
                
                schema.Columns.Add(colvarOfficeIndicator);
                
                TableSchema.TableColumn colvarPublishipOrder = new TableSchema.TableColumn(schema);
                colvarPublishipOrder.ColumnName = "PublishipOrder";
                colvarPublishipOrder.DataType = DbType.Boolean;
                colvarPublishipOrder.MaxLength = 0;
                colvarPublishipOrder.AutoIncrement = false;
                colvarPublishipOrder.IsNullable = false;
                colvarPublishipOrder.IsPrimaryKey = false;
                colvarPublishipOrder.IsForeignKey = false;
                colvarPublishipOrder.IsReadOnly = false;
                
                schema.Columns.Add(colvarPublishipOrder);
                
                TableSchema.TableColumn colvarHotJob = new TableSchema.TableColumn(schema);
                colvarHotJob.ColumnName = "HotJob";
                colvarHotJob.DataType = DbType.Boolean;
                colvarHotJob.MaxLength = 0;
                colvarHotJob.AutoIncrement = false;
                colvarHotJob.IsNullable = false;
                colvarHotJob.IsPrimaryKey = false;
                colvarHotJob.IsForeignKey = false;
                colvarHotJob.IsReadOnly = false;
                
                schema.Columns.Add(colvarHotJob);
                
                TableSchema.TableColumn colvarNotifyPartyID = new TableSchema.TableColumn(schema);
                colvarNotifyPartyID.ColumnName = "NotifyPartyID";
                colvarNotifyPartyID.DataType = DbType.Int32;
                colvarNotifyPartyID.MaxLength = 0;
                colvarNotifyPartyID.AutoIncrement = false;
                colvarNotifyPartyID.IsNullable = true;
                colvarNotifyPartyID.IsPrimaryKey = false;
                colvarNotifyPartyID.IsForeignKey = false;
                colvarNotifyPartyID.IsReadOnly = false;
                
                schema.Columns.Add(colvarNotifyPartyID);
                
                TableSchema.TableColumn colvarAgentAtOriginID = new TableSchema.TableColumn(schema);
                colvarAgentAtOriginID.ColumnName = "AgentAtOriginID";
                colvarAgentAtOriginID.DataType = DbType.Int32;
                colvarAgentAtOriginID.MaxLength = 0;
                colvarAgentAtOriginID.AutoIncrement = false;
                colvarAgentAtOriginID.IsNullable = true;
                colvarAgentAtOriginID.IsPrimaryKey = false;
                colvarAgentAtOriginID.IsForeignKey = false;
                colvarAgentAtOriginID.IsReadOnly = false;
                
                schema.Columns.Add(colvarAgentAtOriginID);
                
                TableSchema.TableColumn colvarAgentAtDestinationID = new TableSchema.TableColumn(schema);
                colvarAgentAtDestinationID.ColumnName = "AgentAtDestinationID";
                colvarAgentAtDestinationID.DataType = DbType.Int32;
                colvarAgentAtDestinationID.MaxLength = 0;
                colvarAgentAtDestinationID.AutoIncrement = false;
                colvarAgentAtDestinationID.IsNullable = true;
                colvarAgentAtDestinationID.IsPrimaryKey = false;
                colvarAgentAtDestinationID.IsForeignKey = false;
                colvarAgentAtDestinationID.IsReadOnly = false;
                
                schema.Columns.Add(colvarAgentAtDestinationID);
                
                TableSchema.TableColumn colvarClearingAgentID = new TableSchema.TableColumn(schema);
                colvarClearingAgentID.ColumnName = "ClearingAgentID";
                colvarClearingAgentID.DataType = DbType.Int32;
                colvarClearingAgentID.MaxLength = 0;
                colvarClearingAgentID.AutoIncrement = false;
                colvarClearingAgentID.IsNullable = true;
                colvarClearingAgentID.IsPrimaryKey = false;
                colvarClearingAgentID.IsForeignKey = false;
                colvarClearingAgentID.IsReadOnly = false;
                
                schema.Columns.Add(colvarClearingAgentID);
                
                TableSchema.TableColumn colvarOnCarriageID = new TableSchema.TableColumn(schema);
                colvarOnCarriageID.ColumnName = "OnCarriageID";
                colvarOnCarriageID.DataType = DbType.Int32;
                colvarOnCarriageID.MaxLength = 0;
                colvarOnCarriageID.AutoIncrement = false;
                colvarOnCarriageID.IsNullable = true;
                colvarOnCarriageID.IsPrimaryKey = false;
                colvarOnCarriageID.IsForeignKey = false;
                colvarOnCarriageID.IsReadOnly = false;
                
                schema.Columns.Add(colvarOnCarriageID);
                
                TableSchema.TableColumn colvarOperationsControllerID = new TableSchema.TableColumn(schema);
                colvarOperationsControllerID.ColumnName = "OperationsControllerID";
                colvarOperationsControllerID.DataType = DbType.Int32;
                colvarOperationsControllerID.MaxLength = 0;
                colvarOperationsControllerID.AutoIncrement = false;
                colvarOperationsControllerID.IsNullable = true;
                colvarOperationsControllerID.IsPrimaryKey = false;
                colvarOperationsControllerID.IsForeignKey = false;
                colvarOperationsControllerID.IsReadOnly = false;
                
                schema.Columns.Add(colvarOperationsControllerID);
                
                TableSchema.TableColumn colvarOriginPortControllerID = new TableSchema.TableColumn(schema);
                colvarOriginPortControllerID.ColumnName = "OriginPortControllerID";
                colvarOriginPortControllerID.DataType = DbType.Int32;
                colvarOriginPortControllerID.MaxLength = 0;
                colvarOriginPortControllerID.AutoIncrement = false;
                colvarOriginPortControllerID.IsNullable = true;
                colvarOriginPortControllerID.IsPrimaryKey = false;
                colvarOriginPortControllerID.IsForeignKey = false;
                colvarOriginPortControllerID.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginPortControllerID);
                
                TableSchema.TableColumn colvarDestinationPortControllerID = new TableSchema.TableColumn(schema);
                colvarDestinationPortControllerID.ColumnName = "DestinationPortControllerID";
                colvarDestinationPortControllerID.DataType = DbType.Int32;
                colvarDestinationPortControllerID.MaxLength = 0;
                colvarDestinationPortControllerID.AutoIncrement = false;
                colvarDestinationPortControllerID.IsNullable = true;
                colvarDestinationPortControllerID.IsPrimaryKey = false;
                colvarDestinationPortControllerID.IsForeignKey = false;
                colvarDestinationPortControllerID.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestinationPortControllerID);
                
                TableSchema.TableColumn colvarEWDLastUpdated = new TableSchema.TableColumn(schema);
                colvarEWDLastUpdated.ColumnName = "EWDLastUpdated";
                colvarEWDLastUpdated.DataType = DbType.DateTime;
                colvarEWDLastUpdated.MaxLength = 0;
                colvarEWDLastUpdated.AutoIncrement = false;
                colvarEWDLastUpdated.IsNullable = true;
                colvarEWDLastUpdated.IsPrimaryKey = false;
                colvarEWDLastUpdated.IsForeignKey = false;
                colvarEWDLastUpdated.IsReadOnly = false;
                
                schema.Columns.Add(colvarEWDLastUpdated);
                
                TableSchema.TableColumn colvarFinalDestinationID = new TableSchema.TableColumn(schema);
                colvarFinalDestinationID.ColumnName = "FinalDestinationID";
                colvarFinalDestinationID.DataType = DbType.Int32;
                colvarFinalDestinationID.MaxLength = 0;
                colvarFinalDestinationID.AutoIncrement = false;
                colvarFinalDestinationID.IsNullable = true;
                colvarFinalDestinationID.IsPrimaryKey = false;
                colvarFinalDestinationID.IsForeignKey = false;
                colvarFinalDestinationID.IsReadOnly = false;
                
                schema.Columns.Add(colvarFinalDestinationID);
                
                TableSchema.TableColumn colvarOriginPointID = new TableSchema.TableColumn(schema);
                colvarOriginPointID.ColumnName = "OriginPointID";
                colvarOriginPointID.DataType = DbType.Int32;
                colvarOriginPointID.MaxLength = 0;
                colvarOriginPointID.AutoIncrement = false;
                colvarOriginPointID.IsNullable = true;
                colvarOriginPointID.IsPrimaryKey = false;
                colvarOriginPointID.IsForeignKey = false;
                colvarOriginPointID.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginPointID);
                
                TableSchema.TableColumn colvarPortID = new TableSchema.TableColumn(schema);
                colvarPortID.ColumnName = "PortID";
                colvarPortID.DataType = DbType.Int32;
                colvarPortID.MaxLength = 0;
                colvarPortID.AutoIncrement = false;
                colvarPortID.IsNullable = true;
                colvarPortID.IsPrimaryKey = false;
                colvarPortID.IsForeignKey = false;
                colvarPortID.IsReadOnly = false;
                
                schema.Columns.Add(colvarPortID);
                
                TableSchema.TableColumn colvarDestinationPortID = new TableSchema.TableColumn(schema);
                colvarDestinationPortID.ColumnName = "DestinationPortID";
                colvarDestinationPortID.DataType = DbType.Int32;
                colvarDestinationPortID.MaxLength = 0;
                colvarDestinationPortID.AutoIncrement = false;
                colvarDestinationPortID.IsNullable = true;
                colvarDestinationPortID.IsPrimaryKey = false;
                colvarDestinationPortID.IsForeignKey = false;
                colvarDestinationPortID.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestinationPortID);
                
                TableSchema.TableColumn colvarBookingReceived = new TableSchema.TableColumn(schema);
                colvarBookingReceived.ColumnName = "BookingReceived";
                colvarBookingReceived.DataType = DbType.DateTime;
                colvarBookingReceived.MaxLength = 0;
                colvarBookingReceived.AutoIncrement = false;
                colvarBookingReceived.IsNullable = true;
                colvarBookingReceived.IsPrimaryKey = false;
                colvarBookingReceived.IsForeignKey = false;
                colvarBookingReceived.IsReadOnly = false;
                
                schema.Columns.Add(colvarBookingReceived);
                
                TableSchema.TableColumn colvarOnTime = new TableSchema.TableColumn(schema);
                colvarOnTime.ColumnName = "OnTime";
                colvarOnTime.DataType = DbType.Boolean;
                colvarOnTime.MaxLength = 0;
                colvarOnTime.AutoIncrement = false;
                colvarOnTime.IsNullable = true;
                colvarOnTime.IsPrimaryKey = false;
                colvarOnTime.IsForeignKey = false;
                colvarOnTime.IsReadOnly = false;
                
                schema.Columns.Add(colvarOnTime);
                
                TableSchema.TableColumn colvarDestinationCountryID = new TableSchema.TableColumn(schema);
                colvarDestinationCountryID.ColumnName = "DestinationCountryID";
                colvarDestinationCountryID.DataType = DbType.Int32;
                colvarDestinationCountryID.MaxLength = 0;
                colvarDestinationCountryID.AutoIncrement = false;
                colvarDestinationCountryID.IsNullable = true;
                colvarDestinationCountryID.IsPrimaryKey = false;
                colvarDestinationCountryID.IsForeignKey = false;
                colvarDestinationCountryID.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestinationCountryID);
                
                TableSchema.TableColumn colvarJobClosureDate = new TableSchema.TableColumn(schema);
                colvarJobClosureDate.ColumnName = "JobClosureDate";
                colvarJobClosureDate.DataType = DbType.DateTime;
                colvarJobClosureDate.MaxLength = 0;
                colvarJobClosureDate.AutoIncrement = false;
                colvarJobClosureDate.IsNullable = true;
                colvarJobClosureDate.IsPrimaryKey = false;
                colvarJobClosureDate.IsForeignKey = false;
                colvarJobClosureDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarJobClosureDate);
                
                TableSchema.TableColumn colvarOriginDocs = new TableSchema.TableColumn(schema);
                colvarOriginDocs.ColumnName = "OriginDocs";
                colvarOriginDocs.DataType = DbType.String;
                colvarOriginDocs.MaxLength = 50;
                colvarOriginDocs.AutoIncrement = false;
                colvarOriginDocs.IsNullable = true;
                colvarOriginDocs.IsPrimaryKey = false;
                colvarOriginDocs.IsForeignKey = false;
                colvarOriginDocs.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginDocs);
                
                TableSchema.TableColumn colvarOrignTHC = new TableSchema.TableColumn(schema);
                colvarOrignTHC.ColumnName = "OrignTHC";
                colvarOrignTHC.DataType = DbType.String;
                colvarOrignTHC.MaxLength = 50;
                colvarOrignTHC.AutoIncrement = false;
                colvarOrignTHC.IsNullable = true;
                colvarOrignTHC.IsPrimaryKey = false;
                colvarOrignTHC.IsForeignKey = false;
                colvarOrignTHC.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrignTHC);
                
                TableSchema.TableColumn colvarOriginTrucking = new TableSchema.TableColumn(schema);
                colvarOriginTrucking.ColumnName = "OriginTrucking";
                colvarOriginTrucking.DataType = DbType.String;
                colvarOriginTrucking.MaxLength = 50;
                colvarOriginTrucking.AutoIncrement = false;
                colvarOriginTrucking.IsNullable = true;
                colvarOriginTrucking.IsPrimaryKey = false;
                colvarOriginTrucking.IsForeignKey = false;
                colvarOriginTrucking.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginTrucking);
                
                TableSchema.TableColumn colvarDestTHC = new TableSchema.TableColumn(schema);
                colvarDestTHC.ColumnName = "DestTHC";
                colvarDestTHC.DataType = DbType.String;
                colvarDestTHC.MaxLength = 50;
                colvarDestTHC.AutoIncrement = false;
                colvarDestTHC.IsNullable = true;
                colvarDestTHC.IsPrimaryKey = false;
                colvarDestTHC.IsForeignKey = false;
                colvarDestTHC.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestTHC);
                
                TableSchema.TableColumn colvarFreight = new TableSchema.TableColumn(schema);
                colvarFreight.ColumnName = "Freight";
                colvarFreight.DataType = DbType.String;
                colvarFreight.MaxLength = 50;
                colvarFreight.AutoIncrement = false;
                colvarFreight.IsNullable = true;
                colvarFreight.IsPrimaryKey = false;
                colvarFreight.IsForeignKey = false;
                colvarFreight.IsReadOnly = false;
                
                schema.Columns.Add(colvarFreight);
                
                TableSchema.TableColumn colvarSellingrate = new TableSchema.TableColumn(schema);
                colvarSellingrate.ColumnName = "Sellingrate";
                colvarSellingrate.DataType = DbType.String;
                colvarSellingrate.MaxLength = 50;
                colvarSellingrate.AutoIncrement = false;
                colvarSellingrate.IsNullable = true;
                colvarSellingrate.IsPrimaryKey = false;
                colvarSellingrate.IsForeignKey = false;
                colvarSellingrate.IsReadOnly = false;
                
                schema.Columns.Add(colvarSellingrate);
                
                TableSchema.TableColumn colvarSellingrateAgent = new TableSchema.TableColumn(schema);
                colvarSellingrateAgent.ColumnName = "SellingrateAgent";
                colvarSellingrateAgent.DataType = DbType.String;
                colvarSellingrateAgent.MaxLength = 50;
                colvarSellingrateAgent.AutoIncrement = false;
                colvarSellingrateAgent.IsNullable = true;
                colvarSellingrateAgent.IsPrimaryKey = false;
                colvarSellingrateAgent.IsForeignKey = false;
                colvarSellingrateAgent.IsReadOnly = false;
                
                schema.Columns.Add(colvarSellingrateAgent);
                
                TableSchema.TableColumn colvarDocsRcdAndApproved = new TableSchema.TableColumn(schema);
                colvarDocsRcdAndApproved.ColumnName = "DocsRcdAndApproved";
                colvarDocsRcdAndApproved.DataType = DbType.Boolean;
                colvarDocsRcdAndApproved.MaxLength = 0;
                colvarDocsRcdAndApproved.AutoIncrement = false;
                colvarDocsRcdAndApproved.IsNullable = false;
                colvarDocsRcdAndApproved.IsPrimaryKey = false;
                colvarDocsRcdAndApproved.IsForeignKey = false;
                colvarDocsRcdAndApproved.IsReadOnly = false;
                
                schema.Columns.Add(colvarDocsRcdAndApproved);
                
                TableSchema.TableColumn colvarDocsApprovedDate = new TableSchema.TableColumn(schema);
                colvarDocsApprovedDate.ColumnName = "DocsApprovedDate";
                colvarDocsApprovedDate.DataType = DbType.DateTime;
                colvarDocsApprovedDate.MaxLength = 0;
                colvarDocsApprovedDate.AutoIncrement = false;
                colvarDocsApprovedDate.IsNullable = true;
                colvarDocsApprovedDate.IsPrimaryKey = false;
                colvarDocsApprovedDate.IsForeignKey = false;
                colvarDocsApprovedDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarDocsApprovedDate);
                
                TableSchema.TableColumn colvarRemarksToCustomer = new TableSchema.TableColumn(schema);
                colvarRemarksToCustomer.ColumnName = "RemarksToCustomer";
                colvarRemarksToCustomer.DataType = DbType.String;
                colvarRemarksToCustomer.MaxLength = 1073741823;
                colvarRemarksToCustomer.AutoIncrement = false;
                colvarRemarksToCustomer.IsNullable = true;
                colvarRemarksToCustomer.IsPrimaryKey = false;
                colvarRemarksToCustomer.IsForeignKey = false;
                colvarRemarksToCustomer.IsReadOnly = false;
                
                schema.Columns.Add(colvarRemarksToCustomer);
                
                TableSchema.TableColumn colvarRemarks = new TableSchema.TableColumn(schema);
                colvarRemarks.ColumnName = "Remarks";
                colvarRemarks.DataType = DbType.String;
                colvarRemarks.MaxLength = 1073741823;
                colvarRemarks.AutoIncrement = false;
                colvarRemarks.IsNullable = true;
                colvarRemarks.IsPrimaryKey = false;
                colvarRemarks.IsForeignKey = false;
                colvarRemarks.IsReadOnly = false;
                
                schema.Columns.Add(colvarRemarks);
                
                TableSchema.TableColumn colvarPalletise = new TableSchema.TableColumn(schema);
                colvarPalletise.ColumnName = "Palletise";
                colvarPalletise.DataType = DbType.Int32;
                colvarPalletise.MaxLength = 0;
                colvarPalletise.AutoIncrement = false;
                colvarPalletise.IsNullable = true;
                colvarPalletise.IsPrimaryKey = false;
                colvarPalletise.IsForeignKey = false;
                colvarPalletise.IsReadOnly = false;
                
                schema.Columns.Add(colvarPalletise);
                
                TableSchema.TableColumn colvarOtherDocsRequired = new TableSchema.TableColumn(schema);
                colvarOtherDocsRequired.ColumnName = "OtherDocsRequired";
                colvarOtherDocsRequired.DataType = DbType.String;
                colvarOtherDocsRequired.MaxLength = 50;
                colvarOtherDocsRequired.AutoIncrement = false;
                colvarOtherDocsRequired.IsNullable = true;
                colvarOtherDocsRequired.IsPrimaryKey = false;
                colvarOtherDocsRequired.IsForeignKey = false;
                colvarOtherDocsRequired.IsReadOnly = false;
                
                schema.Columns.Add(colvarOtherDocsRequired);
                
                TableSchema.TableColumn colvarPackingDeclaration = new TableSchema.TableColumn(schema);
                colvarPackingDeclaration.ColumnName = "PackingDeclaration";
                colvarPackingDeclaration.DataType = DbType.Boolean;
                colvarPackingDeclaration.MaxLength = 0;
                colvarPackingDeclaration.AutoIncrement = false;
                colvarPackingDeclaration.IsNullable = false;
                colvarPackingDeclaration.IsPrimaryKey = false;
                colvarPackingDeclaration.IsForeignKey = false;
                colvarPackingDeclaration.IsReadOnly = false;
                
                schema.Columns.Add(colvarPackingDeclaration);
                
                TableSchema.TableColumn colvarOrderController = new TableSchema.TableColumn(schema);
                colvarOrderController.ColumnName = "OrderController";
                colvarOrderController.DataType = DbType.String;
                colvarOrderController.MaxLength = 50;
                colvarOrderController.AutoIncrement = false;
                colvarOrderController.IsNullable = true;
                colvarOrderController.IsPrimaryKey = false;
                colvarOrderController.IsForeignKey = false;
                colvarOrderController.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderController);
                
                TableSchema.TableColumn colvarContactName = new TableSchema.TableColumn(schema);
                colvarContactName.ColumnName = "ContactName";
                colvarContactName.DataType = DbType.String;
                colvarContactName.MaxLength = 50;
                colvarContactName.AutoIncrement = false;
                colvarContactName.IsNullable = true;
                colvarContactName.IsPrimaryKey = false;
                colvarContactName.IsForeignKey = false;
                colvarContactName.IsReadOnly = false;
                
                schema.Columns.Add(colvarContactName);
                
                TableSchema.TableColumn colvarEMail = new TableSchema.TableColumn(schema);
                colvarEMail.ColumnName = "EMail";
                colvarEMail.DataType = DbType.String;
                colvarEMail.MaxLength = 50;
                colvarEMail.AutoIncrement = false;
                colvarEMail.IsNullable = true;
                colvarEMail.IsPrimaryKey = false;
                colvarEMail.IsForeignKey = false;
                colvarEMail.IsReadOnly = false;
                
                schema.Columns.Add(colvarEMail);
                
                TableSchema.TableColumn colvarOpsController = new TableSchema.TableColumn(schema);
                colvarOpsController.ColumnName = "OpsController";
                colvarOpsController.DataType = DbType.String;
                colvarOpsController.MaxLength = 50;
                colvarOpsController.AutoIncrement = false;
                colvarOpsController.IsNullable = true;
                colvarOpsController.IsPrimaryKey = false;
                colvarOpsController.IsForeignKey = false;
                colvarOpsController.IsReadOnly = false;
                
                schema.Columns.Add(colvarOpsController);
                
                TableSchema.TableColumn colvarCompanyName = new TableSchema.TableColumn(schema);
                colvarCompanyName.ColumnName = "CompanyName";
                colvarCompanyName.DataType = DbType.String;
                colvarCompanyName.MaxLength = 50;
                colvarCompanyName.AutoIncrement = false;
                colvarCompanyName.IsNullable = true;
                colvarCompanyName.IsPrimaryKey = false;
                colvarCompanyName.IsForeignKey = false;
                colvarCompanyName.IsReadOnly = false;
                
                schema.Columns.Add(colvarCompanyName);
                
                TableSchema.TableColumn colvarAddress1 = new TableSchema.TableColumn(schema);
                colvarAddress1.ColumnName = "Address1";
                colvarAddress1.DataType = DbType.String;
                colvarAddress1.MaxLength = 40;
                colvarAddress1.AutoIncrement = false;
                colvarAddress1.IsNullable = true;
                colvarAddress1.IsPrimaryKey = false;
                colvarAddress1.IsForeignKey = false;
                colvarAddress1.IsReadOnly = false;
                
                schema.Columns.Add(colvarAddress1);
                
                TableSchema.TableColumn colvarAddress2 = new TableSchema.TableColumn(schema);
                colvarAddress2.ColumnName = "Address2";
                colvarAddress2.DataType = DbType.String;
                colvarAddress2.MaxLength = 40;
                colvarAddress2.AutoIncrement = false;
                colvarAddress2.IsNullable = true;
                colvarAddress2.IsPrimaryKey = false;
                colvarAddress2.IsForeignKey = false;
                colvarAddress2.IsReadOnly = false;
                
                schema.Columns.Add(colvarAddress2);
                
                TableSchema.TableColumn colvarAddress3 = new TableSchema.TableColumn(schema);
                colvarAddress3.ColumnName = "Address3";
                colvarAddress3.DataType = DbType.String;
                colvarAddress3.MaxLength = 40;
                colvarAddress3.AutoIncrement = false;
                colvarAddress3.IsNullable = true;
                colvarAddress3.IsPrimaryKey = false;
                colvarAddress3.IsForeignKey = false;
                colvarAddress3.IsReadOnly = false;
                
                schema.Columns.Add(colvarAddress3);
                
                TableSchema.TableColumn colvarCountryName = new TableSchema.TableColumn(schema);
                colvarCountryName.ColumnName = "CountryName";
                colvarCountryName.DataType = DbType.String;
                colvarCountryName.MaxLength = 50;
                colvarCountryName.AutoIncrement = false;
                colvarCountryName.IsNullable = true;
                colvarCountryName.IsPrimaryKey = false;
                colvarCountryName.IsForeignKey = false;
                colvarCountryName.IsReadOnly = false;
                
                schema.Columns.Add(colvarCountryName);
                
                TableSchema.TableColumn colvarTelNo = new TableSchema.TableColumn(schema);
                colvarTelNo.ColumnName = "TelNo";
                colvarTelNo.DataType = DbType.String;
                colvarTelNo.MaxLength = 20;
                colvarTelNo.AutoIncrement = false;
                colvarTelNo.IsNullable = true;
                colvarTelNo.IsPrimaryKey = false;
                colvarTelNo.IsForeignKey = false;
                colvarTelNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarTelNo);
                
                TableSchema.TableColumn colvarPrinterName = new TableSchema.TableColumn(schema);
                colvarPrinterName.ColumnName = "PrinterName";
                colvarPrinterName.DataType = DbType.String;
                colvarPrinterName.MaxLength = 50;
                colvarPrinterName.AutoIncrement = false;
                colvarPrinterName.IsNullable = true;
                colvarPrinterName.IsPrimaryKey = false;
                colvarPrinterName.IsForeignKey = false;
                colvarPrinterName.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinterName);
                
                TableSchema.TableColumn colvarPrinterAdd1 = new TableSchema.TableColumn(schema);
                colvarPrinterAdd1.ColumnName = "PrinterAdd1";
                colvarPrinterAdd1.DataType = DbType.String;
                colvarPrinterAdd1.MaxLength = 40;
                colvarPrinterAdd1.AutoIncrement = false;
                colvarPrinterAdd1.IsNullable = true;
                colvarPrinterAdd1.IsPrimaryKey = false;
                colvarPrinterAdd1.IsForeignKey = false;
                colvarPrinterAdd1.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinterAdd1);
                
                TableSchema.TableColumn colvarPrinterAdd2 = new TableSchema.TableColumn(schema);
                colvarPrinterAdd2.ColumnName = "PrinterAdd2";
                colvarPrinterAdd2.DataType = DbType.String;
                colvarPrinterAdd2.MaxLength = 40;
                colvarPrinterAdd2.AutoIncrement = false;
                colvarPrinterAdd2.IsNullable = true;
                colvarPrinterAdd2.IsPrimaryKey = false;
                colvarPrinterAdd2.IsForeignKey = false;
                colvarPrinterAdd2.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinterAdd2);
                
                TableSchema.TableColumn colvarPrinterAdd3 = new TableSchema.TableColumn(schema);
                colvarPrinterAdd3.ColumnName = "PrinterAdd3";
                colvarPrinterAdd3.DataType = DbType.String;
                colvarPrinterAdd3.MaxLength = 40;
                colvarPrinterAdd3.AutoIncrement = false;
                colvarPrinterAdd3.IsNullable = true;
                colvarPrinterAdd3.IsPrimaryKey = false;
                colvarPrinterAdd3.IsForeignKey = false;
                colvarPrinterAdd3.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinterAdd3);
                
                TableSchema.TableColumn colvarPrinterCountry = new TableSchema.TableColumn(schema);
                colvarPrinterCountry.ColumnName = "PrinterCountry";
                colvarPrinterCountry.DataType = DbType.String;
                colvarPrinterCountry.MaxLength = 50;
                colvarPrinterCountry.AutoIncrement = false;
                colvarPrinterCountry.IsNullable = true;
                colvarPrinterCountry.IsPrimaryKey = false;
                colvarPrinterCountry.IsForeignKey = false;
                colvarPrinterCountry.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinterCountry);
                
                TableSchema.TableColumn colvarPrinterTel = new TableSchema.TableColumn(schema);
                colvarPrinterTel.ColumnName = "PrinterTel";
                colvarPrinterTel.DataType = DbType.String;
                colvarPrinterTel.MaxLength = 20;
                colvarPrinterTel.AutoIncrement = false;
                colvarPrinterTel.IsNullable = true;
                colvarPrinterTel.IsPrimaryKey = false;
                colvarPrinterTel.IsForeignKey = false;
                colvarPrinterTel.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinterTel);
                
                TableSchema.TableColumn colvarOriginCountry = new TableSchema.TableColumn(schema);
                colvarOriginCountry.ColumnName = "OriginCountry";
                colvarOriginCountry.DataType = DbType.String;
                colvarOriginCountry.MaxLength = 50;
                colvarOriginCountry.AutoIncrement = false;
                colvarOriginCountry.IsNullable = true;
                colvarOriginCountry.IsPrimaryKey = false;
                colvarOriginCountry.IsForeignKey = false;
                colvarOriginCountry.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginCountry);
                
                TableSchema.TableColumn colvarPlaceName = new TableSchema.TableColumn(schema);
                colvarPlaceName.ColumnName = "PlaceName";
                colvarPlaceName.DataType = DbType.String;
                colvarPlaceName.MaxLength = 30;
                colvarPlaceName.AutoIncrement = false;
                colvarPlaceName.IsNullable = true;
                colvarPlaceName.IsPrimaryKey = false;
                colvarPlaceName.IsForeignKey = false;
                colvarPlaceName.IsReadOnly = false;
                
                schema.Columns.Add(colvarPlaceName);
                
                TableSchema.TableColumn colvarOriginPort = new TableSchema.TableColumn(schema);
                colvarOriginPort.ColumnName = "OriginPort";
                colvarOriginPort.DataType = DbType.String;
                colvarOriginPort.MaxLength = 30;
                colvarOriginPort.AutoIncrement = false;
                colvarOriginPort.IsNullable = true;
                colvarOriginPort.IsPrimaryKey = false;
                colvarOriginPort.IsForeignKey = false;
                colvarOriginPort.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginPort);
                
                TableSchema.TableColumn colvarOriginAgent = new TableSchema.TableColumn(schema);
                colvarOriginAgent.ColumnName = "OriginAgent";
                colvarOriginAgent.DataType = DbType.String;
                colvarOriginAgent.MaxLength = 50;
                colvarOriginAgent.AutoIncrement = false;
                colvarOriginAgent.IsNullable = true;
                colvarOriginAgent.IsPrimaryKey = false;
                colvarOriginAgent.IsForeignKey = false;
                colvarOriginAgent.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginAgent);
                
                TableSchema.TableColumn colvarOriginAgentAddress1 = new TableSchema.TableColumn(schema);
                colvarOriginAgentAddress1.ColumnName = "OriginAgentAddress1";
                colvarOriginAgentAddress1.DataType = DbType.String;
                colvarOriginAgentAddress1.MaxLength = 40;
                colvarOriginAgentAddress1.AutoIncrement = false;
                colvarOriginAgentAddress1.IsNullable = true;
                colvarOriginAgentAddress1.IsPrimaryKey = false;
                colvarOriginAgentAddress1.IsForeignKey = false;
                colvarOriginAgentAddress1.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginAgentAddress1);
                
                TableSchema.TableColumn colvarOriginAgentAddress2 = new TableSchema.TableColumn(schema);
                colvarOriginAgentAddress2.ColumnName = "OriginAgentAddress2";
                colvarOriginAgentAddress2.DataType = DbType.String;
                colvarOriginAgentAddress2.MaxLength = 40;
                colvarOriginAgentAddress2.AutoIncrement = false;
                colvarOriginAgentAddress2.IsNullable = true;
                colvarOriginAgentAddress2.IsPrimaryKey = false;
                colvarOriginAgentAddress2.IsForeignKey = false;
                colvarOriginAgentAddress2.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginAgentAddress2);
                
                TableSchema.TableColumn colvarOriginAgentAddress3 = new TableSchema.TableColumn(schema);
                colvarOriginAgentAddress3.ColumnName = "OriginAgentAddress3";
                colvarOriginAgentAddress3.DataType = DbType.String;
                colvarOriginAgentAddress3.MaxLength = 40;
                colvarOriginAgentAddress3.AutoIncrement = false;
                colvarOriginAgentAddress3.IsNullable = true;
                colvarOriginAgentAddress3.IsPrimaryKey = false;
                colvarOriginAgentAddress3.IsForeignKey = false;
                colvarOriginAgentAddress3.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginAgentAddress3);
                
                TableSchema.TableColumn colvarOriginAgentCountry = new TableSchema.TableColumn(schema);
                colvarOriginAgentCountry.ColumnName = "OriginAgentCountry";
                colvarOriginAgentCountry.DataType = DbType.String;
                colvarOriginAgentCountry.MaxLength = 50;
                colvarOriginAgentCountry.AutoIncrement = false;
                colvarOriginAgentCountry.IsNullable = true;
                colvarOriginAgentCountry.IsPrimaryKey = false;
                colvarOriginAgentCountry.IsForeignKey = false;
                colvarOriginAgentCountry.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginAgentCountry);
                
                TableSchema.TableColumn colvarOriginAgentTel = new TableSchema.TableColumn(schema);
                colvarOriginAgentTel.ColumnName = "OriginAgentTel";
                colvarOriginAgentTel.DataType = DbType.String;
                colvarOriginAgentTel.MaxLength = 20;
                colvarOriginAgentTel.AutoIncrement = false;
                colvarOriginAgentTel.IsNullable = true;
                colvarOriginAgentTel.IsPrimaryKey = false;
                colvarOriginAgentTel.IsForeignKey = false;
                colvarOriginAgentTel.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginAgentTel);
                
                TableSchema.TableColumn colvarDestinationPort = new TableSchema.TableColumn(schema);
                colvarDestinationPort.ColumnName = "DestinationPort";
                colvarDestinationPort.DataType = DbType.String;
                colvarDestinationPort.MaxLength = 30;
                colvarDestinationPort.AutoIncrement = false;
                colvarDestinationPort.IsNullable = true;
                colvarDestinationPort.IsPrimaryKey = false;
                colvarDestinationPort.IsForeignKey = false;
                colvarDestinationPort.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestinationPort);
                
                TableSchema.TableColumn colvarFinalDestination = new TableSchema.TableColumn(schema);
                colvarFinalDestination.ColumnName = "FinalDestination";
                colvarFinalDestination.DataType = DbType.String;
                colvarFinalDestination.MaxLength = 30;
                colvarFinalDestination.AutoIncrement = false;
                colvarFinalDestination.IsNullable = true;
                colvarFinalDestination.IsPrimaryKey = false;
                colvarFinalDestination.IsForeignKey = false;
                colvarFinalDestination.IsReadOnly = false;
                
                schema.Columns.Add(colvarFinalDestination);
                
                TableSchema.TableColumn colvarOriginPortController = new TableSchema.TableColumn(schema);
                colvarOriginPortController.ColumnName = "OriginPortController";
                colvarOriginPortController.DataType = DbType.String;
                colvarOriginPortController.MaxLength = 50;
                colvarOriginPortController.AutoIncrement = false;
                colvarOriginPortController.IsNullable = true;
                colvarOriginPortController.IsPrimaryKey = false;
                colvarOriginPortController.IsForeignKey = false;
                colvarOriginPortController.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginPortController);
                
                TableSchema.TableColumn colvarExpressBL = new TableSchema.TableColumn(schema);
                colvarExpressBL.ColumnName = "ExpressBL";
                colvarExpressBL.DataType = DbType.Boolean;
                colvarExpressBL.MaxLength = 0;
                colvarExpressBL.AutoIncrement = false;
                colvarExpressBL.IsNullable = false;
                colvarExpressBL.IsPrimaryKey = false;
                colvarExpressBL.IsForeignKey = false;
                colvarExpressBL.IsReadOnly = false;
                
                schema.Columns.Add(colvarExpressBL);
                
                TableSchema.TableColumn colvarFumigationCert = new TableSchema.TableColumn(schema);
                colvarFumigationCert.ColumnName = "FumigationCert";
                colvarFumigationCert.DataType = DbType.Boolean;
                colvarFumigationCert.MaxLength = 0;
                colvarFumigationCert.AutoIncrement = false;
                colvarFumigationCert.IsNullable = false;
                colvarFumigationCert.IsPrimaryKey = false;
                colvarFumigationCert.IsForeignKey = false;
                colvarFumigationCert.IsReadOnly = false;
                
                schema.Columns.Add(colvarFumigationCert);
                
                TableSchema.TableColumn colvarGSPCert = new TableSchema.TableColumn(schema);
                colvarGSPCert.ColumnName = "GSPCert";
                colvarGSPCert.DataType = DbType.Boolean;
                colvarGSPCert.MaxLength = 0;
                colvarGSPCert.AutoIncrement = false;
                colvarGSPCert.IsNullable = false;
                colvarGSPCert.IsPrimaryKey = false;
                colvarGSPCert.IsForeignKey = false;
                colvarGSPCert.IsReadOnly = false;
                
                schema.Columns.Add(colvarGSPCert);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["WWIprov"].AddSchema("view_order_summary",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewOrderSummary()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewOrderSummary(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewOrderSummary(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewOrderSummary(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("OrderID")]
        [Bindable(true)]
        public int OrderID 
	    {
		    get
		    {
			    return GetColumnValue<int>("OrderID");
		    }
            set 
		    {
			    SetColumnValue("OrderID", value);
            }
        }
	      
        [XmlAttribute("CompanyID")]
        [Bindable(true)]
        public int? CompanyID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CompanyID");
		    }
            set 
		    {
			    SetColumnValue("CompanyID", value);
            }
        }
	      
        [XmlAttribute("OrderControllerID")]
        [Bindable(true)]
        public int? OrderControllerID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OrderControllerID");
		    }
            set 
		    {
			    SetColumnValue("OrderControllerID", value);
            }
        }
	      
        [XmlAttribute("OrderNumber")]
        [Bindable(true)]
        public int? OrderNumber 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OrderNumber");
		    }
            set 
		    {
			    SetColumnValue("OrderNumber", value);
            }
        }
	      
        [XmlAttribute("HouseBLNUmber")]
        [Bindable(true)]
        public string HouseBLNUmber 
	    {
		    get
		    {
			    return GetColumnValue<string>("HouseBLNUmber");
		    }
            set 
		    {
			    SetColumnValue("HouseBLNUmber", value);
            }
        }
	      
        [XmlAttribute("CustomersRef")]
        [Bindable(true)]
        public string CustomersRef 
	    {
		    get
		    {
			    return GetColumnValue<string>("CustomersRef");
		    }
            set 
		    {
			    SetColumnValue("CustomersRef", value);
            }
        }
	      
        [XmlAttribute("DateOrderCreated")]
        [Bindable(true)]
        public DateTime? DateOrderCreated 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("DateOrderCreated");
		    }
            set 
		    {
			    SetColumnValue("DateOrderCreated", value);
            }
        }
	      
        [XmlAttribute("Ets")]
        [Bindable(true)]
        public DateTime? Ets 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ETS");
		    }
            set 
		    {
			    SetColumnValue("ETS", value);
            }
        }
	      
        [XmlAttribute("Eta")]
        [Bindable(true)]
        public DateTime? Eta 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ETA");
		    }
            set 
		    {
			    SetColumnValue("ETA", value);
            }
        }
	      
        [XmlAttribute("JobClosed")]
        [Bindable(true)]
        public bool JobClosed 
	    {
		    get
		    {
			    return GetColumnValue<bool>("JobClosed");
		    }
            set 
		    {
			    SetColumnValue("JobClosed", value);
            }
        }
	      
        [XmlAttribute("ContactID")]
        [Bindable(true)]
        public int? ContactID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ContactID");
		    }
            set 
		    {
			    SetColumnValue("ContactID", value);
            }
        }
	      
        [XmlAttribute("ExWorksDate")]
        [Bindable(true)]
        public DateTime? ExWorksDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ExWorksDate");
		    }
            set 
		    {
			    SetColumnValue("ExWorksDate", value);
            }
        }
	      
        [XmlAttribute("CargoReady")]
        [Bindable(true)]
        public DateTime? CargoReady 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("CargoReady");
		    }
            set 
		    {
			    SetColumnValue("CargoReady", value);
            }
        }
	      
        [XmlAttribute("PrinterID")]
        [Bindable(true)]
        public int? PrinterID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PrinterID");
		    }
            set 
		    {
			    SetColumnValue("PrinterID", value);
            }
        }
	      
        [XmlAttribute("WarehouseDate")]
        [Bindable(true)]
        public DateTime? WarehouseDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("WarehouseDate");
		    }
            set 
		    {
			    SetColumnValue("WarehouseDate", value);
            }
        }
	      
        [XmlAttribute("ConsigneeID")]
        [Bindable(true)]
        public int? ConsigneeID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ConsigneeID");
		    }
            set 
		    {
			    SetColumnValue("ConsigneeID", value);
            }
        }
	      
        [XmlAttribute("OfficeIndicator")]
        [Bindable(true)]
        public string OfficeIndicator 
	    {
		    get
		    {
			    return GetColumnValue<string>("OfficeIndicator");
		    }
            set 
		    {
			    SetColumnValue("OfficeIndicator", value);
            }
        }
	      
        [XmlAttribute("PublishipOrder")]
        [Bindable(true)]
        public bool PublishipOrder 
	    {
		    get
		    {
			    return GetColumnValue<bool>("PublishipOrder");
		    }
            set 
		    {
			    SetColumnValue("PublishipOrder", value);
            }
        }
	      
        [XmlAttribute("HotJob")]
        [Bindable(true)]
        public bool HotJob 
	    {
		    get
		    {
			    return GetColumnValue<bool>("HotJob");
		    }
            set 
		    {
			    SetColumnValue("HotJob", value);
            }
        }
	      
        [XmlAttribute("NotifyPartyID")]
        [Bindable(true)]
        public int? NotifyPartyID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("NotifyPartyID");
		    }
            set 
		    {
			    SetColumnValue("NotifyPartyID", value);
            }
        }
	      
        [XmlAttribute("AgentAtOriginID")]
        [Bindable(true)]
        public int? AgentAtOriginID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("AgentAtOriginID");
		    }
            set 
		    {
			    SetColumnValue("AgentAtOriginID", value);
            }
        }
	      
        [XmlAttribute("AgentAtDestinationID")]
        [Bindable(true)]
        public int? AgentAtDestinationID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("AgentAtDestinationID");
		    }
            set 
		    {
			    SetColumnValue("AgentAtDestinationID", value);
            }
        }
	      
        [XmlAttribute("ClearingAgentID")]
        [Bindable(true)]
        public int? ClearingAgentID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ClearingAgentID");
		    }
            set 
		    {
			    SetColumnValue("ClearingAgentID", value);
            }
        }
	      
        [XmlAttribute("OnCarriageID")]
        [Bindable(true)]
        public int? OnCarriageID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OnCarriageID");
		    }
            set 
		    {
			    SetColumnValue("OnCarriageID", value);
            }
        }
	      
        [XmlAttribute("OperationsControllerID")]
        [Bindable(true)]
        public int? OperationsControllerID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OperationsControllerID");
		    }
            set 
		    {
			    SetColumnValue("OperationsControllerID", value);
            }
        }
	      
        [XmlAttribute("OriginPortControllerID")]
        [Bindable(true)]
        public int? OriginPortControllerID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OriginPortControllerID");
		    }
            set 
		    {
			    SetColumnValue("OriginPortControllerID", value);
            }
        }
	      
        [XmlAttribute("DestinationPortControllerID")]
        [Bindable(true)]
        public int? DestinationPortControllerID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("DestinationPortControllerID");
		    }
            set 
		    {
			    SetColumnValue("DestinationPortControllerID", value);
            }
        }
	      
        [XmlAttribute("EWDLastUpdated")]
        [Bindable(true)]
        public DateTime? EWDLastUpdated 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("EWDLastUpdated");
		    }
            set 
		    {
			    SetColumnValue("EWDLastUpdated", value);
            }
        }
	      
        [XmlAttribute("FinalDestinationID")]
        [Bindable(true)]
        public int? FinalDestinationID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("FinalDestinationID");
		    }
            set 
		    {
			    SetColumnValue("FinalDestinationID", value);
            }
        }
	      
        [XmlAttribute("OriginPointID")]
        [Bindable(true)]
        public int? OriginPointID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OriginPointID");
		    }
            set 
		    {
			    SetColumnValue("OriginPointID", value);
            }
        }
	      
        [XmlAttribute("PortID")]
        [Bindable(true)]
        public int? PortID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PortID");
		    }
            set 
		    {
			    SetColumnValue("PortID", value);
            }
        }
	      
        [XmlAttribute("DestinationPortID")]
        [Bindable(true)]
        public int? DestinationPortID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("DestinationPortID");
		    }
            set 
		    {
			    SetColumnValue("DestinationPortID", value);
            }
        }
	      
        [XmlAttribute("BookingReceived")]
        [Bindable(true)]
        public DateTime? BookingReceived 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("BookingReceived");
		    }
            set 
		    {
			    SetColumnValue("BookingReceived", value);
            }
        }
	      
        [XmlAttribute("OnTime")]
        [Bindable(true)]
        public bool? OnTime 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("OnTime");
		    }
            set 
		    {
			    SetColumnValue("OnTime", value);
            }
        }
	      
        [XmlAttribute("DestinationCountryID")]
        [Bindable(true)]
        public int? DestinationCountryID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("DestinationCountryID");
		    }
            set 
		    {
			    SetColumnValue("DestinationCountryID", value);
            }
        }
	      
        [XmlAttribute("JobClosureDate")]
        [Bindable(true)]
        public DateTime? JobClosureDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("JobClosureDate");
		    }
            set 
		    {
			    SetColumnValue("JobClosureDate", value);
            }
        }
	      
        [XmlAttribute("OriginDocs")]
        [Bindable(true)]
        public string OriginDocs 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginDocs");
		    }
            set 
		    {
			    SetColumnValue("OriginDocs", value);
            }
        }
	      
        [XmlAttribute("OrignTHC")]
        [Bindable(true)]
        public string OrignTHC 
	    {
		    get
		    {
			    return GetColumnValue<string>("OrignTHC");
		    }
            set 
		    {
			    SetColumnValue("OrignTHC", value);
            }
        }
	      
        [XmlAttribute("OriginTrucking")]
        [Bindable(true)]
        public string OriginTrucking 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginTrucking");
		    }
            set 
		    {
			    SetColumnValue("OriginTrucking", value);
            }
        }
	      
        [XmlAttribute("DestTHC")]
        [Bindable(true)]
        public string DestTHC 
	    {
		    get
		    {
			    return GetColumnValue<string>("DestTHC");
		    }
            set 
		    {
			    SetColumnValue("DestTHC", value);
            }
        }
	      
        [XmlAttribute("Freight")]
        [Bindable(true)]
        public string Freight 
	    {
		    get
		    {
			    return GetColumnValue<string>("Freight");
		    }
            set 
		    {
			    SetColumnValue("Freight", value);
            }
        }
	      
        [XmlAttribute("Sellingrate")]
        [Bindable(true)]
        public string Sellingrate 
	    {
		    get
		    {
			    return GetColumnValue<string>("Sellingrate");
		    }
            set 
		    {
			    SetColumnValue("Sellingrate", value);
            }
        }
	      
        [XmlAttribute("SellingrateAgent")]
        [Bindable(true)]
        public string SellingrateAgent 
	    {
		    get
		    {
			    return GetColumnValue<string>("SellingrateAgent");
		    }
            set 
		    {
			    SetColumnValue("SellingrateAgent", value);
            }
        }
	      
        [XmlAttribute("DocsRcdAndApproved")]
        [Bindable(true)]
        public bool DocsRcdAndApproved 
	    {
		    get
		    {
			    return GetColumnValue<bool>("DocsRcdAndApproved");
		    }
            set 
		    {
			    SetColumnValue("DocsRcdAndApproved", value);
            }
        }
	      
        [XmlAttribute("DocsApprovedDate")]
        [Bindable(true)]
        public DateTime? DocsApprovedDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("DocsApprovedDate");
		    }
            set 
		    {
			    SetColumnValue("DocsApprovedDate", value);
            }
        }
	      
        [XmlAttribute("RemarksToCustomer")]
        [Bindable(true)]
        public string RemarksToCustomer 
	    {
		    get
		    {
			    return GetColumnValue<string>("RemarksToCustomer");
		    }
            set 
		    {
			    SetColumnValue("RemarksToCustomer", value);
            }
        }
	      
        [XmlAttribute("Remarks")]
        [Bindable(true)]
        public string Remarks 
	    {
		    get
		    {
			    return GetColumnValue<string>("Remarks");
		    }
            set 
		    {
			    SetColumnValue("Remarks", value);
            }
        }
	      
        [XmlAttribute("Palletise")]
        [Bindable(true)]
        public int? Palletise 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Palletise");
		    }
            set 
		    {
			    SetColumnValue("Palletise", value);
            }
        }
	      
        [XmlAttribute("OtherDocsRequired")]
        [Bindable(true)]
        public string OtherDocsRequired 
	    {
		    get
		    {
			    return GetColumnValue<string>("OtherDocsRequired");
		    }
            set 
		    {
			    SetColumnValue("OtherDocsRequired", value);
            }
        }
	      
        [XmlAttribute("PackingDeclaration")]
        [Bindable(true)]
        public bool PackingDeclaration 
	    {
		    get
		    {
			    return GetColumnValue<bool>("PackingDeclaration");
		    }
            set 
		    {
			    SetColumnValue("PackingDeclaration", value);
            }
        }
	      
        [XmlAttribute("OrderController")]
        [Bindable(true)]
        public string OrderController 
	    {
		    get
		    {
			    return GetColumnValue<string>("OrderController");
		    }
            set 
		    {
			    SetColumnValue("OrderController", value);
            }
        }
	      
        [XmlAttribute("ContactName")]
        [Bindable(true)]
        public string ContactName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ContactName");
		    }
            set 
		    {
			    SetColumnValue("ContactName", value);
            }
        }
	      
        [XmlAttribute("EMail")]
        [Bindable(true)]
        public string EMail 
	    {
		    get
		    {
			    return GetColumnValue<string>("EMail");
		    }
            set 
		    {
			    SetColumnValue("EMail", value);
            }
        }
	      
        [XmlAttribute("OpsController")]
        [Bindable(true)]
        public string OpsController 
	    {
		    get
		    {
			    return GetColumnValue<string>("OpsController");
		    }
            set 
		    {
			    SetColumnValue("OpsController", value);
            }
        }
	      
        [XmlAttribute("CompanyName")]
        [Bindable(true)]
        public string CompanyName 
	    {
		    get
		    {
			    return GetColumnValue<string>("CompanyName");
		    }
            set 
		    {
			    SetColumnValue("CompanyName", value);
            }
        }
	      
        [XmlAttribute("Address1")]
        [Bindable(true)]
        public string Address1 
	    {
		    get
		    {
			    return GetColumnValue<string>("Address1");
		    }
            set 
		    {
			    SetColumnValue("Address1", value);
            }
        }
	      
        [XmlAttribute("Address2")]
        [Bindable(true)]
        public string Address2 
	    {
		    get
		    {
			    return GetColumnValue<string>("Address2");
		    }
            set 
		    {
			    SetColumnValue("Address2", value);
            }
        }
	      
        [XmlAttribute("Address3")]
        [Bindable(true)]
        public string Address3 
	    {
		    get
		    {
			    return GetColumnValue<string>("Address3");
		    }
            set 
		    {
			    SetColumnValue("Address3", value);
            }
        }
	      
        [XmlAttribute("CountryName")]
        [Bindable(true)]
        public string CountryName 
	    {
		    get
		    {
			    return GetColumnValue<string>("CountryName");
		    }
            set 
		    {
			    SetColumnValue("CountryName", value);
            }
        }
	      
        [XmlAttribute("TelNo")]
        [Bindable(true)]
        public string TelNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("TelNo");
		    }
            set 
		    {
			    SetColumnValue("TelNo", value);
            }
        }
	      
        [XmlAttribute("PrinterName")]
        [Bindable(true)]
        public string PrinterName 
	    {
		    get
		    {
			    return GetColumnValue<string>("PrinterName");
		    }
            set 
		    {
			    SetColumnValue("PrinterName", value);
            }
        }
	      
        [XmlAttribute("PrinterAdd1")]
        [Bindable(true)]
        public string PrinterAdd1 
	    {
		    get
		    {
			    return GetColumnValue<string>("PrinterAdd1");
		    }
            set 
		    {
			    SetColumnValue("PrinterAdd1", value);
            }
        }
	      
        [XmlAttribute("PrinterAdd2")]
        [Bindable(true)]
        public string PrinterAdd2 
	    {
		    get
		    {
			    return GetColumnValue<string>("PrinterAdd2");
		    }
            set 
		    {
			    SetColumnValue("PrinterAdd2", value);
            }
        }
	      
        [XmlAttribute("PrinterAdd3")]
        [Bindable(true)]
        public string PrinterAdd3 
	    {
		    get
		    {
			    return GetColumnValue<string>("PrinterAdd3");
		    }
            set 
		    {
			    SetColumnValue("PrinterAdd3", value);
            }
        }
	      
        [XmlAttribute("PrinterCountry")]
        [Bindable(true)]
        public string PrinterCountry 
	    {
		    get
		    {
			    return GetColumnValue<string>("PrinterCountry");
		    }
            set 
		    {
			    SetColumnValue("PrinterCountry", value);
            }
        }
	      
        [XmlAttribute("PrinterTel")]
        [Bindable(true)]
        public string PrinterTel 
	    {
		    get
		    {
			    return GetColumnValue<string>("PrinterTel");
		    }
            set 
		    {
			    SetColumnValue("PrinterTel", value);
            }
        }
	      
        [XmlAttribute("OriginCountry")]
        [Bindable(true)]
        public string OriginCountry 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginCountry");
		    }
            set 
		    {
			    SetColumnValue("OriginCountry", value);
            }
        }
	      
        [XmlAttribute("PlaceName")]
        [Bindable(true)]
        public string PlaceName 
	    {
		    get
		    {
			    return GetColumnValue<string>("PlaceName");
		    }
            set 
		    {
			    SetColumnValue("PlaceName", value);
            }
        }
	      
        [XmlAttribute("OriginPort")]
        [Bindable(true)]
        public string OriginPort 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginPort");
		    }
            set 
		    {
			    SetColumnValue("OriginPort", value);
            }
        }
	      
        [XmlAttribute("OriginAgent")]
        [Bindable(true)]
        public string OriginAgent 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginAgent");
		    }
            set 
		    {
			    SetColumnValue("OriginAgent", value);
            }
        }
	      
        [XmlAttribute("OriginAgentAddress1")]
        [Bindable(true)]
        public string OriginAgentAddress1 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginAgentAddress1");
		    }
            set 
		    {
			    SetColumnValue("OriginAgentAddress1", value);
            }
        }
	      
        [XmlAttribute("OriginAgentAddress2")]
        [Bindable(true)]
        public string OriginAgentAddress2 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginAgentAddress2");
		    }
            set 
		    {
			    SetColumnValue("OriginAgentAddress2", value);
            }
        }
	      
        [XmlAttribute("OriginAgentAddress3")]
        [Bindable(true)]
        public string OriginAgentAddress3 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginAgentAddress3");
		    }
            set 
		    {
			    SetColumnValue("OriginAgentAddress3", value);
            }
        }
	      
        [XmlAttribute("OriginAgentCountry")]
        [Bindable(true)]
        public string OriginAgentCountry 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginAgentCountry");
		    }
            set 
		    {
			    SetColumnValue("OriginAgentCountry", value);
            }
        }
	      
        [XmlAttribute("OriginAgentTel")]
        [Bindable(true)]
        public string OriginAgentTel 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginAgentTel");
		    }
            set 
		    {
			    SetColumnValue("OriginAgentTel", value);
            }
        }
	      
        [XmlAttribute("DestinationPort")]
        [Bindable(true)]
        public string DestinationPort 
	    {
		    get
		    {
			    return GetColumnValue<string>("DestinationPort");
		    }
            set 
		    {
			    SetColumnValue("DestinationPort", value);
            }
        }
	      
        [XmlAttribute("FinalDestination")]
        [Bindable(true)]
        public string FinalDestination 
	    {
		    get
		    {
			    return GetColumnValue<string>("FinalDestination");
		    }
            set 
		    {
			    SetColumnValue("FinalDestination", value);
            }
        }
	      
        [XmlAttribute("OriginPortController")]
        [Bindable(true)]
        public string OriginPortController 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginPortController");
		    }
            set 
		    {
			    SetColumnValue("OriginPortController", value);
            }
        }
	      
        [XmlAttribute("ExpressBL")]
        [Bindable(true)]
        public bool ExpressBL 
	    {
		    get
		    {
			    return GetColumnValue<bool>("ExpressBL");
		    }
            set 
		    {
			    SetColumnValue("ExpressBL", value);
            }
        }
	      
        [XmlAttribute("FumigationCert")]
        [Bindable(true)]
        public bool FumigationCert 
	    {
		    get
		    {
			    return GetColumnValue<bool>("FumigationCert");
		    }
            set 
		    {
			    SetColumnValue("FumigationCert", value);
            }
        }
	      
        [XmlAttribute("GSPCert")]
        [Bindable(true)]
        public bool GSPCert 
	    {
		    get
		    {
			    return GetColumnValue<bool>("GSPCert");
		    }
            set 
		    {
			    SetColumnValue("GSPCert", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string OrderID = @"OrderID";
            
            public static string CompanyID = @"CompanyID";
            
            public static string OrderControllerID = @"OrderControllerID";
            
            public static string OrderNumber = @"OrderNumber";
            
            public static string HouseBLNUmber = @"HouseBLNUmber";
            
            public static string CustomersRef = @"CustomersRef";
            
            public static string DateOrderCreated = @"DateOrderCreated";
            
            public static string Ets = @"ETS";
            
            public static string Eta = @"ETA";
            
            public static string JobClosed = @"JobClosed";
            
            public static string ContactID = @"ContactID";
            
            public static string ExWorksDate = @"ExWorksDate";
            
            public static string CargoReady = @"CargoReady";
            
            public static string PrinterID = @"PrinterID";
            
            public static string WarehouseDate = @"WarehouseDate";
            
            public static string ConsigneeID = @"ConsigneeID";
            
            public static string OfficeIndicator = @"OfficeIndicator";
            
            public static string PublishipOrder = @"PublishipOrder";
            
            public static string HotJob = @"HotJob";
            
            public static string NotifyPartyID = @"NotifyPartyID";
            
            public static string AgentAtOriginID = @"AgentAtOriginID";
            
            public static string AgentAtDestinationID = @"AgentAtDestinationID";
            
            public static string ClearingAgentID = @"ClearingAgentID";
            
            public static string OnCarriageID = @"OnCarriageID";
            
            public static string OperationsControllerID = @"OperationsControllerID";
            
            public static string OriginPortControllerID = @"OriginPortControllerID";
            
            public static string DestinationPortControllerID = @"DestinationPortControllerID";
            
            public static string EWDLastUpdated = @"EWDLastUpdated";
            
            public static string FinalDestinationID = @"FinalDestinationID";
            
            public static string OriginPointID = @"OriginPointID";
            
            public static string PortID = @"PortID";
            
            public static string DestinationPortID = @"DestinationPortID";
            
            public static string BookingReceived = @"BookingReceived";
            
            public static string OnTime = @"OnTime";
            
            public static string DestinationCountryID = @"DestinationCountryID";
            
            public static string JobClosureDate = @"JobClosureDate";
            
            public static string OriginDocs = @"OriginDocs";
            
            public static string OrignTHC = @"OrignTHC";
            
            public static string OriginTrucking = @"OriginTrucking";
            
            public static string DestTHC = @"DestTHC";
            
            public static string Freight = @"Freight";
            
            public static string Sellingrate = @"Sellingrate";
            
            public static string SellingrateAgent = @"SellingrateAgent";
            
            public static string DocsRcdAndApproved = @"DocsRcdAndApproved";
            
            public static string DocsApprovedDate = @"DocsApprovedDate";
            
            public static string RemarksToCustomer = @"RemarksToCustomer";
            
            public static string Remarks = @"Remarks";
            
            public static string Palletise = @"Palletise";
            
            public static string OtherDocsRequired = @"OtherDocsRequired";
            
            public static string PackingDeclaration = @"PackingDeclaration";
            
            public static string OrderController = @"OrderController";
            
            public static string ContactName = @"ContactName";
            
            public static string EMail = @"EMail";
            
            public static string OpsController = @"OpsController";
            
            public static string CompanyName = @"CompanyName";
            
            public static string Address1 = @"Address1";
            
            public static string Address2 = @"Address2";
            
            public static string Address3 = @"Address3";
            
            public static string CountryName = @"CountryName";
            
            public static string TelNo = @"TelNo";
            
            public static string PrinterName = @"PrinterName";
            
            public static string PrinterAdd1 = @"PrinterAdd1";
            
            public static string PrinterAdd2 = @"PrinterAdd2";
            
            public static string PrinterAdd3 = @"PrinterAdd3";
            
            public static string PrinterCountry = @"PrinterCountry";
            
            public static string PrinterTel = @"PrinterTel";
            
            public static string OriginCountry = @"OriginCountry";
            
            public static string PlaceName = @"PlaceName";
            
            public static string OriginPort = @"OriginPort";
            
            public static string OriginAgent = @"OriginAgent";
            
            public static string OriginAgentAddress1 = @"OriginAgentAddress1";
            
            public static string OriginAgentAddress2 = @"OriginAgentAddress2";
            
            public static string OriginAgentAddress3 = @"OriginAgentAddress3";
            
            public static string OriginAgentCountry = @"OriginAgentCountry";
            
            public static string OriginAgentTel = @"OriginAgentTel";
            
            public static string DestinationPort = @"DestinationPort";
            
            public static string FinalDestination = @"FinalDestination";
            
            public static string OriginPortController = @"OriginPortController";
            
            public static string ExpressBL = @"ExpressBL";
            
            public static string FumigationCert = @"FumigationCert";
            
            public static string GSPCert = @"GSPCert";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
