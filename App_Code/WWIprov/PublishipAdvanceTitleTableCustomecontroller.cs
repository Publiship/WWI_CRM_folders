using System;
using System.Text;
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration;
using System.Xml;
using System.Xml.Serialization;
using SubSonic;
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Logistics
{
    /// <summary>
    /// Controller class for PublishipAdvanceTitleTable
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class PublishipAdvanceTitleTableCustomcontroller
    {
        // Preload our schema..
        PublishipAdvanceTitleTable thisSchemaLoad = new PublishipAdvanceTitleTable();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
                if (userName.Length == 0)
                {
                    if (System.Web.HttpContext.Current != null)
                    {
                        userName = System.Web.HttpContext.Current.User.Identity.Name;
                    }
                    else
                    {
                        userName = System.Threading.Thread.CurrentPrincipal.Identity.Name;
                    }
                }
                return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public PublishipAdvanceTitleTableCollection TitlesFetchAll()
        {
            PublishipAdvanceTitleTableCollection coll = new PublishipAdvanceTitleTableCollection();
            Query qry = new Query(PublishipAdvanceTitleTable.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public PublishipAdvanceTitleTableCollection TitlesFetchByID(object PATitleID)
        {
            PublishipAdvanceTitleTableCollection coll = new PublishipAdvanceTitleTableCollection().Where("PATitleID", PATitleID).Load();
            return coll;
        }

        /// <summary>
        /// custom queries
        /// </summary>
        /// <param name="PAOrderID"></param>
        /// <returns></returns>
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public PublishipAdvanceTitleTableCollection TitlesFetchByPaOrderID(object PAOrderID)
        {
            PublishipAdvanceTitleTableCollection coll = new PublishipAdvanceTitleTableCollection().Where("PAOrderID", PAOrderID).Load();
            return coll;
        }
        //

        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public PublishipAdvanceTitleTableCollection TitlesFetchByQuery(Query qry)
        {
            PublishipAdvanceTitleTableCollection coll = new PublishipAdvanceTitleTableCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool TitleDelete(object PATitleID)
        {
            return (PublishipAdvanceTitleTable.Delete(PATitleID) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool TitleDestroy(object PATitleID)
        {
            return (PublishipAdvanceTitleTable.Destroy(PATitleID) == 1);
        }



        /// <summary>
        /// Inserts a record, can be used with the Object Data Source
        /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public void TitleInsert(int PAOrderID, string Title, byte[] Ts)
        {
            PublishipAdvanceTitleTable item = new PublishipAdvanceTitleTable();

            item.PAOrderID = PAOrderID;

            item.Title = Title;

            item.Ts = Ts;


            item.Save(UserName);
        }

        /// <summary>
        /// Updates a record, can be used with the Object Data Source
        /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public void TitleUpdate(int PATitleID, int PAOrderID, string Title, byte[] Ts)
        {
            PublishipAdvanceTitleTable item = new PublishipAdvanceTitleTable();
            item.MarkOld();
            item.IsLoaded = true;

            item.PATitleID = PATitleID;

            item.PAOrderID = PAOrderID;

            item.Title = Title;

            item.Ts = Ts;

            item.Save(UserName);
        }
    }
}
