using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Logistics{
    /// <summary>
    /// Strongly-typed collection for the ViewContainerSummary class.
    /// </summary>
    [Serializable]
    public partial class ViewContainerSummaryCollection : ReadOnlyList<ViewContainerSummary, ViewContainerSummaryCollection>
    {        
        public ViewContainerSummaryCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the view_container_summary view.
    /// </summary>
    [Serializable]
    public partial class ViewContainerSummary : ReadOnlyRecord<ViewContainerSummary>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("view_container_summary", TableType.View, DataService.GetInstance("WWIprov"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarContainerSubID = new TableSchema.TableColumn(schema);
                colvarContainerSubID.ColumnName = "ContainerSubID";
                colvarContainerSubID.DataType = DbType.Int32;
                colvarContainerSubID.MaxLength = 0;
                colvarContainerSubID.AutoIncrement = false;
                colvarContainerSubID.IsNullable = false;
                colvarContainerSubID.IsPrimaryKey = false;
                colvarContainerSubID.IsForeignKey = false;
                colvarContainerSubID.IsReadOnly = false;
                
                schema.Columns.Add(colvarContainerSubID);
                
                TableSchema.TableColumn colvarContainerID = new TableSchema.TableColumn(schema);
                colvarContainerID.ColumnName = "ContainerID";
                colvarContainerID.DataType = DbType.Int32;
                colvarContainerID.MaxLength = 0;
                colvarContainerID.AutoIncrement = false;
                colvarContainerID.IsNullable = true;
                colvarContainerID.IsPrimaryKey = false;
                colvarContainerID.IsForeignKey = false;
                colvarContainerID.IsReadOnly = false;
                
                schema.Columns.Add(colvarContainerID);
                
                TableSchema.TableColumn colvarContainerNumber = new TableSchema.TableColumn(schema);
                colvarContainerNumber.ColumnName = "ContainerNumber";
                colvarContainerNumber.DataType = DbType.String;
                colvarContainerNumber.MaxLength = 50;
                colvarContainerNumber.AutoIncrement = false;
                colvarContainerNumber.IsNullable = true;
                colvarContainerNumber.IsPrimaryKey = false;
                colvarContainerNumber.IsForeignKey = false;
                colvarContainerNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarContainerNumber);
                
                TableSchema.TableColumn colvarWeight = new TableSchema.TableColumn(schema);
                colvarWeight.ColumnName = "Weight";
                colvarWeight.DataType = DbType.Double;
                colvarWeight.MaxLength = 0;
                colvarWeight.AutoIncrement = false;
                colvarWeight.IsNullable = true;
                colvarWeight.IsPrimaryKey = false;
                colvarWeight.IsForeignKey = false;
                colvarWeight.IsReadOnly = false;
                
                schema.Columns.Add(colvarWeight);
                
                TableSchema.TableColumn colvarCbm = new TableSchema.TableColumn(schema);
                colvarCbm.ColumnName = "Cbm";
                colvarCbm.DataType = DbType.Double;
                colvarCbm.MaxLength = 0;
                colvarCbm.AutoIncrement = false;
                colvarCbm.IsNullable = true;
                colvarCbm.IsPrimaryKey = false;
                colvarCbm.IsForeignKey = false;
                colvarCbm.IsReadOnly = false;
                
                schema.Columns.Add(colvarCbm);
                
                TableSchema.TableColumn colvarNumberOfPackages = new TableSchema.TableColumn(schema);
                colvarNumberOfPackages.ColumnName = "NumberOfPackages";
                colvarNumberOfPackages.DataType = DbType.Int32;
                colvarNumberOfPackages.MaxLength = 0;
                colvarNumberOfPackages.AutoIncrement = false;
                colvarNumberOfPackages.IsNullable = true;
                colvarNumberOfPackages.IsPrimaryKey = false;
                colvarNumberOfPackages.IsForeignKey = false;
                colvarNumberOfPackages.IsReadOnly = false;
                
                schema.Columns.Add(colvarNumberOfPackages);
                
                TableSchema.TableColumn colvarDeliveryAddress = new TableSchema.TableColumn(schema);
                colvarDeliveryAddress.ColumnName = "DeliveryAddress";
                colvarDeliveryAddress.DataType = DbType.Int32;
                colvarDeliveryAddress.MaxLength = 0;
                colvarDeliveryAddress.AutoIncrement = false;
                colvarDeliveryAddress.IsNullable = true;
                colvarDeliveryAddress.IsPrimaryKey = false;
                colvarDeliveryAddress.IsForeignKey = false;
                colvarDeliveryAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeliveryAddress);
                
                TableSchema.TableColumn colvarExWorksDate = new TableSchema.TableColumn(schema);
                colvarExWorksDate.ColumnName = "ExWorksDate";
                colvarExWorksDate.DataType = DbType.DateTime;
                colvarExWorksDate.MaxLength = 0;
                colvarExWorksDate.AutoIncrement = false;
                colvarExWorksDate.IsNullable = true;
                colvarExWorksDate.IsPrimaryKey = false;
                colvarExWorksDate.IsForeignKey = false;
                colvarExWorksDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarExWorksDate);
                
                TableSchema.TableColumn colvarCargoReady = new TableSchema.TableColumn(schema);
                colvarCargoReady.ColumnName = "CargoReady";
                colvarCargoReady.DataType = DbType.DateTime;
                colvarCargoReady.MaxLength = 0;
                colvarCargoReady.AutoIncrement = false;
                colvarCargoReady.IsNullable = true;
                colvarCargoReady.IsPrimaryKey = false;
                colvarCargoReady.IsForeignKey = false;
                colvarCargoReady.IsReadOnly = false;
                
                schema.Columns.Add(colvarCargoReady);
                
                TableSchema.TableColumn colvarBookingReceived = new TableSchema.TableColumn(schema);
                colvarBookingReceived.ColumnName = "BookingReceived";
                colvarBookingReceived.DataType = DbType.DateTime;
                colvarBookingReceived.MaxLength = 0;
                colvarBookingReceived.AutoIncrement = false;
                colvarBookingReceived.IsNullable = true;
                colvarBookingReceived.IsPrimaryKey = false;
                colvarBookingReceived.IsForeignKey = false;
                colvarBookingReceived.IsReadOnly = false;
                
                schema.Columns.Add(colvarBookingReceived);
                
                TableSchema.TableColumn colvarCompanyID = new TableSchema.TableColumn(schema);
                colvarCompanyID.ColumnName = "CompanyID";
                colvarCompanyID.DataType = DbType.Int32;
                colvarCompanyID.MaxLength = 0;
                colvarCompanyID.AutoIncrement = false;
                colvarCompanyID.IsNullable = true;
                colvarCompanyID.IsPrimaryKey = false;
                colvarCompanyID.IsForeignKey = false;
                colvarCompanyID.IsReadOnly = false;
                
                schema.Columns.Add(colvarCompanyID);
                
                TableSchema.TableColumn colvarClient = new TableSchema.TableColumn(schema);
                colvarClient.ColumnName = "Client";
                colvarClient.DataType = DbType.String;
                colvarClient.MaxLength = 50;
                colvarClient.AutoIncrement = false;
                colvarClient.IsNullable = true;
                colvarClient.IsPrimaryKey = false;
                colvarClient.IsForeignKey = false;
                colvarClient.IsReadOnly = false;
                
                schema.Columns.Add(colvarClient);
                
                TableSchema.TableColumn colvarPrinter = new TableSchema.TableColumn(schema);
                colvarPrinter.ColumnName = "Printer";
                colvarPrinter.DataType = DbType.String;
                colvarPrinter.MaxLength = 50;
                colvarPrinter.AutoIncrement = false;
                colvarPrinter.IsNullable = true;
                colvarPrinter.IsPrimaryKey = false;
                colvarPrinter.IsForeignKey = false;
                colvarPrinter.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinter);
                
                TableSchema.TableColumn colvarOrderNumber = new TableSchema.TableColumn(schema);
                colvarOrderNumber.ColumnName = "OrderNumber";
                colvarOrderNumber.DataType = DbType.Int32;
                colvarOrderNumber.MaxLength = 0;
                colvarOrderNumber.AutoIncrement = false;
                colvarOrderNumber.IsNullable = true;
                colvarOrderNumber.IsPrimaryKey = false;
                colvarOrderNumber.IsForeignKey = false;
                colvarOrderNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderNumber);
                
                TableSchema.TableColumn colvarJobClosed = new TableSchema.TableColumn(schema);
                colvarJobClosed.ColumnName = "JobClosed";
                colvarJobClosed.DataType = DbType.Boolean;
                colvarJobClosed.MaxLength = 0;
                colvarJobClosed.AutoIncrement = false;
                colvarJobClosed.IsNullable = true;
                colvarJobClosed.IsPrimaryKey = false;
                colvarJobClosed.IsForeignKey = false;
                colvarJobClosed.IsReadOnly = false;
                
                schema.Columns.Add(colvarJobClosed);
                
                TableSchema.TableColumn colvarEts = new TableSchema.TableColumn(schema);
                colvarEts.ColumnName = "ETS";
                colvarEts.DataType = DbType.DateTime;
                colvarEts.MaxLength = 0;
                colvarEts.AutoIncrement = false;
                colvarEts.IsNullable = true;
                colvarEts.IsPrimaryKey = false;
                colvarEts.IsForeignKey = false;
                colvarEts.IsReadOnly = false;
                
                schema.Columns.Add(colvarEts);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["WWIprov"].AddSchema("view_container_summary",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewContainerSummary()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewContainerSummary(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewContainerSummary(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewContainerSummary(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("ContainerSubID")]
        [Bindable(true)]
        public int ContainerSubID 
	    {
		    get
		    {
			    return GetColumnValue<int>("ContainerSubID");
		    }
            set 
		    {
			    SetColumnValue("ContainerSubID", value);
            }
        }
	      
        [XmlAttribute("ContainerID")]
        [Bindable(true)]
        public int? ContainerID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ContainerID");
		    }
            set 
		    {
			    SetColumnValue("ContainerID", value);
            }
        }
	      
        [XmlAttribute("ContainerNumber")]
        [Bindable(true)]
        public string ContainerNumber 
	    {
		    get
		    {
			    return GetColumnValue<string>("ContainerNumber");
		    }
            set 
		    {
			    SetColumnValue("ContainerNumber", value);
            }
        }
	      
        [XmlAttribute("Weight")]
        [Bindable(true)]
        public double? Weight 
	    {
		    get
		    {
			    return GetColumnValue<double?>("Weight");
		    }
            set 
		    {
			    SetColumnValue("Weight", value);
            }
        }
	      
        [XmlAttribute("Cbm")]
        [Bindable(true)]
        public double? Cbm 
	    {
		    get
		    {
			    return GetColumnValue<double?>("Cbm");
		    }
            set 
		    {
			    SetColumnValue("Cbm", value);
            }
        }
	      
        [XmlAttribute("NumberOfPackages")]
        [Bindable(true)]
        public int? NumberOfPackages 
	    {
		    get
		    {
			    return GetColumnValue<int?>("NumberOfPackages");
		    }
            set 
		    {
			    SetColumnValue("NumberOfPackages", value);
            }
        }
	      
        [XmlAttribute("DeliveryAddress")]
        [Bindable(true)]
        public int? DeliveryAddress 
	    {
		    get
		    {
			    return GetColumnValue<int?>("DeliveryAddress");
		    }
            set 
		    {
			    SetColumnValue("DeliveryAddress", value);
            }
        }
	      
        [XmlAttribute("ExWorksDate")]
        [Bindable(true)]
        public DateTime? ExWorksDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ExWorksDate");
		    }
            set 
		    {
			    SetColumnValue("ExWorksDate", value);
            }
        }
	      
        [XmlAttribute("CargoReady")]
        [Bindable(true)]
        public DateTime? CargoReady 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("CargoReady");
		    }
            set 
		    {
			    SetColumnValue("CargoReady", value);
            }
        }
	      
        [XmlAttribute("BookingReceived")]
        [Bindable(true)]
        public DateTime? BookingReceived 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("BookingReceived");
		    }
            set 
		    {
			    SetColumnValue("BookingReceived", value);
            }
        }
	      
        [XmlAttribute("CompanyID")]
        [Bindable(true)]
        public int? CompanyID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CompanyID");
		    }
            set 
		    {
			    SetColumnValue("CompanyID", value);
            }
        }
	      
        [XmlAttribute("Client")]
        [Bindable(true)]
        public string Client 
	    {
		    get
		    {
			    return GetColumnValue<string>("Client");
		    }
            set 
		    {
			    SetColumnValue("Client", value);
            }
        }
	      
        [XmlAttribute("Printer")]
        [Bindable(true)]
        public string Printer 
	    {
		    get
		    {
			    return GetColumnValue<string>("Printer");
		    }
            set 
		    {
			    SetColumnValue("Printer", value);
            }
        }
	      
        [XmlAttribute("OrderNumber")]
        [Bindable(true)]
        public int? OrderNumber 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OrderNumber");
		    }
            set 
		    {
			    SetColumnValue("OrderNumber", value);
            }
        }
	      
        [XmlAttribute("JobClosed")]
        [Bindable(true)]
        public bool? JobClosed 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("JobClosed");
		    }
            set 
		    {
			    SetColumnValue("JobClosed", value);
            }
        }
	      
        [XmlAttribute("Ets")]
        [Bindable(true)]
        public DateTime? Ets 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ETS");
		    }
            set 
		    {
			    SetColumnValue("ETS", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string ContainerSubID = @"ContainerSubID";
            
            public static string ContainerID = @"ContainerID";
            
            public static string ContainerNumber = @"ContainerNumber";
            
            public static string Weight = @"Weight";
            
            public static string Cbm = @"Cbm";
            
            public static string NumberOfPackages = @"NumberOfPackages";
            
            public static string DeliveryAddress = @"DeliveryAddress";
            
            public static string ExWorksDate = @"ExWorksDate";
            
            public static string CargoReady = @"CargoReady";
            
            public static string BookingReceived = @"BookingReceived";
            
            public static string CompanyID = @"CompanyID";
            
            public static string Client = @"Client";
            
            public static string Printer = @"Printer";
            
            public static string OrderNumber = @"OrderNumber";
            
            public static string JobClosed = @"JobClosed";
            
            public static string Ets = @"ETS";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
