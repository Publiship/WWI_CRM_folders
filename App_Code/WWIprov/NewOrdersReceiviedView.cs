using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Logistics{
    /// <summary>
    /// Strongly-typed collection for the NewOrdersReceiviedView class.
    /// </summary>
    [Serializable]
    public partial class NewOrdersReceiviedViewCollection : ReadOnlyList<NewOrdersReceiviedView, NewOrdersReceiviedViewCollection>
    {        
        public NewOrdersReceiviedViewCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the NewOrdersReceiviedView view.
    /// </summary>
    [Serializable]
    public partial class NewOrdersReceiviedView : ReadOnlyRecord<NewOrdersReceiviedView>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("NewOrdersReceiviedView", TableType.View, DataService.GetInstance("WWIprov"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarOrderNumber = new TableSchema.TableColumn(schema);
                colvarOrderNumber.ColumnName = "OrderNumber";
                colvarOrderNumber.DataType = DbType.Int32;
                colvarOrderNumber.MaxLength = 0;
                colvarOrderNumber.AutoIncrement = false;
                colvarOrderNumber.IsNullable = true;
                colvarOrderNumber.IsPrimaryKey = false;
                colvarOrderNumber.IsForeignKey = false;
                colvarOrderNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderNumber);
                
                TableSchema.TableColumn colvarCompanyName = new TableSchema.TableColumn(schema);
                colvarCompanyName.ColumnName = "CompanyName";
                colvarCompanyName.DataType = DbType.String;
                colvarCompanyName.MaxLength = 50;
                colvarCompanyName.AutoIncrement = false;
                colvarCompanyName.IsNullable = true;
                colvarCompanyName.IsPrimaryKey = false;
                colvarCompanyName.IsForeignKey = false;
                colvarCompanyName.IsReadOnly = false;
                
                schema.Columns.Add(colvarCompanyName);
                
                TableSchema.TableColumn colvarAddress1 = new TableSchema.TableColumn(schema);
                colvarAddress1.ColumnName = "Address1";
                colvarAddress1.DataType = DbType.String;
                colvarAddress1.MaxLength = 40;
                colvarAddress1.AutoIncrement = false;
                colvarAddress1.IsNullable = true;
                colvarAddress1.IsPrimaryKey = false;
                colvarAddress1.IsForeignKey = false;
                colvarAddress1.IsReadOnly = false;
                
                schema.Columns.Add(colvarAddress1);
                
                TableSchema.TableColumn colvarAddress2 = new TableSchema.TableColumn(schema);
                colvarAddress2.ColumnName = "Address2";
                colvarAddress2.DataType = DbType.String;
                colvarAddress2.MaxLength = 40;
                colvarAddress2.AutoIncrement = false;
                colvarAddress2.IsNullable = true;
                colvarAddress2.IsPrimaryKey = false;
                colvarAddress2.IsForeignKey = false;
                colvarAddress2.IsReadOnly = false;
                
                schema.Columns.Add(colvarAddress2);
                
                TableSchema.TableColumn colvarAddress3 = new TableSchema.TableColumn(schema);
                colvarAddress3.ColumnName = "Address3";
                colvarAddress3.DataType = DbType.String;
                colvarAddress3.MaxLength = 40;
                colvarAddress3.AutoIncrement = false;
                colvarAddress3.IsNullable = true;
                colvarAddress3.IsPrimaryKey = false;
                colvarAddress3.IsForeignKey = false;
                colvarAddress3.IsReadOnly = false;
                
                schema.Columns.Add(colvarAddress3);
                
                TableSchema.TableColumn colvarClientCountryName = new TableSchema.TableColumn(schema);
                colvarClientCountryName.ColumnName = "ClientCountryName";
                colvarClientCountryName.DataType = DbType.String;
                colvarClientCountryName.MaxLength = 50;
                colvarClientCountryName.AutoIncrement = false;
                colvarClientCountryName.IsNullable = true;
                colvarClientCountryName.IsPrimaryKey = false;
                colvarClientCountryName.IsForeignKey = false;
                colvarClientCountryName.IsReadOnly = false;
                
                schema.Columns.Add(colvarClientCountryName);
                
                TableSchema.TableColumn colvarConsigneeName = new TableSchema.TableColumn(schema);
                colvarConsigneeName.ColumnName = "ConsigneeName";
                colvarConsigneeName.DataType = DbType.String;
                colvarConsigneeName.MaxLength = 50;
                colvarConsigneeName.AutoIncrement = false;
                colvarConsigneeName.IsNullable = true;
                colvarConsigneeName.IsPrimaryKey = false;
                colvarConsigneeName.IsForeignKey = false;
                colvarConsigneeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsigneeName);
                
                TableSchema.TableColumn colvarConsigneeAdd1 = new TableSchema.TableColumn(schema);
                colvarConsigneeAdd1.ColumnName = "ConsigneeAdd1";
                colvarConsigneeAdd1.DataType = DbType.String;
                colvarConsigneeAdd1.MaxLength = 40;
                colvarConsigneeAdd1.AutoIncrement = false;
                colvarConsigneeAdd1.IsNullable = true;
                colvarConsigneeAdd1.IsPrimaryKey = false;
                colvarConsigneeAdd1.IsForeignKey = false;
                colvarConsigneeAdd1.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsigneeAdd1);
                
                TableSchema.TableColumn colvarConsigneeAdd2 = new TableSchema.TableColumn(schema);
                colvarConsigneeAdd2.ColumnName = "ConsigneeAdd2";
                colvarConsigneeAdd2.DataType = DbType.String;
                colvarConsigneeAdd2.MaxLength = 40;
                colvarConsigneeAdd2.AutoIncrement = false;
                colvarConsigneeAdd2.IsNullable = true;
                colvarConsigneeAdd2.IsPrimaryKey = false;
                colvarConsigneeAdd2.IsForeignKey = false;
                colvarConsigneeAdd2.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsigneeAdd2);
                
                TableSchema.TableColumn colvarConsigneeAdd3 = new TableSchema.TableColumn(schema);
                colvarConsigneeAdd3.ColumnName = "ConsigneeAdd3";
                colvarConsigneeAdd3.DataType = DbType.String;
                colvarConsigneeAdd3.MaxLength = 40;
                colvarConsigneeAdd3.AutoIncrement = false;
                colvarConsigneeAdd3.IsNullable = true;
                colvarConsigneeAdd3.IsPrimaryKey = false;
                colvarConsigneeAdd3.IsForeignKey = false;
                colvarConsigneeAdd3.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsigneeAdd3);
                
                TableSchema.TableColumn colvarConsigneeCountry = new TableSchema.TableColumn(schema);
                colvarConsigneeCountry.ColumnName = "ConsigneeCountry";
                colvarConsigneeCountry.DataType = DbType.String;
                colvarConsigneeCountry.MaxLength = 50;
                colvarConsigneeCountry.AutoIncrement = false;
                colvarConsigneeCountry.IsNullable = false;
                colvarConsigneeCountry.IsPrimaryKey = false;
                colvarConsigneeCountry.IsForeignKey = false;
                colvarConsigneeCountry.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsigneeCountry);
                
                TableSchema.TableColumn colvarNotifyName = new TableSchema.TableColumn(schema);
                colvarNotifyName.ColumnName = "NotifyName";
                colvarNotifyName.DataType = DbType.String;
                colvarNotifyName.MaxLength = 50;
                colvarNotifyName.AutoIncrement = false;
                colvarNotifyName.IsNullable = true;
                colvarNotifyName.IsPrimaryKey = false;
                colvarNotifyName.IsForeignKey = false;
                colvarNotifyName.IsReadOnly = false;
                
                schema.Columns.Add(colvarNotifyName);
                
                TableSchema.TableColumn colvarNotifyAdd1 = new TableSchema.TableColumn(schema);
                colvarNotifyAdd1.ColumnName = "NotifyAdd1";
                colvarNotifyAdd1.DataType = DbType.String;
                colvarNotifyAdd1.MaxLength = 40;
                colvarNotifyAdd1.AutoIncrement = false;
                colvarNotifyAdd1.IsNullable = true;
                colvarNotifyAdd1.IsPrimaryKey = false;
                colvarNotifyAdd1.IsForeignKey = false;
                colvarNotifyAdd1.IsReadOnly = false;
                
                schema.Columns.Add(colvarNotifyAdd1);
                
                TableSchema.TableColumn colvarNotifyAdd2 = new TableSchema.TableColumn(schema);
                colvarNotifyAdd2.ColumnName = "NotifyAdd2";
                colvarNotifyAdd2.DataType = DbType.String;
                colvarNotifyAdd2.MaxLength = 40;
                colvarNotifyAdd2.AutoIncrement = false;
                colvarNotifyAdd2.IsNullable = true;
                colvarNotifyAdd2.IsPrimaryKey = false;
                colvarNotifyAdd2.IsForeignKey = false;
                colvarNotifyAdd2.IsReadOnly = false;
                
                schema.Columns.Add(colvarNotifyAdd2);
                
                TableSchema.TableColumn colvarNotifyAdd3 = new TableSchema.TableColumn(schema);
                colvarNotifyAdd3.ColumnName = "NotifyAdd3";
                colvarNotifyAdd3.DataType = DbType.String;
                colvarNotifyAdd3.MaxLength = 40;
                colvarNotifyAdd3.AutoIncrement = false;
                colvarNotifyAdd3.IsNullable = true;
                colvarNotifyAdd3.IsPrimaryKey = false;
                colvarNotifyAdd3.IsForeignKey = false;
                colvarNotifyAdd3.IsReadOnly = false;
                
                schema.Columns.Add(colvarNotifyAdd3);
                
                TableSchema.TableColumn colvarNotifyCountry = new TableSchema.TableColumn(schema);
                colvarNotifyCountry.ColumnName = "NotifyCountry";
                colvarNotifyCountry.DataType = DbType.String;
                colvarNotifyCountry.MaxLength = 50;
                colvarNotifyCountry.AutoIncrement = false;
                colvarNotifyCountry.IsNullable = false;
                colvarNotifyCountry.IsPrimaryKey = false;
                colvarNotifyCountry.IsForeignKey = false;
                colvarNotifyCountry.IsReadOnly = false;
                
                schema.Columns.Add(colvarNotifyCountry);
                
                TableSchema.TableColumn colvarPrinterName = new TableSchema.TableColumn(schema);
                colvarPrinterName.ColumnName = "PrinterName";
                colvarPrinterName.DataType = DbType.String;
                colvarPrinterName.MaxLength = 50;
                colvarPrinterName.AutoIncrement = false;
                colvarPrinterName.IsNullable = true;
                colvarPrinterName.IsPrimaryKey = false;
                colvarPrinterName.IsForeignKey = false;
                colvarPrinterName.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinterName);
                
                TableSchema.TableColumn colvarPrinterAdd1 = new TableSchema.TableColumn(schema);
                colvarPrinterAdd1.ColumnName = "PrinterAdd1";
                colvarPrinterAdd1.DataType = DbType.String;
                colvarPrinterAdd1.MaxLength = 40;
                colvarPrinterAdd1.AutoIncrement = false;
                colvarPrinterAdd1.IsNullable = true;
                colvarPrinterAdd1.IsPrimaryKey = false;
                colvarPrinterAdd1.IsForeignKey = false;
                colvarPrinterAdd1.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinterAdd1);
                
                TableSchema.TableColumn colvarPrinterAdd2 = new TableSchema.TableColumn(schema);
                colvarPrinterAdd2.ColumnName = "PrinterAdd2";
                colvarPrinterAdd2.DataType = DbType.String;
                colvarPrinterAdd2.MaxLength = 40;
                colvarPrinterAdd2.AutoIncrement = false;
                colvarPrinterAdd2.IsNullable = true;
                colvarPrinterAdd2.IsPrimaryKey = false;
                colvarPrinterAdd2.IsForeignKey = false;
                colvarPrinterAdd2.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinterAdd2);
                
                TableSchema.TableColumn colvarPrinterAdd3 = new TableSchema.TableColumn(schema);
                colvarPrinterAdd3.ColumnName = "PrinterAdd3";
                colvarPrinterAdd3.DataType = DbType.String;
                colvarPrinterAdd3.MaxLength = 40;
                colvarPrinterAdd3.AutoIncrement = false;
                colvarPrinterAdd3.IsNullable = true;
                colvarPrinterAdd3.IsPrimaryKey = false;
                colvarPrinterAdd3.IsForeignKey = false;
                colvarPrinterAdd3.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinterAdd3);
                
                TableSchema.TableColumn colvarPrinterCountry = new TableSchema.TableColumn(schema);
                colvarPrinterCountry.ColumnName = "PrinterCountry";
                colvarPrinterCountry.DataType = DbType.String;
                colvarPrinterCountry.MaxLength = 50;
                colvarPrinterCountry.AutoIncrement = false;
                colvarPrinterCountry.IsNullable = false;
                colvarPrinterCountry.IsPrimaryKey = false;
                colvarPrinterCountry.IsForeignKey = false;
                colvarPrinterCountry.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinterCountry);
                
                TableSchema.TableColumn colvarOriginAgent = new TableSchema.TableColumn(schema);
                colvarOriginAgent.ColumnName = "OriginAgent";
                colvarOriginAgent.DataType = DbType.String;
                colvarOriginAgent.MaxLength = 50;
                colvarOriginAgent.AutoIncrement = false;
                colvarOriginAgent.IsNullable = true;
                colvarOriginAgent.IsPrimaryKey = false;
                colvarOriginAgent.IsForeignKey = false;
                colvarOriginAgent.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginAgent);
                
                TableSchema.TableColumn colvarOriginAgentAddress1 = new TableSchema.TableColumn(schema);
                colvarOriginAgentAddress1.ColumnName = "OriginAgentAddress1";
                colvarOriginAgentAddress1.DataType = DbType.String;
                colvarOriginAgentAddress1.MaxLength = 40;
                colvarOriginAgentAddress1.AutoIncrement = false;
                colvarOriginAgentAddress1.IsNullable = true;
                colvarOriginAgentAddress1.IsPrimaryKey = false;
                colvarOriginAgentAddress1.IsForeignKey = false;
                colvarOriginAgentAddress1.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginAgentAddress1);
                
                TableSchema.TableColumn colvarOriginAgentAddress2 = new TableSchema.TableColumn(schema);
                colvarOriginAgentAddress2.ColumnName = "OriginAgentAddress2";
                colvarOriginAgentAddress2.DataType = DbType.String;
                colvarOriginAgentAddress2.MaxLength = 40;
                colvarOriginAgentAddress2.AutoIncrement = false;
                colvarOriginAgentAddress2.IsNullable = true;
                colvarOriginAgentAddress2.IsPrimaryKey = false;
                colvarOriginAgentAddress2.IsForeignKey = false;
                colvarOriginAgentAddress2.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginAgentAddress2);
                
                TableSchema.TableColumn colvarOriginAgentAddress3 = new TableSchema.TableColumn(schema);
                colvarOriginAgentAddress3.ColumnName = "OriginAgentAddress3";
                colvarOriginAgentAddress3.DataType = DbType.String;
                colvarOriginAgentAddress3.MaxLength = 40;
                colvarOriginAgentAddress3.AutoIncrement = false;
                colvarOriginAgentAddress3.IsNullable = true;
                colvarOriginAgentAddress3.IsPrimaryKey = false;
                colvarOriginAgentAddress3.IsForeignKey = false;
                colvarOriginAgentAddress3.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginAgentAddress3);
                
                TableSchema.TableColumn colvarOriginAgentCountry = new TableSchema.TableColumn(schema);
                colvarOriginAgentCountry.ColumnName = "OriginAgentCountry";
                colvarOriginAgentCountry.DataType = DbType.String;
                colvarOriginAgentCountry.MaxLength = 50;
                colvarOriginAgentCountry.AutoIncrement = false;
                colvarOriginAgentCountry.IsNullable = false;
                colvarOriginAgentCountry.IsPrimaryKey = false;
                colvarOriginAgentCountry.IsForeignKey = false;
                colvarOriginAgentCountry.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginAgentCountry);
                
                TableSchema.TableColumn colvarDestAgent = new TableSchema.TableColumn(schema);
                colvarDestAgent.ColumnName = "DestAgent";
                colvarDestAgent.DataType = DbType.String;
                colvarDestAgent.MaxLength = 50;
                colvarDestAgent.AutoIncrement = false;
                colvarDestAgent.IsNullable = true;
                colvarDestAgent.IsPrimaryKey = false;
                colvarDestAgent.IsForeignKey = false;
                colvarDestAgent.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestAgent);
                
                TableSchema.TableColumn colvarDestAgentAddress1 = new TableSchema.TableColumn(schema);
                colvarDestAgentAddress1.ColumnName = "DestAgentAddress1";
                colvarDestAgentAddress1.DataType = DbType.String;
                colvarDestAgentAddress1.MaxLength = 40;
                colvarDestAgentAddress1.AutoIncrement = false;
                colvarDestAgentAddress1.IsNullable = true;
                colvarDestAgentAddress1.IsPrimaryKey = false;
                colvarDestAgentAddress1.IsForeignKey = false;
                colvarDestAgentAddress1.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestAgentAddress1);
                
                TableSchema.TableColumn colvarDestAgentAddress2 = new TableSchema.TableColumn(schema);
                colvarDestAgentAddress2.ColumnName = "DestAgentAddress2";
                colvarDestAgentAddress2.DataType = DbType.String;
                colvarDestAgentAddress2.MaxLength = 40;
                colvarDestAgentAddress2.AutoIncrement = false;
                colvarDestAgentAddress2.IsNullable = true;
                colvarDestAgentAddress2.IsPrimaryKey = false;
                colvarDestAgentAddress2.IsForeignKey = false;
                colvarDestAgentAddress2.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestAgentAddress2);
                
                TableSchema.TableColumn colvarDestAgentAddress3 = new TableSchema.TableColumn(schema);
                colvarDestAgentAddress3.ColumnName = "DestAgentAddress3";
                colvarDestAgentAddress3.DataType = DbType.String;
                colvarDestAgentAddress3.MaxLength = 40;
                colvarDestAgentAddress3.AutoIncrement = false;
                colvarDestAgentAddress3.IsNullable = true;
                colvarDestAgentAddress3.IsPrimaryKey = false;
                colvarDestAgentAddress3.IsForeignKey = false;
                colvarDestAgentAddress3.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestAgentAddress3);
                
                TableSchema.TableColumn colvarDestAgentCountry = new TableSchema.TableColumn(schema);
                colvarDestAgentCountry.ColumnName = "DestAgentCountry";
                colvarDestAgentCountry.DataType = DbType.String;
                colvarDestAgentCountry.MaxLength = 50;
                colvarDestAgentCountry.AutoIncrement = false;
                colvarDestAgentCountry.IsNullable = false;
                colvarDestAgentCountry.IsPrimaryKey = false;
                colvarDestAgentCountry.IsForeignKey = false;
                colvarDestAgentCountry.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestAgentCountry);
                
                TableSchema.TableColumn colvarOriginPort = new TableSchema.TableColumn(schema);
                colvarOriginPort.ColumnName = "OriginPort";
                colvarOriginPort.DataType = DbType.String;
                colvarOriginPort.MaxLength = 30;
                colvarOriginPort.AutoIncrement = false;
                colvarOriginPort.IsNullable = true;
                colvarOriginPort.IsPrimaryKey = false;
                colvarOriginPort.IsForeignKey = false;
                colvarOriginPort.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginPort);
                
                TableSchema.TableColumn colvarDestinationPort = new TableSchema.TableColumn(schema);
                colvarDestinationPort.ColumnName = "DestinationPort";
                colvarDestinationPort.DataType = DbType.String;
                colvarDestinationPort.MaxLength = 30;
                colvarDestinationPort.AutoIncrement = false;
                colvarDestinationPort.IsNullable = true;
                colvarDestinationPort.IsPrimaryKey = false;
                colvarDestinationPort.IsForeignKey = false;
                colvarDestinationPort.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestinationPort);
                
                TableSchema.TableColumn colvarFinalDest = new TableSchema.TableColumn(schema);
                colvarFinalDest.ColumnName = "FinalDest";
                colvarFinalDest.DataType = DbType.String;
                colvarFinalDest.MaxLength = 30;
                colvarFinalDest.AutoIncrement = false;
                colvarFinalDest.IsNullable = true;
                colvarFinalDest.IsPrimaryKey = false;
                colvarFinalDest.IsForeignKey = false;
                colvarFinalDest.IsReadOnly = false;
                
                schema.Columns.Add(colvarFinalDest);
                
                TableSchema.TableColumn colvarJoined = new TableSchema.TableColumn(schema);
                colvarJoined.ColumnName = "Joined";
                colvarJoined.DataType = DbType.String;
                colvarJoined.MaxLength = 50;
                colvarJoined.AutoIncrement = false;
                colvarJoined.IsNullable = true;
                colvarJoined.IsPrimaryKey = false;
                colvarJoined.IsForeignKey = false;
                colvarJoined.IsReadOnly = false;
                
                schema.Columns.Add(colvarJoined);
                
                TableSchema.TableColumn colvarPublishipOrder = new TableSchema.TableColumn(schema);
                colvarPublishipOrder.ColumnName = "PublishipOrder";
                colvarPublishipOrder.DataType = DbType.Boolean;
                colvarPublishipOrder.MaxLength = 0;
                colvarPublishipOrder.AutoIncrement = false;
                colvarPublishipOrder.IsNullable = false;
                colvarPublishipOrder.IsPrimaryKey = false;
                colvarPublishipOrder.IsForeignKey = false;
                colvarPublishipOrder.IsReadOnly = false;
                
                schema.Columns.Add(colvarPublishipOrder);
                
                TableSchema.TableColumn colvarOrderController = new TableSchema.TableColumn(schema);
                colvarOrderController.ColumnName = "OrderController";
                colvarOrderController.DataType = DbType.String;
                colvarOrderController.MaxLength = 50;
                colvarOrderController.AutoIncrement = false;
                colvarOrderController.IsNullable = true;
                colvarOrderController.IsPrimaryKey = false;
                colvarOrderController.IsForeignKey = false;
                colvarOrderController.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderController);
                
                TableSchema.TableColumn colvarOriginController = new TableSchema.TableColumn(schema);
                colvarOriginController.ColumnName = "OriginController";
                colvarOriginController.DataType = DbType.String;
                colvarOriginController.MaxLength = 50;
                colvarOriginController.AutoIncrement = false;
                colvarOriginController.IsNullable = true;
                colvarOriginController.IsPrimaryKey = false;
                colvarOriginController.IsForeignKey = false;
                colvarOriginController.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginController);
                
                TableSchema.TableColumn colvarDestionationController = new TableSchema.TableColumn(schema);
                colvarDestionationController.ColumnName = "DestionationController";
                colvarDestionationController.DataType = DbType.String;
                colvarDestionationController.MaxLength = 50;
                colvarDestionationController.AutoIncrement = false;
                colvarDestionationController.IsNullable = true;
                colvarDestionationController.IsPrimaryKey = false;
                colvarDestionationController.IsForeignKey = false;
                colvarDestionationController.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestionationController);
                
                TableSchema.TableColumn colvarContactName = new TableSchema.TableColumn(schema);
                colvarContactName.ColumnName = "ContactName";
                colvarContactName.DataType = DbType.String;
                colvarContactName.MaxLength = 50;
                colvarContactName.AutoIncrement = false;
                colvarContactName.IsNullable = true;
                colvarContactName.IsPrimaryKey = false;
                colvarContactName.IsForeignKey = false;
                colvarContactName.IsReadOnly = false;
                
                schema.Columns.Add(colvarContactName);
                
                TableSchema.TableColumn colvarHotJob = new TableSchema.TableColumn(schema);
                colvarHotJob.ColumnName = "HotJob";
                colvarHotJob.DataType = DbType.Boolean;
                colvarHotJob.MaxLength = 0;
                colvarHotJob.AutoIncrement = false;
                colvarHotJob.IsNullable = false;
                colvarHotJob.IsPrimaryKey = false;
                colvarHotJob.IsForeignKey = false;
                colvarHotJob.IsReadOnly = false;
                
                schema.Columns.Add(colvarHotJob);
                
                TableSchema.TableColumn colvarCustomersRef = new TableSchema.TableColumn(schema);
                colvarCustomersRef.ColumnName = "CustomersRef";
                colvarCustomersRef.DataType = DbType.String;
                colvarCustomersRef.MaxLength = 20;
                colvarCustomersRef.AutoIncrement = false;
                colvarCustomersRef.IsNullable = true;
                colvarCustomersRef.IsPrimaryKey = false;
                colvarCustomersRef.IsForeignKey = false;
                colvarCustomersRef.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomersRef);
                
                TableSchema.TableColumn colvarExWorksDate = new TableSchema.TableColumn(schema);
                colvarExWorksDate.ColumnName = "ExWorksDate";
                colvarExWorksDate.DataType = DbType.DateTime;
                colvarExWorksDate.MaxLength = 0;
                colvarExWorksDate.AutoIncrement = false;
                colvarExWorksDate.IsNullable = true;
                colvarExWorksDate.IsPrimaryKey = false;
                colvarExWorksDate.IsForeignKey = false;
                colvarExWorksDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarExWorksDate);
                
                TableSchema.TableColumn colvarEstCartons = new TableSchema.TableColumn(schema);
                colvarEstCartons.ColumnName = "EstCartons";
                colvarEstCartons.DataType = DbType.Int32;
                colvarEstCartons.MaxLength = 0;
                colvarEstCartons.AutoIncrement = false;
                colvarEstCartons.IsNullable = true;
                colvarEstCartons.IsPrimaryKey = false;
                colvarEstCartons.IsForeignKey = false;
                colvarEstCartons.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstCartons);
                
                TableSchema.TableColumn colvarEstPallets = new TableSchema.TableColumn(schema);
                colvarEstPallets.ColumnName = "EstPallets";
                colvarEstPallets.DataType = DbType.Int32;
                colvarEstPallets.MaxLength = 0;
                colvarEstPallets.AutoIncrement = false;
                colvarEstPallets.IsNullable = true;
                colvarEstPallets.IsPrimaryKey = false;
                colvarEstPallets.IsForeignKey = false;
                colvarEstPallets.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstPallets);
                
                TableSchema.TableColumn colvarEstWeight = new TableSchema.TableColumn(schema);
                colvarEstWeight.ColumnName = "EstWeight";
                colvarEstWeight.DataType = DbType.Int32;
                colvarEstWeight.MaxLength = 0;
                colvarEstWeight.AutoIncrement = false;
                colvarEstWeight.IsNullable = true;
                colvarEstWeight.IsPrimaryKey = false;
                colvarEstWeight.IsForeignKey = false;
                colvarEstWeight.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstWeight);
                
                TableSchema.TableColumn colvarEstVolume = new TableSchema.TableColumn(schema);
                colvarEstVolume.ColumnName = "EstVolume";
                colvarEstVolume.DataType = DbType.Single;
                colvarEstVolume.MaxLength = 0;
                colvarEstVolume.AutoIncrement = false;
                colvarEstVolume.IsNullable = true;
                colvarEstVolume.IsPrimaryKey = false;
                colvarEstVolume.IsForeignKey = false;
                colvarEstVolume.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstVolume);
                
                TableSchema.TableColumn colvarRemarks = new TableSchema.TableColumn(schema);
                colvarRemarks.ColumnName = "Remarks";
                colvarRemarks.DataType = DbType.String;
                colvarRemarks.MaxLength = 1073741823;
                colvarRemarks.AutoIncrement = false;
                colvarRemarks.IsNullable = true;
                colvarRemarks.IsPrimaryKey = false;
                colvarRemarks.IsForeignKey = false;
                colvarRemarks.IsReadOnly = false;
                
                schema.Columns.Add(colvarRemarks);
                
                TableSchema.TableColumn colvarClientsTerms = new TableSchema.TableColumn(schema);
                colvarClientsTerms.ColumnName = "ClientsTerms";
                colvarClientsTerms.DataType = DbType.String;
                colvarClientsTerms.MaxLength = 50;
                colvarClientsTerms.AutoIncrement = false;
                colvarClientsTerms.IsNullable = true;
                colvarClientsTerms.IsPrimaryKey = false;
                colvarClientsTerms.IsForeignKey = false;
                colvarClientsTerms.IsReadOnly = false;
                
                schema.Columns.Add(colvarClientsTerms);
                
                TableSchema.TableColumn colvarOriginTrucking = new TableSchema.TableColumn(schema);
                colvarOriginTrucking.ColumnName = "OriginTrucking";
                colvarOriginTrucking.DataType = DbType.String;
                colvarOriginTrucking.MaxLength = 50;
                colvarOriginTrucking.AutoIncrement = false;
                colvarOriginTrucking.IsNullable = true;
                colvarOriginTrucking.IsPrimaryKey = false;
                colvarOriginTrucking.IsForeignKey = false;
                colvarOriginTrucking.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginTrucking);
                
                TableSchema.TableColumn colvarOrignTHC = new TableSchema.TableColumn(schema);
                colvarOrignTHC.ColumnName = "OrignTHC";
                colvarOrignTHC.DataType = DbType.String;
                colvarOrignTHC.MaxLength = 50;
                colvarOrignTHC.AutoIncrement = false;
                colvarOrignTHC.IsNullable = true;
                colvarOrignTHC.IsPrimaryKey = false;
                colvarOrignTHC.IsForeignKey = false;
                colvarOrignTHC.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrignTHC);
                
                TableSchema.TableColumn colvarOriginDocs = new TableSchema.TableColumn(schema);
                colvarOriginDocs.ColumnName = "OriginDocs";
                colvarOriginDocs.DataType = DbType.String;
                colvarOriginDocs.MaxLength = 50;
                colvarOriginDocs.AutoIncrement = false;
                colvarOriginDocs.IsNullable = true;
                colvarOriginDocs.IsPrimaryKey = false;
                colvarOriginDocs.IsForeignKey = false;
                colvarOriginDocs.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginDocs);
                
                TableSchema.TableColumn colvarFreight = new TableSchema.TableColumn(schema);
                colvarFreight.ColumnName = "Freight";
                colvarFreight.DataType = DbType.String;
                colvarFreight.MaxLength = 50;
                colvarFreight.AutoIncrement = false;
                colvarFreight.IsNullable = true;
                colvarFreight.IsPrimaryKey = false;
                colvarFreight.IsForeignKey = false;
                colvarFreight.IsReadOnly = false;
                
                schema.Columns.Add(colvarFreight);
                
                TableSchema.TableColumn colvarDestTHC = new TableSchema.TableColumn(schema);
                colvarDestTHC.ColumnName = "DestTHC";
                colvarDestTHC.DataType = DbType.String;
                colvarDestTHC.MaxLength = 50;
                colvarDestTHC.AutoIncrement = false;
                colvarDestTHC.IsNullable = true;
                colvarDestTHC.IsPrimaryKey = false;
                colvarDestTHC.IsForeignKey = false;
                colvarDestTHC.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestTHC);
                
                TableSchema.TableColumn colvarDestPalletisation = new TableSchema.TableColumn(schema);
                colvarDestPalletisation.ColumnName = "DestPalletisation";
                colvarDestPalletisation.DataType = DbType.String;
                colvarDestPalletisation.MaxLength = 50;
                colvarDestPalletisation.AutoIncrement = false;
                colvarDestPalletisation.IsNullable = true;
                colvarDestPalletisation.IsPrimaryKey = false;
                colvarDestPalletisation.IsForeignKey = false;
                colvarDestPalletisation.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestPalletisation);
                
                TableSchema.TableColumn colvarCustomsClearance = new TableSchema.TableColumn(schema);
                colvarCustomsClearance.ColumnName = "CustomsClearance";
                colvarCustomsClearance.DataType = DbType.String;
                colvarCustomsClearance.MaxLength = 50;
                colvarCustomsClearance.AutoIncrement = false;
                colvarCustomsClearance.IsNullable = true;
                colvarCustomsClearance.IsPrimaryKey = false;
                colvarCustomsClearance.IsForeignKey = false;
                colvarCustomsClearance.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomsClearance);
                
                TableSchema.TableColumn colvarDeliveryCharges = new TableSchema.TableColumn(schema);
                colvarDeliveryCharges.ColumnName = "DeliveryCharges";
                colvarDeliveryCharges.DataType = DbType.String;
                colvarDeliveryCharges.MaxLength = 50;
                colvarDeliveryCharges.AutoIncrement = false;
                colvarDeliveryCharges.IsNullable = true;
                colvarDeliveryCharges.IsPrimaryKey = false;
                colvarDeliveryCharges.IsForeignKey = false;
                colvarDeliveryCharges.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeliveryCharges);
                
                TableSchema.TableColumn colvarOriginPoint = new TableSchema.TableColumn(schema);
                colvarOriginPoint.ColumnName = "OriginPoint";
                colvarOriginPoint.DataType = DbType.String;
                colvarOriginPoint.MaxLength = 30;
                colvarOriginPoint.AutoIncrement = false;
                colvarOriginPoint.IsNullable = true;
                colvarOriginPoint.IsPrimaryKey = false;
                colvarOriginPoint.IsForeignKey = false;
                colvarOriginPoint.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginPoint);
                
                TableSchema.TableColumn colvarClearingAgentName = new TableSchema.TableColumn(schema);
                colvarClearingAgentName.ColumnName = "ClearingAgentName";
                colvarClearingAgentName.DataType = DbType.String;
                colvarClearingAgentName.MaxLength = 50;
                colvarClearingAgentName.AutoIncrement = false;
                colvarClearingAgentName.IsNullable = true;
                colvarClearingAgentName.IsPrimaryKey = false;
                colvarClearingAgentName.IsForeignKey = false;
                colvarClearingAgentName.IsReadOnly = false;
                
                schema.Columns.Add(colvarClearingAgentName);
                
                TableSchema.TableColumn colvarClearingAgentAdd1 = new TableSchema.TableColumn(schema);
                colvarClearingAgentAdd1.ColumnName = "ClearingAgentAdd1";
                colvarClearingAgentAdd1.DataType = DbType.String;
                colvarClearingAgentAdd1.MaxLength = 40;
                colvarClearingAgentAdd1.AutoIncrement = false;
                colvarClearingAgentAdd1.IsNullable = true;
                colvarClearingAgentAdd1.IsPrimaryKey = false;
                colvarClearingAgentAdd1.IsForeignKey = false;
                colvarClearingAgentAdd1.IsReadOnly = false;
                
                schema.Columns.Add(colvarClearingAgentAdd1);
                
                TableSchema.TableColumn colvarClearingAgentAdd2 = new TableSchema.TableColumn(schema);
                colvarClearingAgentAdd2.ColumnName = "ClearingAgentAdd2";
                colvarClearingAgentAdd2.DataType = DbType.String;
                colvarClearingAgentAdd2.MaxLength = 40;
                colvarClearingAgentAdd2.AutoIncrement = false;
                colvarClearingAgentAdd2.IsNullable = true;
                colvarClearingAgentAdd2.IsPrimaryKey = false;
                colvarClearingAgentAdd2.IsForeignKey = false;
                colvarClearingAgentAdd2.IsReadOnly = false;
                
                schema.Columns.Add(colvarClearingAgentAdd2);
                
                TableSchema.TableColumn colvarClearingAgentAdd3 = new TableSchema.TableColumn(schema);
                colvarClearingAgentAdd3.ColumnName = "ClearingAgentAdd3";
                colvarClearingAgentAdd3.DataType = DbType.String;
                colvarClearingAgentAdd3.MaxLength = 40;
                colvarClearingAgentAdd3.AutoIncrement = false;
                colvarClearingAgentAdd3.IsNullable = true;
                colvarClearingAgentAdd3.IsPrimaryKey = false;
                colvarClearingAgentAdd3.IsForeignKey = false;
                colvarClearingAgentAdd3.IsReadOnly = false;
                
                schema.Columns.Add(colvarClearingAgentAdd3);
                
                TableSchema.TableColumn colvarEts = new TableSchema.TableColumn(schema);
                colvarEts.ColumnName = "ETS";
                colvarEts.DataType = DbType.DateTime;
                colvarEts.MaxLength = 0;
                colvarEts.AutoIncrement = false;
                colvarEts.IsNullable = true;
                colvarEts.IsPrimaryKey = false;
                colvarEts.IsForeignKey = false;
                colvarEts.IsReadOnly = false;
                
                schema.Columns.Add(colvarEts);
                
                TableSchema.TableColumn colvarEta = new TableSchema.TableColumn(schema);
                colvarEta.ColumnName = "ETA";
                colvarEta.DataType = DbType.DateTime;
                colvarEta.MaxLength = 0;
                colvarEta.AutoIncrement = false;
                colvarEta.IsNullable = true;
                colvarEta.IsPrimaryKey = false;
                colvarEta.IsForeignKey = false;
                colvarEta.IsReadOnly = false;
                
                schema.Columns.Add(colvarEta);
                
                TableSchema.TableColumn colvarRemarksa = new TableSchema.TableColumn(schema);
                colvarRemarksa.ColumnName = "Remarksa";
                colvarRemarksa.DataType = DbType.String;
                colvarRemarksa.MaxLength = 1073741823;
                colvarRemarksa.AutoIncrement = false;
                colvarRemarksa.IsNullable = true;
                colvarRemarksa.IsPrimaryKey = false;
                colvarRemarksa.IsForeignKey = false;
                colvarRemarksa.IsReadOnly = false;
                
                schema.Columns.Add(colvarRemarksa);
                
                TableSchema.TableColumn colvarClearingAgentCountry = new TableSchema.TableColumn(schema);
                colvarClearingAgentCountry.ColumnName = "ClearingAgentCountry";
                colvarClearingAgentCountry.DataType = DbType.String;
                colvarClearingAgentCountry.MaxLength = 50;
                colvarClearingAgentCountry.AutoIncrement = false;
                colvarClearingAgentCountry.IsNullable = false;
                colvarClearingAgentCountry.IsPrimaryKey = false;
                colvarClearingAgentCountry.IsForeignKey = false;
                colvarClearingAgentCountry.IsReadOnly = false;
                
                schema.Columns.Add(colvarClearingAgentCountry);
                
                TableSchema.TableColumn colvarPalletise = new TableSchema.TableColumn(schema);
                colvarPalletise.ColumnName = "Palletise";
                colvarPalletise.DataType = DbType.Int32;
                colvarPalletise.MaxLength = 0;
                colvarPalletise.AutoIncrement = false;
                colvarPalletise.IsNullable = true;
                colvarPalletise.IsPrimaryKey = false;
                colvarPalletise.IsForeignKey = false;
                colvarPalletise.IsReadOnly = false;
                
                schema.Columns.Add(colvarPalletise);
                
                TableSchema.TableColumn colvarExpressBL = new TableSchema.TableColumn(schema);
                colvarExpressBL.ColumnName = "ExpressBL";
                colvarExpressBL.DataType = DbType.Boolean;
                colvarExpressBL.MaxLength = 0;
                colvarExpressBL.AutoIncrement = false;
                colvarExpressBL.IsNullable = false;
                colvarExpressBL.IsPrimaryKey = false;
                colvarExpressBL.IsForeignKey = false;
                colvarExpressBL.IsReadOnly = false;
                
                schema.Columns.Add(colvarExpressBL);
                
                TableSchema.TableColumn colvarFileCoverPrintedOrigin = new TableSchema.TableColumn(schema);
                colvarFileCoverPrintedOrigin.ColumnName = "FileCoverPrintedOrigin";
                colvarFileCoverPrintedOrigin.DataType = DbType.Boolean;
                colvarFileCoverPrintedOrigin.MaxLength = 0;
                colvarFileCoverPrintedOrigin.AutoIncrement = false;
                colvarFileCoverPrintedOrigin.IsNullable = false;
                colvarFileCoverPrintedOrigin.IsPrimaryKey = false;
                colvarFileCoverPrintedOrigin.IsForeignKey = false;
                colvarFileCoverPrintedOrigin.IsReadOnly = false;
                
                schema.Columns.Add(colvarFileCoverPrintedOrigin);
                
                TableSchema.TableColumn colvarFileCoverPrintedDest = new TableSchema.TableColumn(schema);
                colvarFileCoverPrintedDest.ColumnName = "FileCoverPrintedDest";
                colvarFileCoverPrintedDest.DataType = DbType.Boolean;
                colvarFileCoverPrintedDest.MaxLength = 0;
                colvarFileCoverPrintedDest.AutoIncrement = false;
                colvarFileCoverPrintedDest.IsNullable = false;
                colvarFileCoverPrintedDest.IsPrimaryKey = false;
                colvarFileCoverPrintedDest.IsForeignKey = false;
                colvarFileCoverPrintedDest.IsReadOnly = false;
                
                schema.Columns.Add(colvarFileCoverPrintedDest);
                
                TableSchema.TableColumn colvarAgentAtOriginID = new TableSchema.TableColumn(schema);
                colvarAgentAtOriginID.ColumnName = "AgentAtOriginID";
                colvarAgentAtOriginID.DataType = DbType.Int32;
                colvarAgentAtOriginID.MaxLength = 0;
                colvarAgentAtOriginID.AutoIncrement = false;
                colvarAgentAtOriginID.IsNullable = true;
                colvarAgentAtOriginID.IsPrimaryKey = false;
                colvarAgentAtOriginID.IsForeignKey = false;
                colvarAgentAtOriginID.IsReadOnly = false;
                
                schema.Columns.Add(colvarAgentAtOriginID);
                
                TableSchema.TableColumn colvarAgentAtDestinationID = new TableSchema.TableColumn(schema);
                colvarAgentAtDestinationID.ColumnName = "AgentAtDestinationID";
                colvarAgentAtDestinationID.DataType = DbType.Int32;
                colvarAgentAtDestinationID.MaxLength = 0;
                colvarAgentAtDestinationID.AutoIncrement = false;
                colvarAgentAtDestinationID.IsNullable = true;
                colvarAgentAtDestinationID.IsPrimaryKey = false;
                colvarAgentAtDestinationID.IsForeignKey = false;
                colvarAgentAtDestinationID.IsReadOnly = false;
                
                schema.Columns.Add(colvarAgentAtDestinationID);
                
                TableSchema.TableColumn colvarEst20 = new TableSchema.TableColumn(schema);
                colvarEst20.ColumnName = "Est20";
                colvarEst20.DataType = DbType.Int32;
                colvarEst20.MaxLength = 0;
                colvarEst20.AutoIncrement = false;
                colvarEst20.IsNullable = true;
                colvarEst20.IsPrimaryKey = false;
                colvarEst20.IsForeignKey = false;
                colvarEst20.IsReadOnly = false;
                
                schema.Columns.Add(colvarEst20);
                
                TableSchema.TableColumn colvarEst40 = new TableSchema.TableColumn(schema);
                colvarEst40.ColumnName = "Est40";
                colvarEst40.DataType = DbType.Int32;
                colvarEst40.MaxLength = 0;
                colvarEst40.AutoIncrement = false;
                colvarEst40.IsNullable = true;
                colvarEst40.IsPrimaryKey = false;
                colvarEst40.IsForeignKey = false;
                colvarEst40.IsReadOnly = false;
                
                schema.Columns.Add(colvarEst40);
                
                TableSchema.TableColumn colvarEstLCLWt = new TableSchema.TableColumn(schema);
                colvarEstLCLWt.ColumnName = "EstLCLWt";
                colvarEstLCLWt.DataType = DbType.Int32;
                colvarEstLCLWt.MaxLength = 0;
                colvarEstLCLWt.AutoIncrement = false;
                colvarEstLCLWt.IsNullable = true;
                colvarEstLCLWt.IsPrimaryKey = false;
                colvarEstLCLWt.IsForeignKey = false;
                colvarEstLCLWt.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstLCLWt);
                
                TableSchema.TableColumn colvarEstLCLVol = new TableSchema.TableColumn(schema);
                colvarEstLCLVol.ColumnName = "EstLCLVol";
                colvarEstLCLVol.DataType = DbType.Single;
                colvarEstLCLVol.MaxLength = 0;
                colvarEstLCLVol.AutoIncrement = false;
                colvarEstLCLVol.IsNullable = true;
                colvarEstLCLVol.IsPrimaryKey = false;
                colvarEstLCLVol.IsForeignKey = false;
                colvarEstLCLVol.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstLCLVol);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["WWIprov"].AddSchema("NewOrdersReceiviedView",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public NewOrdersReceiviedView()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public NewOrdersReceiviedView(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public NewOrdersReceiviedView(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public NewOrdersReceiviedView(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("OrderNumber")]
        [Bindable(true)]
        public int? OrderNumber 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OrderNumber");
		    }
            set 
		    {
			    SetColumnValue("OrderNumber", value);
            }
        }
	      
        [XmlAttribute("CompanyName")]
        [Bindable(true)]
        public string CompanyName 
	    {
		    get
		    {
			    return GetColumnValue<string>("CompanyName");
		    }
            set 
		    {
			    SetColumnValue("CompanyName", value);
            }
        }
	      
        [XmlAttribute("Address1")]
        [Bindable(true)]
        public string Address1 
	    {
		    get
		    {
			    return GetColumnValue<string>("Address1");
		    }
            set 
		    {
			    SetColumnValue("Address1", value);
            }
        }
	      
        [XmlAttribute("Address2")]
        [Bindable(true)]
        public string Address2 
	    {
		    get
		    {
			    return GetColumnValue<string>("Address2");
		    }
            set 
		    {
			    SetColumnValue("Address2", value);
            }
        }
	      
        [XmlAttribute("Address3")]
        [Bindable(true)]
        public string Address3 
	    {
		    get
		    {
			    return GetColumnValue<string>("Address3");
		    }
            set 
		    {
			    SetColumnValue("Address3", value);
            }
        }
	      
        [XmlAttribute("ClientCountryName")]
        [Bindable(true)]
        public string ClientCountryName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ClientCountryName");
		    }
            set 
		    {
			    SetColumnValue("ClientCountryName", value);
            }
        }
	      
        [XmlAttribute("ConsigneeName")]
        [Bindable(true)]
        public string ConsigneeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsigneeName");
		    }
            set 
		    {
			    SetColumnValue("ConsigneeName", value);
            }
        }
	      
        [XmlAttribute("ConsigneeAdd1")]
        [Bindable(true)]
        public string ConsigneeAdd1 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsigneeAdd1");
		    }
            set 
		    {
			    SetColumnValue("ConsigneeAdd1", value);
            }
        }
	      
        [XmlAttribute("ConsigneeAdd2")]
        [Bindable(true)]
        public string ConsigneeAdd2 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsigneeAdd2");
		    }
            set 
		    {
			    SetColumnValue("ConsigneeAdd2", value);
            }
        }
	      
        [XmlAttribute("ConsigneeAdd3")]
        [Bindable(true)]
        public string ConsigneeAdd3 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsigneeAdd3");
		    }
            set 
		    {
			    SetColumnValue("ConsigneeAdd3", value);
            }
        }
	      
        [XmlAttribute("ConsigneeCountry")]
        [Bindable(true)]
        public string ConsigneeCountry 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsigneeCountry");
		    }
            set 
		    {
			    SetColumnValue("ConsigneeCountry", value);
            }
        }
	      
        [XmlAttribute("NotifyName")]
        [Bindable(true)]
        public string NotifyName 
	    {
		    get
		    {
			    return GetColumnValue<string>("NotifyName");
		    }
            set 
		    {
			    SetColumnValue("NotifyName", value);
            }
        }
	      
        [XmlAttribute("NotifyAdd1")]
        [Bindable(true)]
        public string NotifyAdd1 
	    {
		    get
		    {
			    return GetColumnValue<string>("NotifyAdd1");
		    }
            set 
		    {
			    SetColumnValue("NotifyAdd1", value);
            }
        }
	      
        [XmlAttribute("NotifyAdd2")]
        [Bindable(true)]
        public string NotifyAdd2 
	    {
		    get
		    {
			    return GetColumnValue<string>("NotifyAdd2");
		    }
            set 
		    {
			    SetColumnValue("NotifyAdd2", value);
            }
        }
	      
        [XmlAttribute("NotifyAdd3")]
        [Bindable(true)]
        public string NotifyAdd3 
	    {
		    get
		    {
			    return GetColumnValue<string>("NotifyAdd3");
		    }
            set 
		    {
			    SetColumnValue("NotifyAdd3", value);
            }
        }
	      
        [XmlAttribute("NotifyCountry")]
        [Bindable(true)]
        public string NotifyCountry 
	    {
		    get
		    {
			    return GetColumnValue<string>("NotifyCountry");
		    }
            set 
		    {
			    SetColumnValue("NotifyCountry", value);
            }
        }
	      
        [XmlAttribute("PrinterName")]
        [Bindable(true)]
        public string PrinterName 
	    {
		    get
		    {
			    return GetColumnValue<string>("PrinterName");
		    }
            set 
		    {
			    SetColumnValue("PrinterName", value);
            }
        }
	      
        [XmlAttribute("PrinterAdd1")]
        [Bindable(true)]
        public string PrinterAdd1 
	    {
		    get
		    {
			    return GetColumnValue<string>("PrinterAdd1");
		    }
            set 
		    {
			    SetColumnValue("PrinterAdd1", value);
            }
        }
	      
        [XmlAttribute("PrinterAdd2")]
        [Bindable(true)]
        public string PrinterAdd2 
	    {
		    get
		    {
			    return GetColumnValue<string>("PrinterAdd2");
		    }
            set 
		    {
			    SetColumnValue("PrinterAdd2", value);
            }
        }
	      
        [XmlAttribute("PrinterAdd3")]
        [Bindable(true)]
        public string PrinterAdd3 
	    {
		    get
		    {
			    return GetColumnValue<string>("PrinterAdd3");
		    }
            set 
		    {
			    SetColumnValue("PrinterAdd3", value);
            }
        }
	      
        [XmlAttribute("PrinterCountry")]
        [Bindable(true)]
        public string PrinterCountry 
	    {
		    get
		    {
			    return GetColumnValue<string>("PrinterCountry");
		    }
            set 
		    {
			    SetColumnValue("PrinterCountry", value);
            }
        }
	      
        [XmlAttribute("OriginAgent")]
        [Bindable(true)]
        public string OriginAgent 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginAgent");
		    }
            set 
		    {
			    SetColumnValue("OriginAgent", value);
            }
        }
	      
        [XmlAttribute("OriginAgentAddress1")]
        [Bindable(true)]
        public string OriginAgentAddress1 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginAgentAddress1");
		    }
            set 
		    {
			    SetColumnValue("OriginAgentAddress1", value);
            }
        }
	      
        [XmlAttribute("OriginAgentAddress2")]
        [Bindable(true)]
        public string OriginAgentAddress2 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginAgentAddress2");
		    }
            set 
		    {
			    SetColumnValue("OriginAgentAddress2", value);
            }
        }
	      
        [XmlAttribute("OriginAgentAddress3")]
        [Bindable(true)]
        public string OriginAgentAddress3 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginAgentAddress3");
		    }
            set 
		    {
			    SetColumnValue("OriginAgentAddress3", value);
            }
        }
	      
        [XmlAttribute("OriginAgentCountry")]
        [Bindable(true)]
        public string OriginAgentCountry 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginAgentCountry");
		    }
            set 
		    {
			    SetColumnValue("OriginAgentCountry", value);
            }
        }
	      
        [XmlAttribute("DestAgent")]
        [Bindable(true)]
        public string DestAgent 
	    {
		    get
		    {
			    return GetColumnValue<string>("DestAgent");
		    }
            set 
		    {
			    SetColumnValue("DestAgent", value);
            }
        }
	      
        [XmlAttribute("DestAgentAddress1")]
        [Bindable(true)]
        public string DestAgentAddress1 
	    {
		    get
		    {
			    return GetColumnValue<string>("DestAgentAddress1");
		    }
            set 
		    {
			    SetColumnValue("DestAgentAddress1", value);
            }
        }
	      
        [XmlAttribute("DestAgentAddress2")]
        [Bindable(true)]
        public string DestAgentAddress2 
	    {
		    get
		    {
			    return GetColumnValue<string>("DestAgentAddress2");
		    }
            set 
		    {
			    SetColumnValue("DestAgentAddress2", value);
            }
        }
	      
        [XmlAttribute("DestAgentAddress3")]
        [Bindable(true)]
        public string DestAgentAddress3 
	    {
		    get
		    {
			    return GetColumnValue<string>("DestAgentAddress3");
		    }
            set 
		    {
			    SetColumnValue("DestAgentAddress3", value);
            }
        }
	      
        [XmlAttribute("DestAgentCountry")]
        [Bindable(true)]
        public string DestAgentCountry 
	    {
		    get
		    {
			    return GetColumnValue<string>("DestAgentCountry");
		    }
            set 
		    {
			    SetColumnValue("DestAgentCountry", value);
            }
        }
	      
        [XmlAttribute("OriginPort")]
        [Bindable(true)]
        public string OriginPort 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginPort");
		    }
            set 
		    {
			    SetColumnValue("OriginPort", value);
            }
        }
	      
        [XmlAttribute("DestinationPort")]
        [Bindable(true)]
        public string DestinationPort 
	    {
		    get
		    {
			    return GetColumnValue<string>("DestinationPort");
		    }
            set 
		    {
			    SetColumnValue("DestinationPort", value);
            }
        }
	      
        [XmlAttribute("FinalDest")]
        [Bindable(true)]
        public string FinalDest 
	    {
		    get
		    {
			    return GetColumnValue<string>("FinalDest");
		    }
            set 
		    {
			    SetColumnValue("FinalDest", value);
            }
        }
	      
        [XmlAttribute("Joined")]
        [Bindable(true)]
        public string Joined 
	    {
		    get
		    {
			    return GetColumnValue<string>("Joined");
		    }
            set 
		    {
			    SetColumnValue("Joined", value);
            }
        }
	      
        [XmlAttribute("PublishipOrder")]
        [Bindable(true)]
        public bool PublishipOrder 
	    {
		    get
		    {
			    return GetColumnValue<bool>("PublishipOrder");
		    }
            set 
		    {
			    SetColumnValue("PublishipOrder", value);
            }
        }
	      
        [XmlAttribute("OrderController")]
        [Bindable(true)]
        public string OrderController 
	    {
		    get
		    {
			    return GetColumnValue<string>("OrderController");
		    }
            set 
		    {
			    SetColumnValue("OrderController", value);
            }
        }
	      
        [XmlAttribute("OriginController")]
        [Bindable(true)]
        public string OriginController 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginController");
		    }
            set 
		    {
			    SetColumnValue("OriginController", value);
            }
        }
	      
        [XmlAttribute("DestionationController")]
        [Bindable(true)]
        public string DestionationController 
	    {
		    get
		    {
			    return GetColumnValue<string>("DestionationController");
		    }
            set 
		    {
			    SetColumnValue("DestionationController", value);
            }
        }
	      
        [XmlAttribute("ContactName")]
        [Bindable(true)]
        public string ContactName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ContactName");
		    }
            set 
		    {
			    SetColumnValue("ContactName", value);
            }
        }
	      
        [XmlAttribute("HotJob")]
        [Bindable(true)]
        public bool HotJob 
	    {
		    get
		    {
			    return GetColumnValue<bool>("HotJob");
		    }
            set 
		    {
			    SetColumnValue("HotJob", value);
            }
        }
	      
        [XmlAttribute("CustomersRef")]
        [Bindable(true)]
        public string CustomersRef 
	    {
		    get
		    {
			    return GetColumnValue<string>("CustomersRef");
		    }
            set 
		    {
			    SetColumnValue("CustomersRef", value);
            }
        }
	      
        [XmlAttribute("ExWorksDate")]
        [Bindable(true)]
        public DateTime? ExWorksDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ExWorksDate");
		    }
            set 
		    {
			    SetColumnValue("ExWorksDate", value);
            }
        }
	      
        [XmlAttribute("EstCartons")]
        [Bindable(true)]
        public int? EstCartons 
	    {
		    get
		    {
			    return GetColumnValue<int?>("EstCartons");
		    }
            set 
		    {
			    SetColumnValue("EstCartons", value);
            }
        }
	      
        [XmlAttribute("EstPallets")]
        [Bindable(true)]
        public int? EstPallets 
	    {
		    get
		    {
			    return GetColumnValue<int?>("EstPallets");
		    }
            set 
		    {
			    SetColumnValue("EstPallets", value);
            }
        }
	      
        [XmlAttribute("EstWeight")]
        [Bindable(true)]
        public int? EstWeight 
	    {
		    get
		    {
			    return GetColumnValue<int?>("EstWeight");
		    }
            set 
		    {
			    SetColumnValue("EstWeight", value);
            }
        }
	      
        [XmlAttribute("EstVolume")]
        [Bindable(true)]
        public float? EstVolume 
	    {
		    get
		    {
			    return GetColumnValue<float?>("EstVolume");
		    }
            set 
		    {
			    SetColumnValue("EstVolume", value);
            }
        }
	      
        [XmlAttribute("Remarks")]
        [Bindable(true)]
        public string Remarks 
	    {
		    get
		    {
			    return GetColumnValue<string>("Remarks");
		    }
            set 
		    {
			    SetColumnValue("Remarks", value);
            }
        }
	      
        [XmlAttribute("ClientsTerms")]
        [Bindable(true)]
        public string ClientsTerms 
	    {
		    get
		    {
			    return GetColumnValue<string>("ClientsTerms");
		    }
            set 
		    {
			    SetColumnValue("ClientsTerms", value);
            }
        }
	      
        [XmlAttribute("OriginTrucking")]
        [Bindable(true)]
        public string OriginTrucking 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginTrucking");
		    }
            set 
		    {
			    SetColumnValue("OriginTrucking", value);
            }
        }
	      
        [XmlAttribute("OrignTHC")]
        [Bindable(true)]
        public string OrignTHC 
	    {
		    get
		    {
			    return GetColumnValue<string>("OrignTHC");
		    }
            set 
		    {
			    SetColumnValue("OrignTHC", value);
            }
        }
	      
        [XmlAttribute("OriginDocs")]
        [Bindable(true)]
        public string OriginDocs 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginDocs");
		    }
            set 
		    {
			    SetColumnValue("OriginDocs", value);
            }
        }
	      
        [XmlAttribute("Freight")]
        [Bindable(true)]
        public string Freight 
	    {
		    get
		    {
			    return GetColumnValue<string>("Freight");
		    }
            set 
		    {
			    SetColumnValue("Freight", value);
            }
        }
	      
        [XmlAttribute("DestTHC")]
        [Bindable(true)]
        public string DestTHC 
	    {
		    get
		    {
			    return GetColumnValue<string>("DestTHC");
		    }
            set 
		    {
			    SetColumnValue("DestTHC", value);
            }
        }
	      
        [XmlAttribute("DestPalletisation")]
        [Bindable(true)]
        public string DestPalletisation 
	    {
		    get
		    {
			    return GetColumnValue<string>("DestPalletisation");
		    }
            set 
		    {
			    SetColumnValue("DestPalletisation", value);
            }
        }
	      
        [XmlAttribute("CustomsClearance")]
        [Bindable(true)]
        public string CustomsClearance 
	    {
		    get
		    {
			    return GetColumnValue<string>("CustomsClearance");
		    }
            set 
		    {
			    SetColumnValue("CustomsClearance", value);
            }
        }
	      
        [XmlAttribute("DeliveryCharges")]
        [Bindable(true)]
        public string DeliveryCharges 
	    {
		    get
		    {
			    return GetColumnValue<string>("DeliveryCharges");
		    }
            set 
		    {
			    SetColumnValue("DeliveryCharges", value);
            }
        }
	      
        [XmlAttribute("OriginPoint")]
        [Bindable(true)]
        public string OriginPoint 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginPoint");
		    }
            set 
		    {
			    SetColumnValue("OriginPoint", value);
            }
        }
	      
        [XmlAttribute("ClearingAgentName")]
        [Bindable(true)]
        public string ClearingAgentName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ClearingAgentName");
		    }
            set 
		    {
			    SetColumnValue("ClearingAgentName", value);
            }
        }
	      
        [XmlAttribute("ClearingAgentAdd1")]
        [Bindable(true)]
        public string ClearingAgentAdd1 
	    {
		    get
		    {
			    return GetColumnValue<string>("ClearingAgentAdd1");
		    }
            set 
		    {
			    SetColumnValue("ClearingAgentAdd1", value);
            }
        }
	      
        [XmlAttribute("ClearingAgentAdd2")]
        [Bindable(true)]
        public string ClearingAgentAdd2 
	    {
		    get
		    {
			    return GetColumnValue<string>("ClearingAgentAdd2");
		    }
            set 
		    {
			    SetColumnValue("ClearingAgentAdd2", value);
            }
        }
	      
        [XmlAttribute("ClearingAgentAdd3")]
        [Bindable(true)]
        public string ClearingAgentAdd3 
	    {
		    get
		    {
			    return GetColumnValue<string>("ClearingAgentAdd3");
		    }
            set 
		    {
			    SetColumnValue("ClearingAgentAdd3", value);
            }
        }
	      
        [XmlAttribute("Ets")]
        [Bindable(true)]
        public DateTime? Ets 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ETS");
		    }
            set 
		    {
			    SetColumnValue("ETS", value);
            }
        }
	      
        [XmlAttribute("Eta")]
        [Bindable(true)]
        public DateTime? Eta 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ETA");
		    }
            set 
		    {
			    SetColumnValue("ETA", value);
            }
        }
	      
        [XmlAttribute("Remarksa")]
        [Bindable(true)]
        public string Remarksa 
	    {
		    get
		    {
			    return GetColumnValue<string>("Remarksa");
		    }
            set 
		    {
			    SetColumnValue("Remarksa", value);
            }
        }
	      
        [XmlAttribute("ClearingAgentCountry")]
        [Bindable(true)]
        public string ClearingAgentCountry 
	    {
		    get
		    {
			    return GetColumnValue<string>("ClearingAgentCountry");
		    }
            set 
		    {
			    SetColumnValue("ClearingAgentCountry", value);
            }
        }
	      
        [XmlAttribute("Palletise")]
        [Bindable(true)]
        public int? Palletise 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Palletise");
		    }
            set 
		    {
			    SetColumnValue("Palletise", value);
            }
        }
	      
        [XmlAttribute("ExpressBL")]
        [Bindable(true)]
        public bool ExpressBL 
	    {
		    get
		    {
			    return GetColumnValue<bool>("ExpressBL");
		    }
            set 
		    {
			    SetColumnValue("ExpressBL", value);
            }
        }
	      
        [XmlAttribute("FileCoverPrintedOrigin")]
        [Bindable(true)]
        public bool FileCoverPrintedOrigin 
	    {
		    get
		    {
			    return GetColumnValue<bool>("FileCoverPrintedOrigin");
		    }
            set 
		    {
			    SetColumnValue("FileCoverPrintedOrigin", value);
            }
        }
	      
        [XmlAttribute("FileCoverPrintedDest")]
        [Bindable(true)]
        public bool FileCoverPrintedDest 
	    {
		    get
		    {
			    return GetColumnValue<bool>("FileCoverPrintedDest");
		    }
            set 
		    {
			    SetColumnValue("FileCoverPrintedDest", value);
            }
        }
	      
        [XmlAttribute("AgentAtOriginID")]
        [Bindable(true)]
        public int? AgentAtOriginID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("AgentAtOriginID");
		    }
            set 
		    {
			    SetColumnValue("AgentAtOriginID", value);
            }
        }
	      
        [XmlAttribute("AgentAtDestinationID")]
        [Bindable(true)]
        public int? AgentAtDestinationID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("AgentAtDestinationID");
		    }
            set 
		    {
			    SetColumnValue("AgentAtDestinationID", value);
            }
        }
	      
        [XmlAttribute("Est20")]
        [Bindable(true)]
        public int? Est20 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Est20");
		    }
            set 
		    {
			    SetColumnValue("Est20", value);
            }
        }
	      
        [XmlAttribute("Est40")]
        [Bindable(true)]
        public int? Est40 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Est40");
		    }
            set 
		    {
			    SetColumnValue("Est40", value);
            }
        }
	      
        [XmlAttribute("EstLCLWt")]
        [Bindable(true)]
        public int? EstLCLWt 
	    {
		    get
		    {
			    return GetColumnValue<int?>("EstLCLWt");
		    }
            set 
		    {
			    SetColumnValue("EstLCLWt", value);
            }
        }
	      
        [XmlAttribute("EstLCLVol")]
        [Bindable(true)]
        public float? EstLCLVol 
	    {
		    get
		    {
			    return GetColumnValue<float?>("EstLCLVol");
		    }
            set 
		    {
			    SetColumnValue("EstLCLVol", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string OrderNumber = @"OrderNumber";
            
            public static string CompanyName = @"CompanyName";
            
            public static string Address1 = @"Address1";
            
            public static string Address2 = @"Address2";
            
            public static string Address3 = @"Address3";
            
            public static string ClientCountryName = @"ClientCountryName";
            
            public static string ConsigneeName = @"ConsigneeName";
            
            public static string ConsigneeAdd1 = @"ConsigneeAdd1";
            
            public static string ConsigneeAdd2 = @"ConsigneeAdd2";
            
            public static string ConsigneeAdd3 = @"ConsigneeAdd3";
            
            public static string ConsigneeCountry = @"ConsigneeCountry";
            
            public static string NotifyName = @"NotifyName";
            
            public static string NotifyAdd1 = @"NotifyAdd1";
            
            public static string NotifyAdd2 = @"NotifyAdd2";
            
            public static string NotifyAdd3 = @"NotifyAdd3";
            
            public static string NotifyCountry = @"NotifyCountry";
            
            public static string PrinterName = @"PrinterName";
            
            public static string PrinterAdd1 = @"PrinterAdd1";
            
            public static string PrinterAdd2 = @"PrinterAdd2";
            
            public static string PrinterAdd3 = @"PrinterAdd3";
            
            public static string PrinterCountry = @"PrinterCountry";
            
            public static string OriginAgent = @"OriginAgent";
            
            public static string OriginAgentAddress1 = @"OriginAgentAddress1";
            
            public static string OriginAgentAddress2 = @"OriginAgentAddress2";
            
            public static string OriginAgentAddress3 = @"OriginAgentAddress3";
            
            public static string OriginAgentCountry = @"OriginAgentCountry";
            
            public static string DestAgent = @"DestAgent";
            
            public static string DestAgentAddress1 = @"DestAgentAddress1";
            
            public static string DestAgentAddress2 = @"DestAgentAddress2";
            
            public static string DestAgentAddress3 = @"DestAgentAddress3";
            
            public static string DestAgentCountry = @"DestAgentCountry";
            
            public static string OriginPort = @"OriginPort";
            
            public static string DestinationPort = @"DestinationPort";
            
            public static string FinalDest = @"FinalDest";
            
            public static string Joined = @"Joined";
            
            public static string PublishipOrder = @"PublishipOrder";
            
            public static string OrderController = @"OrderController";
            
            public static string OriginController = @"OriginController";
            
            public static string DestionationController = @"DestionationController";
            
            public static string ContactName = @"ContactName";
            
            public static string HotJob = @"HotJob";
            
            public static string CustomersRef = @"CustomersRef";
            
            public static string ExWorksDate = @"ExWorksDate";
            
            public static string EstCartons = @"EstCartons";
            
            public static string EstPallets = @"EstPallets";
            
            public static string EstWeight = @"EstWeight";
            
            public static string EstVolume = @"EstVolume";
            
            public static string Remarks = @"Remarks";
            
            public static string ClientsTerms = @"ClientsTerms";
            
            public static string OriginTrucking = @"OriginTrucking";
            
            public static string OrignTHC = @"OrignTHC";
            
            public static string OriginDocs = @"OriginDocs";
            
            public static string Freight = @"Freight";
            
            public static string DestTHC = @"DestTHC";
            
            public static string DestPalletisation = @"DestPalletisation";
            
            public static string CustomsClearance = @"CustomsClearance";
            
            public static string DeliveryCharges = @"DeliveryCharges";
            
            public static string OriginPoint = @"OriginPoint";
            
            public static string ClearingAgentName = @"ClearingAgentName";
            
            public static string ClearingAgentAdd1 = @"ClearingAgentAdd1";
            
            public static string ClearingAgentAdd2 = @"ClearingAgentAdd2";
            
            public static string ClearingAgentAdd3 = @"ClearingAgentAdd3";
            
            public static string Ets = @"ETS";
            
            public static string Eta = @"ETA";
            
            public static string Remarksa = @"Remarksa";
            
            public static string ClearingAgentCountry = @"ClearingAgentCountry";
            
            public static string Palletise = @"Palletise";
            
            public static string ExpressBL = @"ExpressBL";
            
            public static string FileCoverPrintedOrigin = @"FileCoverPrintedOrigin";
            
            public static string FileCoverPrintedDest = @"FileCoverPrintedDest";
            
            public static string AgentAtOriginID = @"AgentAtOriginID";
            
            public static string AgentAtDestinationID = @"AgentAtDestinationID";
            
            public static string Est20 = @"Est20";
            
            public static string Est40 = @"Est40";
            
            public static string EstLCLWt = @"EstLCLWt";
            
            public static string EstLCLVol = @"EstLCLVol";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
