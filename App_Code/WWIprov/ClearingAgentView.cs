using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Logistics{
    /// <summary>
    /// Strongly-typed collection for the ClearingAgentView class.
    /// </summary>
    [Serializable]
    public partial class ClearingAgentViewCollection : ReadOnlyList<ClearingAgentView, ClearingAgentViewCollection>
    {        
        public ClearingAgentViewCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the ClearingAgentView view.
    /// </summary>
    [Serializable]
    public partial class ClearingAgentView : ReadOnlyRecord<ClearingAgentView>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("ClearingAgentView", TableType.View, DataService.GetInstance("WWIprov"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarCompanyID = new TableSchema.TableColumn(schema);
                colvarCompanyID.ColumnName = "CompanyID";
                colvarCompanyID.DataType = DbType.Int32;
                colvarCompanyID.MaxLength = 0;
                colvarCompanyID.AutoIncrement = false;
                colvarCompanyID.IsNullable = false;
                colvarCompanyID.IsPrimaryKey = false;
                colvarCompanyID.IsForeignKey = false;
                colvarCompanyID.IsReadOnly = false;
                
                schema.Columns.Add(colvarCompanyID);
                
                TableSchema.TableColumn colvarClearingAgentName = new TableSchema.TableColumn(schema);
                colvarClearingAgentName.ColumnName = "ClearingAgentName";
                colvarClearingAgentName.DataType = DbType.String;
                colvarClearingAgentName.MaxLength = 50;
                colvarClearingAgentName.AutoIncrement = false;
                colvarClearingAgentName.IsNullable = true;
                colvarClearingAgentName.IsPrimaryKey = false;
                colvarClearingAgentName.IsForeignKey = false;
                colvarClearingAgentName.IsReadOnly = false;
                
                schema.Columns.Add(colvarClearingAgentName);
                
                TableSchema.TableColumn colvarClearingAgentAdd1 = new TableSchema.TableColumn(schema);
                colvarClearingAgentAdd1.ColumnName = "ClearingAgentAdd1";
                colvarClearingAgentAdd1.DataType = DbType.String;
                colvarClearingAgentAdd1.MaxLength = 40;
                colvarClearingAgentAdd1.AutoIncrement = false;
                colvarClearingAgentAdd1.IsNullable = true;
                colvarClearingAgentAdd1.IsPrimaryKey = false;
                colvarClearingAgentAdd1.IsForeignKey = false;
                colvarClearingAgentAdd1.IsReadOnly = false;
                
                schema.Columns.Add(colvarClearingAgentAdd1);
                
                TableSchema.TableColumn colvarClearingAgentAdd2 = new TableSchema.TableColumn(schema);
                colvarClearingAgentAdd2.ColumnName = "ClearingAgentAdd2";
                colvarClearingAgentAdd2.DataType = DbType.String;
                colvarClearingAgentAdd2.MaxLength = 40;
                colvarClearingAgentAdd2.AutoIncrement = false;
                colvarClearingAgentAdd2.IsNullable = true;
                colvarClearingAgentAdd2.IsPrimaryKey = false;
                colvarClearingAgentAdd2.IsForeignKey = false;
                colvarClearingAgentAdd2.IsReadOnly = false;
                
                schema.Columns.Add(colvarClearingAgentAdd2);
                
                TableSchema.TableColumn colvarClearingAgentAdd3 = new TableSchema.TableColumn(schema);
                colvarClearingAgentAdd3.ColumnName = "ClearingAgentAdd3";
                colvarClearingAgentAdd3.DataType = DbType.String;
                colvarClearingAgentAdd3.MaxLength = 40;
                colvarClearingAgentAdd3.AutoIncrement = false;
                colvarClearingAgentAdd3.IsNullable = true;
                colvarClearingAgentAdd3.IsPrimaryKey = false;
                colvarClearingAgentAdd3.IsForeignKey = false;
                colvarClearingAgentAdd3.IsReadOnly = false;
                
                schema.Columns.Add(colvarClearingAgentAdd3);
                
                TableSchema.TableColumn colvarClearingAgentCountry = new TableSchema.TableColumn(schema);
                colvarClearingAgentCountry.ColumnName = "ClearingAgentCountry";
                colvarClearingAgentCountry.DataType = DbType.String;
                colvarClearingAgentCountry.MaxLength = 50;
                colvarClearingAgentCountry.AutoIncrement = false;
                colvarClearingAgentCountry.IsNullable = false;
                colvarClearingAgentCountry.IsPrimaryKey = false;
                colvarClearingAgentCountry.IsForeignKey = false;
                colvarClearingAgentCountry.IsReadOnly = false;
                
                schema.Columns.Add(colvarClearingAgentCountry);
                
                TableSchema.TableColumn colvarClearingAgentTel = new TableSchema.TableColumn(schema);
                colvarClearingAgentTel.ColumnName = "ClearingAgentTel";
                colvarClearingAgentTel.DataType = DbType.String;
                colvarClearingAgentTel.MaxLength = 20;
                colvarClearingAgentTel.AutoIncrement = false;
                colvarClearingAgentTel.IsNullable = true;
                colvarClearingAgentTel.IsPrimaryKey = false;
                colvarClearingAgentTel.IsForeignKey = false;
                colvarClearingAgentTel.IsReadOnly = false;
                
                schema.Columns.Add(colvarClearingAgentTel);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["WWIprov"].AddSchema("ClearingAgentView",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ClearingAgentView()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ClearingAgentView(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ClearingAgentView(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ClearingAgentView(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("CompanyID")]
        [Bindable(true)]
        public int CompanyID 
	    {
		    get
		    {
			    return GetColumnValue<int>("CompanyID");
		    }
            set 
		    {
			    SetColumnValue("CompanyID", value);
            }
        }
	      
        [XmlAttribute("ClearingAgentName")]
        [Bindable(true)]
        public string ClearingAgentName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ClearingAgentName");
		    }
            set 
		    {
			    SetColumnValue("ClearingAgentName", value);
            }
        }
	      
        [XmlAttribute("ClearingAgentAdd1")]
        [Bindable(true)]
        public string ClearingAgentAdd1 
	    {
		    get
		    {
			    return GetColumnValue<string>("ClearingAgentAdd1");
		    }
            set 
		    {
			    SetColumnValue("ClearingAgentAdd1", value);
            }
        }
	      
        [XmlAttribute("ClearingAgentAdd2")]
        [Bindable(true)]
        public string ClearingAgentAdd2 
	    {
		    get
		    {
			    return GetColumnValue<string>("ClearingAgentAdd2");
		    }
            set 
		    {
			    SetColumnValue("ClearingAgentAdd2", value);
            }
        }
	      
        [XmlAttribute("ClearingAgentAdd3")]
        [Bindable(true)]
        public string ClearingAgentAdd3 
	    {
		    get
		    {
			    return GetColumnValue<string>("ClearingAgentAdd3");
		    }
            set 
		    {
			    SetColumnValue("ClearingAgentAdd3", value);
            }
        }
	      
        [XmlAttribute("ClearingAgentCountry")]
        [Bindable(true)]
        public string ClearingAgentCountry 
	    {
		    get
		    {
			    return GetColumnValue<string>("ClearingAgentCountry");
		    }
            set 
		    {
			    SetColumnValue("ClearingAgentCountry", value);
            }
        }
	      
        [XmlAttribute("ClearingAgentTel")]
        [Bindable(true)]
        public string ClearingAgentTel 
	    {
		    get
		    {
			    return GetColumnValue<string>("ClearingAgentTel");
		    }
            set 
		    {
			    SetColumnValue("ClearingAgentTel", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string CompanyID = @"CompanyID";
            
            public static string ClearingAgentName = @"ClearingAgentName";
            
            public static string ClearingAgentAdd1 = @"ClearingAgentAdd1";
            
            public static string ClearingAgentAdd2 = @"ClearingAgentAdd2";
            
            public static string ClearingAgentAdd3 = @"ClearingAgentAdd3";
            
            public static string ClearingAgentCountry = @"ClearingAgentCountry";
            
            public static string ClearingAgentTel = @"ClearingAgentTel";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
