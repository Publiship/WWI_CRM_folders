using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Logistics{
    /// <summary>
    /// Strongly-typed collection for the OrdersNotYetInvoicedView class.
    /// </summary>
    [Serializable]
    public partial class OrdersNotYetInvoicedViewCollection : ReadOnlyList<OrdersNotYetInvoicedView, OrdersNotYetInvoicedViewCollection>
    {        
        public OrdersNotYetInvoicedViewCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the OrdersNotYetInvoicedView view.
    /// </summary>
    [Serializable]
    public partial class OrdersNotYetInvoicedView : ReadOnlyRecord<OrdersNotYetInvoicedView>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("OrdersNotYetInvoicedView", TableType.View, DataService.GetInstance("WWIprov"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarOrderNumber = new TableSchema.TableColumn(schema);
                colvarOrderNumber.ColumnName = "OrderNumber";
                colvarOrderNumber.DataType = DbType.Int32;
                colvarOrderNumber.MaxLength = 0;
                colvarOrderNumber.AutoIncrement = false;
                colvarOrderNumber.IsNullable = true;
                colvarOrderNumber.IsPrimaryKey = false;
                colvarOrderNumber.IsForeignKey = false;
                colvarOrderNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderNumber);
                
                TableSchema.TableColumn colvarCompanyName = new TableSchema.TableColumn(schema);
                colvarCompanyName.ColumnName = "CompanyName";
                colvarCompanyName.DataType = DbType.String;
                colvarCompanyName.MaxLength = 50;
                colvarCompanyName.AutoIncrement = false;
                colvarCompanyName.IsNullable = true;
                colvarCompanyName.IsPrimaryKey = false;
                colvarCompanyName.IsForeignKey = false;
                colvarCompanyName.IsReadOnly = false;
                
                schema.Columns.Add(colvarCompanyName);
                
                TableSchema.TableColumn colvarOps = new TableSchema.TableColumn(schema);
                colvarOps.ColumnName = "Ops";
                colvarOps.DataType = DbType.String;
                colvarOps.MaxLength = 50;
                colvarOps.AutoIncrement = false;
                colvarOps.IsNullable = true;
                colvarOps.IsPrimaryKey = false;
                colvarOps.IsForeignKey = false;
                colvarOps.IsReadOnly = false;
                
                schema.Columns.Add(colvarOps);
                
                TableSchema.TableColumn colvarExWorksDate = new TableSchema.TableColumn(schema);
                colvarExWorksDate.ColumnName = "ExWorksDate";
                colvarExWorksDate.DataType = DbType.DateTime;
                colvarExWorksDate.MaxLength = 0;
                colvarExWorksDate.AutoIncrement = false;
                colvarExWorksDate.IsNullable = true;
                colvarExWorksDate.IsPrimaryKey = false;
                colvarExWorksDate.IsForeignKey = false;
                colvarExWorksDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarExWorksDate);
                
                TableSchema.TableColumn colvarJoined = new TableSchema.TableColumn(schema);
                colvarJoined.ColumnName = "Joined";
                colvarJoined.DataType = DbType.String;
                colvarJoined.MaxLength = 50;
                colvarJoined.AutoIncrement = false;
                colvarJoined.IsNullable = true;
                colvarJoined.IsPrimaryKey = false;
                colvarJoined.IsForeignKey = false;
                colvarJoined.IsReadOnly = false;
                
                schema.Columns.Add(colvarJoined);
                
                TableSchema.TableColumn colvarEts = new TableSchema.TableColumn(schema);
                colvarEts.ColumnName = "ETS";
                colvarEts.DataType = DbType.DateTime;
                colvarEts.MaxLength = 0;
                colvarEts.AutoIncrement = false;
                colvarEts.IsNullable = true;
                colvarEts.IsPrimaryKey = false;
                colvarEts.IsForeignKey = false;
                colvarEts.IsReadOnly = false;
                
                schema.Columns.Add(colvarEts);
                
                TableSchema.TableColumn colvarEta = new TableSchema.TableColumn(schema);
                colvarEta.ColumnName = "ETA";
                colvarEta.DataType = DbType.DateTime;
                colvarEta.MaxLength = 0;
                colvarEta.AutoIncrement = false;
                colvarEta.IsNullable = true;
                colvarEta.IsPrimaryKey = false;
                colvarEta.IsForeignKey = false;
                colvarEta.IsReadOnly = false;
                
                schema.Columns.Add(colvarEta);
                
                TableSchema.TableColumn colvarCustSvs = new TableSchema.TableColumn(schema);
                colvarCustSvs.ColumnName = "CustSvs";
                colvarCustSvs.DataType = DbType.String;
                colvarCustSvs.MaxLength = 50;
                colvarCustSvs.AutoIncrement = false;
                colvarCustSvs.IsNullable = true;
                colvarCustSvs.IsPrimaryKey = false;
                colvarCustSvs.IsForeignKey = false;
                colvarCustSvs.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustSvs);
                
                TableSchema.TableColumn colvarShippedOnBoard = new TableSchema.TableColumn(schema);
                colvarShippedOnBoard.ColumnName = "ShippedOnBoard";
                colvarShippedOnBoard.DataType = DbType.Boolean;
                colvarShippedOnBoard.MaxLength = 0;
                colvarShippedOnBoard.AutoIncrement = false;
                colvarShippedOnBoard.IsNullable = false;
                colvarShippedOnBoard.IsPrimaryKey = false;
                colvarShippedOnBoard.IsForeignKey = false;
                colvarShippedOnBoard.IsReadOnly = false;
                
                schema.Columns.Add(colvarShippedOnBoard);
                
                TableSchema.TableColumn colvarConsolNumber = new TableSchema.TableColumn(schema);
                colvarConsolNumber.ColumnName = "ConsolNumber";
                colvarConsolNumber.DataType = DbType.Int32;
                colvarConsolNumber.MaxLength = 0;
                colvarConsolNumber.AutoIncrement = false;
                colvarConsolNumber.IsNullable = true;
                colvarConsolNumber.IsPrimaryKey = false;
                colvarConsolNumber.IsForeignKey = false;
                colvarConsolNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsolNumber);
                
                TableSchema.TableColumn colvarOrderNo = new TableSchema.TableColumn(schema);
                colvarOrderNo.ColumnName = "OrderNo";
                colvarOrderNo.DataType = DbType.Int32;
                colvarOrderNo.MaxLength = 0;
                colvarOrderNo.AutoIncrement = false;
                colvarOrderNo.IsNullable = true;
                colvarOrderNo.IsPrimaryKey = false;
                colvarOrderNo.IsForeignKey = false;
                colvarOrderNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderNo);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["WWIprov"].AddSchema("OrdersNotYetInvoicedView",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public OrdersNotYetInvoicedView()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public OrdersNotYetInvoicedView(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public OrdersNotYetInvoicedView(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public OrdersNotYetInvoicedView(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("OrderNumber")]
        [Bindable(true)]
        public int? OrderNumber 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OrderNumber");
		    }
            set 
		    {
			    SetColumnValue("OrderNumber", value);
            }
        }
	      
        [XmlAttribute("CompanyName")]
        [Bindable(true)]
        public string CompanyName 
	    {
		    get
		    {
			    return GetColumnValue<string>("CompanyName");
		    }
            set 
		    {
			    SetColumnValue("CompanyName", value);
            }
        }
	      
        [XmlAttribute("Ops")]
        [Bindable(true)]
        public string Ops 
	    {
		    get
		    {
			    return GetColumnValue<string>("Ops");
		    }
            set 
		    {
			    SetColumnValue("Ops", value);
            }
        }
	      
        [XmlAttribute("ExWorksDate")]
        [Bindable(true)]
        public DateTime? ExWorksDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ExWorksDate");
		    }
            set 
		    {
			    SetColumnValue("ExWorksDate", value);
            }
        }
	      
        [XmlAttribute("Joined")]
        [Bindable(true)]
        public string Joined 
	    {
		    get
		    {
			    return GetColumnValue<string>("Joined");
		    }
            set 
		    {
			    SetColumnValue("Joined", value);
            }
        }
	      
        [XmlAttribute("Ets")]
        [Bindable(true)]
        public DateTime? Ets 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ETS");
		    }
            set 
		    {
			    SetColumnValue("ETS", value);
            }
        }
	      
        [XmlAttribute("Eta")]
        [Bindable(true)]
        public DateTime? Eta 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ETA");
		    }
            set 
		    {
			    SetColumnValue("ETA", value);
            }
        }
	      
        [XmlAttribute("CustSvs")]
        [Bindable(true)]
        public string CustSvs 
	    {
		    get
		    {
			    return GetColumnValue<string>("CustSvs");
		    }
            set 
		    {
			    SetColumnValue("CustSvs", value);
            }
        }
	      
        [XmlAttribute("ShippedOnBoard")]
        [Bindable(true)]
        public bool ShippedOnBoard 
	    {
		    get
		    {
			    return GetColumnValue<bool>("ShippedOnBoard");
		    }
            set 
		    {
			    SetColumnValue("ShippedOnBoard", value);
            }
        }
	      
        [XmlAttribute("ConsolNumber")]
        [Bindable(true)]
        public int? ConsolNumber 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ConsolNumber");
		    }
            set 
		    {
			    SetColumnValue("ConsolNumber", value);
            }
        }
	      
        [XmlAttribute("OrderNo")]
        [Bindable(true)]
        public int? OrderNo 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OrderNo");
		    }
            set 
		    {
			    SetColumnValue("OrderNo", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string OrderNumber = @"OrderNumber";
            
            public static string CompanyName = @"CompanyName";
            
            public static string Ops = @"Ops";
            
            public static string ExWorksDate = @"ExWorksDate";
            
            public static string Joined = @"Joined";
            
            public static string Ets = @"ETS";
            
            public static string Eta = @"ETA";
            
            public static string CustSvs = @"CustSvs";
            
            public static string ShippedOnBoard = @"ShippedOnBoard";
            
            public static string ConsolNumber = @"ConsolNumber";
            
            public static string OrderNo = @"OrderNo";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
