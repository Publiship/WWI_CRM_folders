using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Logistics{
    /// <summary>
    /// Strongly-typed collection for the ViewOrder class.
    /// </summary>
    [Serializable]
    public partial class ViewOrderCollection : ReadOnlyList<ViewOrder, ViewOrderCollection>
    {        
        public ViewOrderCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the view_order view.
    /// </summary>
    [Serializable]
    public partial class ViewOrder : ReadOnlyRecord<ViewOrder>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("view_order", TableType.View, DataService.GetInstance("WWIprov"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarOrderID = new TableSchema.TableColumn(schema);
                colvarOrderID.ColumnName = "OrderID";
                colvarOrderID.DataType = DbType.Int32;
                colvarOrderID.MaxLength = 0;
                colvarOrderID.AutoIncrement = false;
                colvarOrderID.IsNullable = false;
                colvarOrderID.IsPrimaryKey = false;
                colvarOrderID.IsForeignKey = false;
                colvarOrderID.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderID);
                
                TableSchema.TableColumn colvarCompanyID = new TableSchema.TableColumn(schema);
                colvarCompanyID.ColumnName = "CompanyID";
                colvarCompanyID.DataType = DbType.Int32;
                colvarCompanyID.MaxLength = 0;
                colvarCompanyID.AutoIncrement = false;
                colvarCompanyID.IsNullable = true;
                colvarCompanyID.IsPrimaryKey = false;
                colvarCompanyID.IsForeignKey = false;
                colvarCompanyID.IsReadOnly = false;
                
                schema.Columns.Add(colvarCompanyID);
                
                TableSchema.TableColumn colvarOrderControllerID = new TableSchema.TableColumn(schema);
                colvarOrderControllerID.ColumnName = "OrderControllerID";
                colvarOrderControllerID.DataType = DbType.Int32;
                colvarOrderControllerID.MaxLength = 0;
                colvarOrderControllerID.AutoIncrement = false;
                colvarOrderControllerID.IsNullable = true;
                colvarOrderControllerID.IsPrimaryKey = false;
                colvarOrderControllerID.IsForeignKey = false;
                colvarOrderControllerID.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderControllerID);
                
                TableSchema.TableColumn colvarOrderNumber = new TableSchema.TableColumn(schema);
                colvarOrderNumber.ColumnName = "OrderNumber";
                colvarOrderNumber.DataType = DbType.Int32;
                colvarOrderNumber.MaxLength = 0;
                colvarOrderNumber.AutoIncrement = false;
                colvarOrderNumber.IsNullable = true;
                colvarOrderNumber.IsPrimaryKey = false;
                colvarOrderNumber.IsForeignKey = false;
                colvarOrderNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderNumber);
                
                TableSchema.TableColumn colvarHouseBLNUmber = new TableSchema.TableColumn(schema);
                colvarHouseBLNUmber.ColumnName = "HouseBLNUmber";
                colvarHouseBLNUmber.DataType = DbType.String;
                colvarHouseBLNUmber.MaxLength = 50;
                colvarHouseBLNUmber.AutoIncrement = false;
                colvarHouseBLNUmber.IsNullable = true;
                colvarHouseBLNUmber.IsPrimaryKey = false;
                colvarHouseBLNUmber.IsForeignKey = false;
                colvarHouseBLNUmber.IsReadOnly = false;
                
                schema.Columns.Add(colvarHouseBLNUmber);
                
                TableSchema.TableColumn colvarCustomersRef = new TableSchema.TableColumn(schema);
                colvarCustomersRef.ColumnName = "CustomersRef";
                colvarCustomersRef.DataType = DbType.String;
                colvarCustomersRef.MaxLength = 20;
                colvarCustomersRef.AutoIncrement = false;
                colvarCustomersRef.IsNullable = true;
                colvarCustomersRef.IsPrimaryKey = false;
                colvarCustomersRef.IsForeignKey = false;
                colvarCustomersRef.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomersRef);
                
                TableSchema.TableColumn colvarDateOrderCreated = new TableSchema.TableColumn(schema);
                colvarDateOrderCreated.ColumnName = "DateOrderCreated";
                colvarDateOrderCreated.DataType = DbType.DateTime;
                colvarDateOrderCreated.MaxLength = 0;
                colvarDateOrderCreated.AutoIncrement = false;
                colvarDateOrderCreated.IsNullable = true;
                colvarDateOrderCreated.IsPrimaryKey = false;
                colvarDateOrderCreated.IsForeignKey = false;
                colvarDateOrderCreated.IsReadOnly = false;
                
                schema.Columns.Add(colvarDateOrderCreated);
                
                TableSchema.TableColumn colvarOriginport = new TableSchema.TableColumn(schema);
                colvarOriginport.ColumnName = "originport";
                colvarOriginport.DataType = DbType.String;
                colvarOriginport.MaxLength = 30;
                colvarOriginport.AutoIncrement = false;
                colvarOriginport.IsNullable = true;
                colvarOriginport.IsPrimaryKey = false;
                colvarOriginport.IsForeignKey = false;
                colvarOriginport.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginport);
                
                TableSchema.TableColumn colvarDestport = new TableSchema.TableColumn(schema);
                colvarDestport.ColumnName = "destport";
                colvarDestport.DataType = DbType.String;
                colvarDestport.MaxLength = 30;
                colvarDestport.AutoIncrement = false;
                colvarDestport.IsNullable = true;
                colvarDestport.IsPrimaryKey = false;
                colvarDestport.IsForeignKey = false;
                colvarDestport.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestport);
                
                TableSchema.TableColumn colvarJoined = new TableSchema.TableColumn(schema);
                colvarJoined.ColumnName = "Joined";
                colvarJoined.DataType = DbType.String;
                colvarJoined.MaxLength = 50;
                colvarJoined.AutoIncrement = false;
                colvarJoined.IsNullable = true;
                colvarJoined.IsPrimaryKey = false;
                colvarJoined.IsForeignKey = false;
                colvarJoined.IsReadOnly = false;
                
                schema.Columns.Add(colvarJoined);
                
                TableSchema.TableColumn colvarEts = new TableSchema.TableColumn(schema);
                colvarEts.ColumnName = "ETS";
                colvarEts.DataType = DbType.DateTime;
                colvarEts.MaxLength = 0;
                colvarEts.AutoIncrement = false;
                colvarEts.IsNullable = true;
                colvarEts.IsPrimaryKey = false;
                colvarEts.IsForeignKey = false;
                colvarEts.IsReadOnly = false;
                
                schema.Columns.Add(colvarEts);
                
                TableSchema.TableColumn colvarEta = new TableSchema.TableColumn(schema);
                colvarEta.ColumnName = "ETA";
                colvarEta.DataType = DbType.DateTime;
                colvarEta.MaxLength = 0;
                colvarEta.AutoIncrement = false;
                colvarEta.IsNullable = true;
                colvarEta.IsPrimaryKey = false;
                colvarEta.IsForeignKey = false;
                colvarEta.IsReadOnly = false;
                
                schema.Columns.Add(colvarEta);
                
                TableSchema.TableColumn colvarDestplace = new TableSchema.TableColumn(schema);
                colvarDestplace.ColumnName = "destplace";
                colvarDestplace.DataType = DbType.String;
                colvarDestplace.MaxLength = 30;
                colvarDestplace.AutoIncrement = false;
                colvarDestplace.IsNullable = true;
                colvarDestplace.IsPrimaryKey = false;
                colvarDestplace.IsForeignKey = false;
                colvarDestplace.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestplace);
                
                TableSchema.TableColumn colvarOriginplace = new TableSchema.TableColumn(schema);
                colvarOriginplace.ColumnName = "originplace";
                colvarOriginplace.DataType = DbType.String;
                colvarOriginplace.MaxLength = 30;
                colvarOriginplace.AutoIncrement = false;
                colvarOriginplace.IsNullable = true;
                colvarOriginplace.IsPrimaryKey = false;
                colvarOriginplace.IsForeignKey = false;
                colvarOriginplace.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginplace);
                
                TableSchema.TableColumn colvarJobClosed = new TableSchema.TableColumn(schema);
                colvarJobClosed.ColumnName = "JobClosed";
                colvarJobClosed.DataType = DbType.Boolean;
                colvarJobClosed.MaxLength = 0;
                colvarJobClosed.AutoIncrement = false;
                colvarJobClosed.IsNullable = false;
                colvarJobClosed.IsPrimaryKey = false;
                colvarJobClosed.IsForeignKey = false;
                colvarJobClosed.IsReadOnly = false;
                
                schema.Columns.Add(colvarJobClosed);
                
                TableSchema.TableColumn colvarContainerNumber = new TableSchema.TableColumn(schema);
                colvarContainerNumber.ColumnName = "ContainerNumber";
                colvarContainerNumber.DataType = DbType.String;
                colvarContainerNumber.MaxLength = 50;
                colvarContainerNumber.AutoIncrement = false;
                colvarContainerNumber.IsNullable = true;
                colvarContainerNumber.IsPrimaryKey = false;
                colvarContainerNumber.IsForeignKey = false;
                colvarContainerNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarContainerNumber);
                
                TableSchema.TableColumn colvarTitle = new TableSchema.TableColumn(schema);
                colvarTitle.ColumnName = "Title";
                colvarTitle.DataType = DbType.String;
                colvarTitle.MaxLength = 100;
                colvarTitle.AutoIncrement = false;
                colvarTitle.IsNullable = true;
                colvarTitle.IsPrimaryKey = false;
                colvarTitle.IsForeignKey = false;
                colvarTitle.IsReadOnly = false;
                
                schema.Columns.Add(colvarTitle);
                
                TableSchema.TableColumn colvarIsbn = new TableSchema.TableColumn(schema);
                colvarIsbn.ColumnName = "ISBN";
                colvarIsbn.DataType = DbType.String;
                colvarIsbn.MaxLength = 50;
                colvarIsbn.AutoIncrement = false;
                colvarIsbn.IsNullable = true;
                colvarIsbn.IsPrimaryKey = false;
                colvarIsbn.IsForeignKey = false;
                colvarIsbn.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsbn);
                
                TableSchema.TableColumn colvarContactID = new TableSchema.TableColumn(schema);
                colvarContactID.ColumnName = "ContactID";
                colvarContactID.DataType = DbType.Int32;
                colvarContactID.MaxLength = 0;
                colvarContactID.AutoIncrement = false;
                colvarContactID.IsNullable = true;
                colvarContactID.IsPrimaryKey = false;
                colvarContactID.IsForeignKey = false;
                colvarContactID.IsReadOnly = false;
                
                schema.Columns.Add(colvarContactID);
                
                TableSchema.TableColumn colvarTitleID = new TableSchema.TableColumn(schema);
                colvarTitleID.ColumnName = "TitleID";
                colvarTitleID.DataType = DbType.Int32;
                colvarTitleID.MaxLength = 0;
                colvarTitleID.AutoIncrement = false;
                colvarTitleID.IsNullable = true;
                colvarTitleID.IsPrimaryKey = false;
                colvarTitleID.IsForeignKey = false;
                colvarTitleID.IsReadOnly = false;
                
                schema.Columns.Add(colvarTitleID);
                
                TableSchema.TableColumn colvarExWorksDate = new TableSchema.TableColumn(schema);
                colvarExWorksDate.ColumnName = "ExWorksDate";
                colvarExWorksDate.DataType = DbType.DateTime;
                colvarExWorksDate.MaxLength = 0;
                colvarExWorksDate.AutoIncrement = false;
                colvarExWorksDate.IsNullable = true;
                colvarExWorksDate.IsPrimaryKey = false;
                colvarExWorksDate.IsForeignKey = false;
                colvarExWorksDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarExWorksDate);
                
                TableSchema.TableColumn colvarContactName = new TableSchema.TableColumn(schema);
                colvarContactName.ColumnName = "ContactName";
                colvarContactName.DataType = DbType.String;
                colvarContactName.MaxLength = 50;
                colvarContactName.AutoIncrement = false;
                colvarContactName.IsNullable = true;
                colvarContactName.IsPrimaryKey = false;
                colvarContactName.IsForeignKey = false;
                colvarContactName.IsReadOnly = false;
                
                schema.Columns.Add(colvarContactName);
                
                TableSchema.TableColumn colvarCompanyName = new TableSchema.TableColumn(schema);
                colvarCompanyName.ColumnName = "CompanyName";
                colvarCompanyName.DataType = DbType.String;
                colvarCompanyName.MaxLength = 50;
                colvarCompanyName.AutoIncrement = false;
                colvarCompanyName.IsNullable = true;
                colvarCompanyName.IsPrimaryKey = false;
                colvarCompanyName.IsForeignKey = false;
                colvarCompanyName.IsReadOnly = false;
                
                schema.Columns.Add(colvarCompanyName);
                
                TableSchema.TableColumn colvarName = new TableSchema.TableColumn(schema);
                colvarName.ColumnName = "Name";
                colvarName.DataType = DbType.String;
                colvarName.MaxLength = 50;
                colvarName.AutoIncrement = false;
                colvarName.IsNullable = true;
                colvarName.IsPrimaryKey = false;
                colvarName.IsForeignKey = false;
                colvarName.IsReadOnly = false;
                
                schema.Columns.Add(colvarName);
                
                TableSchema.TableColumn colvarOrderIx = new TableSchema.TableColumn(schema);
                colvarOrderIx.ColumnName = "OrderIx";
                colvarOrderIx.DataType = DbType.AnsiString;
                colvarOrderIx.MaxLength = 90;
                colvarOrderIx.AutoIncrement = false;
                colvarOrderIx.IsNullable = true;
                colvarOrderIx.IsPrimaryKey = false;
                colvarOrderIx.IsForeignKey = false;
                colvarOrderIx.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderIx);
                
                TableSchema.TableColumn colvarEstPallets = new TableSchema.TableColumn(schema);
                colvarEstPallets.ColumnName = "EstPallets";
                colvarEstPallets.DataType = DbType.Int32;
                colvarEstPallets.MaxLength = 0;
                colvarEstPallets.AutoIncrement = false;
                colvarEstPallets.IsNullable = true;
                colvarEstPallets.IsPrimaryKey = false;
                colvarEstPallets.IsForeignKey = false;
                colvarEstPallets.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstPallets);
                
                TableSchema.TableColumn colvarEstWeight = new TableSchema.TableColumn(schema);
                colvarEstWeight.ColumnName = "EstWeight";
                colvarEstWeight.DataType = DbType.Int32;
                colvarEstWeight.MaxLength = 0;
                colvarEstWeight.AutoIncrement = false;
                colvarEstWeight.IsNullable = true;
                colvarEstWeight.IsPrimaryKey = false;
                colvarEstWeight.IsForeignKey = false;
                colvarEstWeight.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstWeight);
                
                TableSchema.TableColumn colvarEstVolume = new TableSchema.TableColumn(schema);
                colvarEstVolume.ColumnName = "EstVolume";
                colvarEstVolume.DataType = DbType.Single;
                colvarEstVolume.MaxLength = 0;
                colvarEstVolume.AutoIncrement = false;
                colvarEstVolume.IsNullable = true;
                colvarEstVolume.IsPrimaryKey = false;
                colvarEstVolume.IsForeignKey = false;
                colvarEstVolume.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstVolume);
                
                TableSchema.TableColumn colvarCargoReady = new TableSchema.TableColumn(schema);
                colvarCargoReady.ColumnName = "CargoReady";
                colvarCargoReady.DataType = DbType.DateTime;
                colvarCargoReady.MaxLength = 0;
                colvarCargoReady.AutoIncrement = false;
                colvarCargoReady.IsNullable = true;
                colvarCargoReady.IsPrimaryKey = false;
                colvarCargoReady.IsForeignKey = false;
                colvarCargoReady.IsReadOnly = false;
                
                schema.Columns.Add(colvarCargoReady);
                
                TableSchema.TableColumn colvarCargoUpdateId = new TableSchema.TableColumn(schema);
                colvarCargoUpdateId.ColumnName = "CargoUpdateId";
                colvarCargoUpdateId.DataType = DbType.Int32;
                colvarCargoUpdateId.MaxLength = 0;
                colvarCargoUpdateId.AutoIncrement = false;
                colvarCargoUpdateId.IsNullable = true;
                colvarCargoUpdateId.IsPrimaryKey = false;
                colvarCargoUpdateId.IsForeignKey = false;
                colvarCargoUpdateId.IsReadOnly = false;
                
                schema.Columns.Add(colvarCargoUpdateId);
                
                TableSchema.TableColumn colvarDtupdated = new TableSchema.TableColumn(schema);
                colvarDtupdated.ColumnName = "dtupdated";
                colvarDtupdated.DataType = DbType.DateTime;
                colvarDtupdated.MaxLength = 0;
                colvarDtupdated.AutoIncrement = false;
                colvarDtupdated.IsNullable = true;
                colvarDtupdated.IsPrimaryKey = false;
                colvarDtupdated.IsForeignKey = false;
                colvarDtupdated.IsReadOnly = false;
                
                schema.Columns.Add(colvarDtupdated);
                
                TableSchema.TableColumn colvarPrinterID = new TableSchema.TableColumn(schema);
                colvarPrinterID.ColumnName = "PrinterID";
                colvarPrinterID.DataType = DbType.Int32;
                colvarPrinterID.MaxLength = 0;
                colvarPrinterID.AutoIncrement = false;
                colvarPrinterID.IsNullable = true;
                colvarPrinterID.IsPrimaryKey = false;
                colvarPrinterID.IsForeignKey = false;
                colvarPrinterID.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinterID);
                
                TableSchema.TableColumn colvarEtw = new TableSchema.TableColumn(schema);
                colvarEtw.ColumnName = "ETW";
                colvarEtw.DataType = DbType.DateTime;
                colvarEtw.MaxLength = 0;
                colvarEtw.AutoIncrement = false;
                colvarEtw.IsNullable = true;
                colvarEtw.IsPrimaryKey = false;
                colvarEtw.IsForeignKey = false;
                colvarEtw.IsReadOnly = false;
                
                schema.Columns.Add(colvarEtw);
                
                TableSchema.TableColumn colvarPrinterName = new TableSchema.TableColumn(schema);
                colvarPrinterName.ColumnName = "printer_name";
                colvarPrinterName.DataType = DbType.String;
                colvarPrinterName.MaxLength = 50;
                colvarPrinterName.AutoIncrement = false;
                colvarPrinterName.IsNullable = true;
                colvarPrinterName.IsPrimaryKey = false;
                colvarPrinterName.IsForeignKey = false;
                colvarPrinterName.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinterName);
                
                TableSchema.TableColumn colvarWarehouseDate = new TableSchema.TableColumn(schema);
                colvarWarehouseDate.ColumnName = "WarehouseDate";
                colvarWarehouseDate.DataType = DbType.DateTime;
                colvarWarehouseDate.MaxLength = 0;
                colvarWarehouseDate.AutoIncrement = false;
                colvarWarehouseDate.IsNullable = true;
                colvarWarehouseDate.IsPrimaryKey = false;
                colvarWarehouseDate.IsForeignKey = false;
                colvarWarehouseDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarWarehouseDate);
                
                TableSchema.TableColumn colvarUnitPricePerCopy = new TableSchema.TableColumn(schema);
                colvarUnitPricePerCopy.ColumnName = "UnitPricePerCopy";
                colvarUnitPricePerCopy.DataType = DbType.Single;
                colvarUnitPricePerCopy.MaxLength = 0;
                colvarUnitPricePerCopy.AutoIncrement = false;
                colvarUnitPricePerCopy.IsNullable = true;
                colvarUnitPricePerCopy.IsPrimaryKey = false;
                colvarUnitPricePerCopy.IsForeignKey = false;
                colvarUnitPricePerCopy.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitPricePerCopy);
                
                TableSchema.TableColumn colvarDocumentFolder = new TableSchema.TableColumn(schema);
                colvarDocumentFolder.ColumnName = "document_folder";
                colvarDocumentFolder.DataType = DbType.Int32;
                colvarDocumentFolder.MaxLength = 0;
                colvarDocumentFolder.AutoIncrement = false;
                colvarDocumentFolder.IsNullable = true;
                colvarDocumentFolder.IsPrimaryKey = false;
                colvarDocumentFolder.IsForeignKey = false;
                colvarDocumentFolder.IsReadOnly = false;
                
                schema.Columns.Add(colvarDocumentFolder);
                
                TableSchema.TableColumn colvarConsigneeName = new TableSchema.TableColumn(schema);
                colvarConsigneeName.ColumnName = "ConsigneeName";
                colvarConsigneeName.DataType = DbType.String;
                colvarConsigneeName.MaxLength = 50;
                colvarConsigneeName.AutoIncrement = false;
                colvarConsigneeName.IsNullable = true;
                colvarConsigneeName.IsPrimaryKey = false;
                colvarConsigneeName.IsForeignKey = false;
                colvarConsigneeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsigneeName);
                
                TableSchema.TableColumn colvarImpression = new TableSchema.TableColumn(schema);
                colvarImpression.ColumnName = "Impression";
                colvarImpression.DataType = DbType.String;
                colvarImpression.MaxLength = 50;
                colvarImpression.AutoIncrement = false;
                colvarImpression.IsNullable = true;
                colvarImpression.IsPrimaryKey = false;
                colvarImpression.IsForeignKey = false;
                colvarImpression.IsReadOnly = false;
                
                schema.Columns.Add(colvarImpression);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["WWIprov"].AddSchema("view_order",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewOrder()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewOrder(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewOrder(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewOrder(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("OrderID")]
        [Bindable(true)]
        public int OrderID 
	    {
		    get
		    {
			    return GetColumnValue<int>("OrderID");
		    }
            set 
		    {
			    SetColumnValue("OrderID", value);
            }
        }
	      
        [XmlAttribute("CompanyID")]
        [Bindable(true)]
        public int? CompanyID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CompanyID");
		    }
            set 
		    {
			    SetColumnValue("CompanyID", value);
            }
        }
	      
        [XmlAttribute("OrderControllerID")]
        [Bindable(true)]
        public int? OrderControllerID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OrderControllerID");
		    }
            set 
		    {
			    SetColumnValue("OrderControllerID", value);
            }
        }
	      
        [XmlAttribute("OrderNumber")]
        [Bindable(true)]
        public int? OrderNumber 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OrderNumber");
		    }
            set 
		    {
			    SetColumnValue("OrderNumber", value);
            }
        }
	      
        [XmlAttribute("HouseBLNUmber")]
        [Bindable(true)]
        public string HouseBLNUmber 
	    {
		    get
		    {
			    return GetColumnValue<string>("HouseBLNUmber");
		    }
            set 
		    {
			    SetColumnValue("HouseBLNUmber", value);
            }
        }
	      
        [XmlAttribute("CustomersRef")]
        [Bindable(true)]
        public string CustomersRef 
	    {
		    get
		    {
			    return GetColumnValue<string>("CustomersRef");
		    }
            set 
		    {
			    SetColumnValue("CustomersRef", value);
            }
        }
	      
        [XmlAttribute("DateOrderCreated")]
        [Bindable(true)]
        public DateTime? DateOrderCreated 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("DateOrderCreated");
		    }
            set 
		    {
			    SetColumnValue("DateOrderCreated", value);
            }
        }
	      
        [XmlAttribute("Originport")]
        [Bindable(true)]
        public string Originport 
	    {
		    get
		    {
			    return GetColumnValue<string>("originport");
		    }
            set 
		    {
			    SetColumnValue("originport", value);
            }
        }
	      
        [XmlAttribute("Destport")]
        [Bindable(true)]
        public string Destport 
	    {
		    get
		    {
			    return GetColumnValue<string>("destport");
		    }
            set 
		    {
			    SetColumnValue("destport", value);
            }
        }
	      
        [XmlAttribute("Joined")]
        [Bindable(true)]
        public string Joined 
	    {
		    get
		    {
			    return GetColumnValue<string>("Joined");
		    }
            set 
		    {
			    SetColumnValue("Joined", value);
            }
        }
	      
        [XmlAttribute("Ets")]
        [Bindable(true)]
        public DateTime? Ets 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ETS");
		    }
            set 
		    {
			    SetColumnValue("ETS", value);
            }
        }
	      
        [XmlAttribute("Eta")]
        [Bindable(true)]
        public DateTime? Eta 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ETA");
		    }
            set 
		    {
			    SetColumnValue("ETA", value);
            }
        }
	      
        [XmlAttribute("Destplace")]
        [Bindable(true)]
        public string Destplace 
	    {
		    get
		    {
			    return GetColumnValue<string>("destplace");
		    }
            set 
		    {
			    SetColumnValue("destplace", value);
            }
        }
	      
        [XmlAttribute("Originplace")]
        [Bindable(true)]
        public string Originplace 
	    {
		    get
		    {
			    return GetColumnValue<string>("originplace");
		    }
            set 
		    {
			    SetColumnValue("originplace", value);
            }
        }
	      
        [XmlAttribute("JobClosed")]
        [Bindable(true)]
        public bool JobClosed 
	    {
		    get
		    {
			    return GetColumnValue<bool>("JobClosed");
		    }
            set 
		    {
			    SetColumnValue("JobClosed", value);
            }
        }
	      
        [XmlAttribute("ContainerNumber")]
        [Bindable(true)]
        public string ContainerNumber 
	    {
		    get
		    {
			    return GetColumnValue<string>("ContainerNumber");
		    }
            set 
		    {
			    SetColumnValue("ContainerNumber", value);
            }
        }
	      
        [XmlAttribute("Title")]
        [Bindable(true)]
        public string Title 
	    {
		    get
		    {
			    return GetColumnValue<string>("Title");
		    }
            set 
		    {
			    SetColumnValue("Title", value);
            }
        }
	      
        [XmlAttribute("Isbn")]
        [Bindable(true)]
        public string Isbn 
	    {
		    get
		    {
			    return GetColumnValue<string>("ISBN");
		    }
            set 
		    {
			    SetColumnValue("ISBN", value);
            }
        }
	      
        [XmlAttribute("ContactID")]
        [Bindable(true)]
        public int? ContactID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ContactID");
		    }
            set 
		    {
			    SetColumnValue("ContactID", value);
            }
        }
	      
        [XmlAttribute("TitleID")]
        [Bindable(true)]
        public int? TitleID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("TitleID");
		    }
            set 
		    {
			    SetColumnValue("TitleID", value);
            }
        }
	      
        [XmlAttribute("ExWorksDate")]
        [Bindable(true)]
        public DateTime? ExWorksDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ExWorksDate");
		    }
            set 
		    {
			    SetColumnValue("ExWorksDate", value);
            }
        }
	      
        [XmlAttribute("ContactName")]
        [Bindable(true)]
        public string ContactName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ContactName");
		    }
            set 
		    {
			    SetColumnValue("ContactName", value);
            }
        }
	      
        [XmlAttribute("CompanyName")]
        [Bindable(true)]
        public string CompanyName 
	    {
		    get
		    {
			    return GetColumnValue<string>("CompanyName");
		    }
            set 
		    {
			    SetColumnValue("CompanyName", value);
            }
        }
	      
        [XmlAttribute("Name")]
        [Bindable(true)]
        public string Name 
	    {
		    get
		    {
			    return GetColumnValue<string>("Name");
		    }
            set 
		    {
			    SetColumnValue("Name", value);
            }
        }
	      
        [XmlAttribute("OrderIx")]
        [Bindable(true)]
        public string OrderIx 
	    {
		    get
		    {
			    return GetColumnValue<string>("OrderIx");
		    }
            set 
		    {
			    SetColumnValue("OrderIx", value);
            }
        }
	      
        [XmlAttribute("EstPallets")]
        [Bindable(true)]
        public int? EstPallets 
	    {
		    get
		    {
			    return GetColumnValue<int?>("EstPallets");
		    }
            set 
		    {
			    SetColumnValue("EstPallets", value);
            }
        }
	      
        [XmlAttribute("EstWeight")]
        [Bindable(true)]
        public int? EstWeight 
	    {
		    get
		    {
			    return GetColumnValue<int?>("EstWeight");
		    }
            set 
		    {
			    SetColumnValue("EstWeight", value);
            }
        }
	      
        [XmlAttribute("EstVolume")]
        [Bindable(true)]
        public float? EstVolume 
	    {
		    get
		    {
			    return GetColumnValue<float?>("EstVolume");
		    }
            set 
		    {
			    SetColumnValue("EstVolume", value);
            }
        }
	      
        [XmlAttribute("CargoReady")]
        [Bindable(true)]
        public DateTime? CargoReady 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("CargoReady");
		    }
            set 
		    {
			    SetColumnValue("CargoReady", value);
            }
        }
	      
        [XmlAttribute("CargoUpdateId")]
        [Bindable(true)]
        public int? CargoUpdateId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CargoUpdateId");
		    }
            set 
		    {
			    SetColumnValue("CargoUpdateId", value);
            }
        }
	      
        [XmlAttribute("Dtupdated")]
        [Bindable(true)]
        public DateTime? Dtupdated 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("dtupdated");
		    }
            set 
		    {
			    SetColumnValue("dtupdated", value);
            }
        }
	      
        [XmlAttribute("PrinterID")]
        [Bindable(true)]
        public int? PrinterID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PrinterID");
		    }
            set 
		    {
			    SetColumnValue("PrinterID", value);
            }
        }
	      
        [XmlAttribute("Etw")]
        [Bindable(true)]
        public DateTime? Etw 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ETW");
		    }
            set 
		    {
			    SetColumnValue("ETW", value);
            }
        }
	      
        [XmlAttribute("PrinterName")]
        [Bindable(true)]
        public string PrinterName 
	    {
		    get
		    {
			    return GetColumnValue<string>("printer_name");
		    }
            set 
		    {
			    SetColumnValue("printer_name", value);
            }
        }
	      
        [XmlAttribute("WarehouseDate")]
        [Bindable(true)]
        public DateTime? WarehouseDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("WarehouseDate");
		    }
            set 
		    {
			    SetColumnValue("WarehouseDate", value);
            }
        }
	      
        [XmlAttribute("UnitPricePerCopy")]
        [Bindable(true)]
        public float? UnitPricePerCopy 
	    {
		    get
		    {
			    return GetColumnValue<float?>("UnitPricePerCopy");
		    }
            set 
		    {
			    SetColumnValue("UnitPricePerCopy", value);
            }
        }
	      
        [XmlAttribute("DocumentFolder")]
        [Bindable(true)]
        public int? DocumentFolder 
	    {
		    get
		    {
			    return GetColumnValue<int?>("document_folder");
		    }
            set 
		    {
			    SetColumnValue("document_folder", value);
            }
        }
	      
        [XmlAttribute("ConsigneeName")]
        [Bindable(true)]
        public string ConsigneeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsigneeName");
		    }
            set 
		    {
			    SetColumnValue("ConsigneeName", value);
            }
        }
	      
        [XmlAttribute("Impression")]
        [Bindable(true)]
        public string Impression 
	    {
		    get
		    {
			    return GetColumnValue<string>("Impression");
		    }
            set 
		    {
			    SetColumnValue("Impression", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string OrderID = @"OrderID";
            
            public static string CompanyID = @"CompanyID";
            
            public static string OrderControllerID = @"OrderControllerID";
            
            public static string OrderNumber = @"OrderNumber";
            
            public static string HouseBLNUmber = @"HouseBLNUmber";
            
            public static string CustomersRef = @"CustomersRef";
            
            public static string DateOrderCreated = @"DateOrderCreated";
            
            public static string Originport = @"originport";
            
            public static string Destport = @"destport";
            
            public static string Joined = @"Joined";
            
            public static string Ets = @"ETS";
            
            public static string Eta = @"ETA";
            
            public static string Destplace = @"destplace";
            
            public static string Originplace = @"originplace";
            
            public static string JobClosed = @"JobClosed";
            
            public static string ContainerNumber = @"ContainerNumber";
            
            public static string Title = @"Title";
            
            public static string Isbn = @"ISBN";
            
            public static string ContactID = @"ContactID";
            
            public static string TitleID = @"TitleID";
            
            public static string ExWorksDate = @"ExWorksDate";
            
            public static string ContactName = @"ContactName";
            
            public static string CompanyName = @"CompanyName";
            
            public static string Name = @"Name";
            
            public static string OrderIx = @"OrderIx";
            
            public static string EstPallets = @"EstPallets";
            
            public static string EstWeight = @"EstWeight";
            
            public static string EstVolume = @"EstVolume";
            
            public static string CargoReady = @"CargoReady";
            
            public static string CargoUpdateId = @"CargoUpdateId";
            
            public static string Dtupdated = @"dtupdated";
            
            public static string PrinterID = @"PrinterID";
            
            public static string Etw = @"ETW";
            
            public static string PrinterName = @"printer_name";
            
            public static string WarehouseDate = @"WarehouseDate";
            
            public static string UnitPricePerCopy = @"UnitPricePerCopy";
            
            public static string DocumentFolder = @"document_folder";
            
            public static string ConsigneeName = @"ConsigneeName";
            
            public static string Impression = @"Impression";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
