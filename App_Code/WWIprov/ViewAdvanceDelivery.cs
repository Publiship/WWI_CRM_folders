using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Logistics{
    /// <summary>
    /// Strongly-typed collection for the ViewAdvanceDelivery class.
    /// </summary>
    [Serializable]
    public partial class ViewAdvanceDeliveryCollection : ReadOnlyList<ViewAdvanceDelivery, ViewAdvanceDeliveryCollection>
    {        
        public ViewAdvanceDeliveryCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the view_advance_deliveries view.
    /// </summary>
    [Serializable]
    public partial class ViewAdvanceDelivery : ReadOnlyRecord<ViewAdvanceDelivery>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("view_advance_deliveries", TableType.View, DataService.GetInstance("WWIprov"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarPubAdvCartonID = new TableSchema.TableColumn(schema);
                colvarPubAdvCartonID.ColumnName = "PubAdvCartonID";
                colvarPubAdvCartonID.DataType = DbType.Int32;
                colvarPubAdvCartonID.MaxLength = 0;
                colvarPubAdvCartonID.AutoIncrement = false;
                colvarPubAdvCartonID.IsNullable = false;
                colvarPubAdvCartonID.IsPrimaryKey = false;
                colvarPubAdvCartonID.IsForeignKey = false;
                colvarPubAdvCartonID.IsReadOnly = false;
                
                schema.Columns.Add(colvarPubAdvCartonID);
                
                TableSchema.TableColumn colvarOrderID = new TableSchema.TableColumn(schema);
                colvarOrderID.ColumnName = "OrderID";
                colvarOrderID.DataType = DbType.Int32;
                colvarOrderID.MaxLength = 0;
                colvarOrderID.AutoIncrement = false;
                colvarOrderID.IsNullable = false;
                colvarOrderID.IsPrimaryKey = false;
                colvarOrderID.IsForeignKey = false;
                colvarOrderID.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderID);
                
                TableSchema.TableColumn colvarOrderNumber = new TableSchema.TableColumn(schema);
                colvarOrderNumber.ColumnName = "OrderNumber";
                colvarOrderNumber.DataType = DbType.String;
                colvarOrderNumber.MaxLength = 50;
                colvarOrderNumber.AutoIncrement = false;
                colvarOrderNumber.IsNullable = false;
                colvarOrderNumber.IsPrimaryKey = false;
                colvarOrderNumber.IsForeignKey = false;
                colvarOrderNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderNumber);
                
                TableSchema.TableColumn colvarDeliveryAddress = new TableSchema.TableColumn(schema);
                colvarDeliveryAddress.ColumnName = "DeliveryAddress";
                colvarDeliveryAddress.DataType = DbType.String;
                colvarDeliveryAddress.MaxLength = 200;
                colvarDeliveryAddress.AutoIncrement = false;
                colvarDeliveryAddress.IsNullable = true;
                colvarDeliveryAddress.IsPrimaryKey = false;
                colvarDeliveryAddress.IsForeignKey = false;
                colvarDeliveryAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeliveryAddress);
                
                TableSchema.TableColumn colvarDestinationCountry = new TableSchema.TableColumn(schema);
                colvarDestinationCountry.ColumnName = "DestinationCountry";
                colvarDestinationCountry.DataType = DbType.String;
                colvarDestinationCountry.MaxLength = 50;
                colvarDestinationCountry.AutoIncrement = false;
                colvarDestinationCountry.IsNullable = true;
                colvarDestinationCountry.IsPrimaryKey = false;
                colvarDestinationCountry.IsForeignKey = false;
                colvarDestinationCountry.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestinationCountry);
                
                TableSchema.TableColumn colvarCompanyName = new TableSchema.TableColumn(schema);
                colvarCompanyName.ColumnName = "CompanyName";
                colvarCompanyName.DataType = DbType.String;
                colvarCompanyName.MaxLength = 50;
                colvarCompanyName.AutoIncrement = false;
                colvarCompanyName.IsNullable = true;
                colvarCompanyName.IsPrimaryKey = false;
                colvarCompanyName.IsForeignKey = false;
                colvarCompanyName.IsReadOnly = false;
                
                schema.Columns.Add(colvarCompanyName);
                
                TableSchema.TableColumn colvarFao = new TableSchema.TableColumn(schema);
                colvarFao.ColumnName = "FAO";
                colvarFao.DataType = DbType.String;
                colvarFao.MaxLength = 100;
                colvarFao.AutoIncrement = false;
                colvarFao.IsNullable = true;
                colvarFao.IsPrimaryKey = false;
                colvarFao.IsForeignKey = false;
                colvarFao.IsReadOnly = false;
                
                schema.Columns.Add(colvarFao);
                
                TableSchema.TableColumn colvarPATitleID = new TableSchema.TableColumn(schema);
                colvarPATitleID.ColumnName = "PATitleID";
                colvarPATitleID.DataType = DbType.Int32;
                colvarPATitleID.MaxLength = 0;
                colvarPATitleID.AutoIncrement = false;
                colvarPATitleID.IsNullable = false;
                colvarPATitleID.IsPrimaryKey = false;
                colvarPATitleID.IsForeignKey = false;
                colvarPATitleID.IsReadOnly = false;
                
                schema.Columns.Add(colvarPATitleID);
                
                TableSchema.TableColumn colvarTitle = new TableSchema.TableColumn(schema);
                colvarTitle.ColumnName = "Title";
                colvarTitle.DataType = DbType.String;
                colvarTitle.MaxLength = 50;
                colvarTitle.AutoIncrement = false;
                colvarTitle.IsNullable = true;
                colvarTitle.IsPrimaryKey = false;
                colvarTitle.IsForeignKey = false;
                colvarTitle.IsReadOnly = false;
                
                schema.Columns.Add(colvarTitle);
                
                TableSchema.TableColumn colvarCartons = new TableSchema.TableColumn(schema);
                colvarCartons.ColumnName = "Cartons";
                colvarCartons.DataType = DbType.Int32;
                colvarCartons.MaxLength = 0;
                colvarCartons.AutoIncrement = false;
                colvarCartons.IsNullable = true;
                colvarCartons.IsPrimaryKey = false;
                colvarCartons.IsForeignKey = false;
                colvarCartons.IsReadOnly = false;
                
                schema.Columns.Add(colvarCartons);
                
                TableSchema.TableColumn colvarContactName = new TableSchema.TableColumn(schema);
                colvarContactName.ColumnName = "ContactName";
                colvarContactName.DataType = DbType.String;
                colvarContactName.MaxLength = 50;
                colvarContactName.AutoIncrement = false;
                colvarContactName.IsNullable = true;
                colvarContactName.IsPrimaryKey = false;
                colvarContactName.IsForeignKey = false;
                colvarContactName.IsReadOnly = false;
                
                schema.Columns.Add(colvarContactName);
                
                TableSchema.TableColumn colvarName = new TableSchema.TableColumn(schema);
                colvarName.ColumnName = "Name";
                colvarName.DataType = DbType.String;
                colvarName.MaxLength = 50;
                colvarName.AutoIncrement = false;
                colvarName.IsNullable = true;
                colvarName.IsPrimaryKey = false;
                colvarName.IsForeignKey = false;
                colvarName.IsReadOnly = false;
                
                schema.Columns.Add(colvarName);
                
                TableSchema.TableColumn colvarOfficeName = new TableSchema.TableColumn(schema);
                colvarOfficeName.ColumnName = "OfficeName";
                colvarOfficeName.DataType = DbType.String;
                colvarOfficeName.MaxLength = 50;
                colvarOfficeName.AutoIncrement = false;
                colvarOfficeName.IsNullable = true;
                colvarOfficeName.IsPrimaryKey = false;
                colvarOfficeName.IsForeignKey = false;
                colvarOfficeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarOfficeName);
                
                TableSchema.TableColumn colvarCompanyID = new TableSchema.TableColumn(schema);
                colvarCompanyID.ColumnName = "CompanyID";
                colvarCompanyID.DataType = DbType.Int32;
                colvarCompanyID.MaxLength = 0;
                colvarCompanyID.AutoIncrement = false;
                colvarCompanyID.IsNullable = true;
                colvarCompanyID.IsPrimaryKey = false;
                colvarCompanyID.IsForeignKey = false;
                colvarCompanyID.IsReadOnly = false;
                
                schema.Columns.Add(colvarCompanyID);
                
                TableSchema.TableColumn colvarPrinterID = new TableSchema.TableColumn(schema);
                colvarPrinterID.ColumnName = "PrinterID";
                colvarPrinterID.DataType = DbType.Int32;
                colvarPrinterID.MaxLength = 0;
                colvarPrinterID.AutoIncrement = false;
                colvarPrinterID.IsNullable = true;
                colvarPrinterID.IsPrimaryKey = false;
                colvarPrinterID.IsForeignKey = false;
                colvarPrinterID.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinterID);
                
                TableSchema.TableColumn colvarContactID = new TableSchema.TableColumn(schema);
                colvarContactID.ColumnName = "ContactID";
                colvarContactID.DataType = DbType.Int32;
                colvarContactID.MaxLength = 0;
                colvarContactID.AutoIncrement = false;
                colvarContactID.IsNullable = true;
                colvarContactID.IsPrimaryKey = false;
                colvarContactID.IsForeignKey = false;
                colvarContactID.IsReadOnly = false;
                
                schema.Columns.Add(colvarContactID);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["WWIprov"].AddSchema("view_advance_deliveries",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewAdvanceDelivery()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewAdvanceDelivery(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewAdvanceDelivery(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewAdvanceDelivery(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("PubAdvCartonID")]
        [Bindable(true)]
        public int PubAdvCartonID 
	    {
		    get
		    {
			    return GetColumnValue<int>("PubAdvCartonID");
		    }
            set 
		    {
			    SetColumnValue("PubAdvCartonID", value);
            }
        }
	      
        [XmlAttribute("OrderID")]
        [Bindable(true)]
        public int OrderID 
	    {
		    get
		    {
			    return GetColumnValue<int>("OrderID");
		    }
            set 
		    {
			    SetColumnValue("OrderID", value);
            }
        }
	      
        [XmlAttribute("OrderNumber")]
        [Bindable(true)]
        public string OrderNumber 
	    {
		    get
		    {
			    return GetColumnValue<string>("OrderNumber");
		    }
            set 
		    {
			    SetColumnValue("OrderNumber", value);
            }
        }
	      
        [XmlAttribute("DeliveryAddress")]
        [Bindable(true)]
        public string DeliveryAddress 
	    {
		    get
		    {
			    return GetColumnValue<string>("DeliveryAddress");
		    }
            set 
		    {
			    SetColumnValue("DeliveryAddress", value);
            }
        }
	      
        [XmlAttribute("DestinationCountry")]
        [Bindable(true)]
        public string DestinationCountry 
	    {
		    get
		    {
			    return GetColumnValue<string>("DestinationCountry");
		    }
            set 
		    {
			    SetColumnValue("DestinationCountry", value);
            }
        }
	      
        [XmlAttribute("CompanyName")]
        [Bindable(true)]
        public string CompanyName 
	    {
		    get
		    {
			    return GetColumnValue<string>("CompanyName");
		    }
            set 
		    {
			    SetColumnValue("CompanyName", value);
            }
        }
	      
        [XmlAttribute("Fao")]
        [Bindable(true)]
        public string Fao 
	    {
		    get
		    {
			    return GetColumnValue<string>("FAO");
		    }
            set 
		    {
			    SetColumnValue("FAO", value);
            }
        }
	      
        [XmlAttribute("PATitleID")]
        [Bindable(true)]
        public int PATitleID 
	    {
		    get
		    {
			    return GetColumnValue<int>("PATitleID");
		    }
            set 
		    {
			    SetColumnValue("PATitleID", value);
            }
        }
	      
        [XmlAttribute("Title")]
        [Bindable(true)]
        public string Title 
	    {
		    get
		    {
			    return GetColumnValue<string>("Title");
		    }
            set 
		    {
			    SetColumnValue("Title", value);
            }
        }
	      
        [XmlAttribute("Cartons")]
        [Bindable(true)]
        public int? Cartons 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Cartons");
		    }
            set 
		    {
			    SetColumnValue("Cartons", value);
            }
        }
	      
        [XmlAttribute("ContactName")]
        [Bindable(true)]
        public string ContactName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ContactName");
		    }
            set 
		    {
			    SetColumnValue("ContactName", value);
            }
        }
	      
        [XmlAttribute("Name")]
        [Bindable(true)]
        public string Name 
	    {
		    get
		    {
			    return GetColumnValue<string>("Name");
		    }
            set 
		    {
			    SetColumnValue("Name", value);
            }
        }
	      
        [XmlAttribute("OfficeName")]
        [Bindable(true)]
        public string OfficeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("OfficeName");
		    }
            set 
		    {
			    SetColumnValue("OfficeName", value);
            }
        }
	      
        [XmlAttribute("CompanyID")]
        [Bindable(true)]
        public int? CompanyID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CompanyID");
		    }
            set 
		    {
			    SetColumnValue("CompanyID", value);
            }
        }
	      
        [XmlAttribute("PrinterID")]
        [Bindable(true)]
        public int? PrinterID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PrinterID");
		    }
            set 
		    {
			    SetColumnValue("PrinterID", value);
            }
        }
	      
        [XmlAttribute("ContactID")]
        [Bindable(true)]
        public int? ContactID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ContactID");
		    }
            set 
		    {
			    SetColumnValue("ContactID", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string PubAdvCartonID = @"PubAdvCartonID";
            
            public static string OrderID = @"OrderID";
            
            public static string OrderNumber = @"OrderNumber";
            
            public static string DeliveryAddress = @"DeliveryAddress";
            
            public static string DestinationCountry = @"DestinationCountry";
            
            public static string CompanyName = @"CompanyName";
            
            public static string Fao = @"FAO";
            
            public static string PATitleID = @"PATitleID";
            
            public static string Title = @"Title";
            
            public static string Cartons = @"Cartons";
            
            public static string ContactName = @"ContactName";
            
            public static string Name = @"Name";
            
            public static string OfficeName = @"OfficeName";
            
            public static string CompanyID = @"CompanyID";
            
            public static string PrinterID = @"PrinterID";
            
            public static string ContactID = @"ContactID";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
