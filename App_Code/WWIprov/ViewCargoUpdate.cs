using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Logistics{
    /// <summary>
    /// Strongly-typed collection for the ViewCargoUpdate class.
    /// </summary>
    [Serializable]
    public partial class ViewCargoUpdateCollection : ReadOnlyList<ViewCargoUpdate, ViewCargoUpdateCollection>
    {        
        public ViewCargoUpdateCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the view_cargo_updates view.
    /// </summary>
    [Serializable]
    public partial class ViewCargoUpdate : ReadOnlyRecord<ViewCargoUpdate>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("view_cargo_updates", TableType.View, DataService.GetInstance("WWIprov"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarCargoupdateid = new TableSchema.TableColumn(schema);
                colvarCargoupdateid.ColumnName = "cargoupdateid";
                colvarCargoupdateid.DataType = DbType.Int32;
                colvarCargoupdateid.MaxLength = 0;
                colvarCargoupdateid.AutoIncrement = false;
                colvarCargoupdateid.IsNullable = false;
                colvarCargoupdateid.IsPrimaryKey = false;
                colvarCargoupdateid.IsForeignKey = false;
                colvarCargoupdateid.IsReadOnly = false;
                
                schema.Columns.Add(colvarCargoupdateid);
                
                TableSchema.TableColumn colvarOrderid = new TableSchema.TableColumn(schema);
                colvarOrderid.ColumnName = "orderid";
                colvarOrderid.DataType = DbType.Int32;
                colvarOrderid.MaxLength = 0;
                colvarOrderid.AutoIncrement = false;
                colvarOrderid.IsNullable = true;
                colvarOrderid.IsPrimaryKey = false;
                colvarOrderid.IsForeignKey = false;
                colvarOrderid.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderid);
                
                TableSchema.TableColumn colvarPreCargoready = new TableSchema.TableColumn(schema);
                colvarPreCargoready.ColumnName = "pre_cargoready";
                colvarPreCargoready.DataType = DbType.DateTime;
                colvarPreCargoready.MaxLength = 0;
                colvarPreCargoready.AutoIncrement = false;
                colvarPreCargoready.IsNullable = true;
                colvarPreCargoready.IsPrimaryKey = false;
                colvarPreCargoready.IsForeignKey = false;
                colvarPreCargoready.IsReadOnly = false;
                
                schema.Columns.Add(colvarPreCargoready);
                
                TableSchema.TableColumn colvarPreEstpallets = new TableSchema.TableColumn(schema);
                colvarPreEstpallets.ColumnName = "pre_estpallets";
                colvarPreEstpallets.DataType = DbType.Int32;
                colvarPreEstpallets.MaxLength = 0;
                colvarPreEstpallets.AutoIncrement = false;
                colvarPreEstpallets.IsNullable = true;
                colvarPreEstpallets.IsPrimaryKey = false;
                colvarPreEstpallets.IsForeignKey = false;
                colvarPreEstpallets.IsReadOnly = false;
                
                schema.Columns.Add(colvarPreEstpallets);
                
                TableSchema.TableColumn colvarPreEstweight = new TableSchema.TableColumn(schema);
                colvarPreEstweight.ColumnName = "pre_estweight";
                colvarPreEstweight.DataType = DbType.Int32;
                colvarPreEstweight.MaxLength = 0;
                colvarPreEstweight.AutoIncrement = false;
                colvarPreEstweight.IsNullable = true;
                colvarPreEstweight.IsPrimaryKey = false;
                colvarPreEstweight.IsForeignKey = false;
                colvarPreEstweight.IsReadOnly = false;
                
                schema.Columns.Add(colvarPreEstweight);
                
                TableSchema.TableColumn colvarPreEstvolume = new TableSchema.TableColumn(schema);
                colvarPreEstvolume.ColumnName = "pre_estvolume";
                colvarPreEstvolume.DataType = DbType.Single;
                colvarPreEstvolume.MaxLength = 0;
                colvarPreEstvolume.AutoIncrement = false;
                colvarPreEstvolume.IsNullable = true;
                colvarPreEstvolume.IsPrimaryKey = false;
                colvarPreEstvolume.IsForeignKey = false;
                colvarPreEstvolume.IsReadOnly = false;
                
                schema.Columns.Add(colvarPreEstvolume);
                
                TableSchema.TableColumn colvarPostCargoready = new TableSchema.TableColumn(schema);
                colvarPostCargoready.ColumnName = "post_cargoready";
                colvarPostCargoready.DataType = DbType.DateTime;
                colvarPostCargoready.MaxLength = 0;
                colvarPostCargoready.AutoIncrement = false;
                colvarPostCargoready.IsNullable = true;
                colvarPostCargoready.IsPrimaryKey = false;
                colvarPostCargoready.IsForeignKey = false;
                colvarPostCargoready.IsReadOnly = false;
                
                schema.Columns.Add(colvarPostCargoready);
                
                TableSchema.TableColumn colvarPostEstpallets = new TableSchema.TableColumn(schema);
                colvarPostEstpallets.ColumnName = "post_estpallets";
                colvarPostEstpallets.DataType = DbType.Int32;
                colvarPostEstpallets.MaxLength = 0;
                colvarPostEstpallets.AutoIncrement = false;
                colvarPostEstpallets.IsNullable = true;
                colvarPostEstpallets.IsPrimaryKey = false;
                colvarPostEstpallets.IsForeignKey = false;
                colvarPostEstpallets.IsReadOnly = false;
                
                schema.Columns.Add(colvarPostEstpallets);
                
                TableSchema.TableColumn colvarPostEstweight = new TableSchema.TableColumn(schema);
                colvarPostEstweight.ColumnName = "post_estweight";
                colvarPostEstweight.DataType = DbType.Int32;
                colvarPostEstweight.MaxLength = 0;
                colvarPostEstweight.AutoIncrement = false;
                colvarPostEstweight.IsNullable = true;
                colvarPostEstweight.IsPrimaryKey = false;
                colvarPostEstweight.IsForeignKey = false;
                colvarPostEstweight.IsReadOnly = false;
                
                schema.Columns.Add(colvarPostEstweight);
                
                TableSchema.TableColumn colvarPostEstvolume = new TableSchema.TableColumn(schema);
                colvarPostEstvolume.ColumnName = "post_estvolume";
                colvarPostEstvolume.DataType = DbType.Single;
                colvarPostEstvolume.MaxLength = 0;
                colvarPostEstvolume.AutoIncrement = false;
                colvarPostEstvolume.IsNullable = true;
                colvarPostEstvolume.IsPrimaryKey = false;
                colvarPostEstvolume.IsForeignKey = false;
                colvarPostEstvolume.IsReadOnly = false;
                
                schema.Columns.Add(colvarPostEstvolume);
                
                TableSchema.TableColumn colvarDtupdated = new TableSchema.TableColumn(schema);
                colvarDtupdated.ColumnName = "dtupdated";
                colvarDtupdated.DataType = DbType.DateTime;
                colvarDtupdated.MaxLength = 0;
                colvarDtupdated.AutoIncrement = false;
                colvarDtupdated.IsNullable = true;
                colvarDtupdated.IsPrimaryKey = false;
                colvarDtupdated.IsForeignKey = false;
                colvarDtupdated.IsReadOnly = false;
                
                schema.Columns.Add(colvarDtupdated);
                
                TableSchema.TableColumn colvarContactName = new TableSchema.TableColumn(schema);
                colvarContactName.ColumnName = "ContactName";
                colvarContactName.DataType = DbType.String;
                colvarContactName.MaxLength = 50;
                colvarContactName.AutoIncrement = false;
                colvarContactName.IsNullable = true;
                colvarContactName.IsPrimaryKey = false;
                colvarContactName.IsForeignKey = false;
                colvarContactName.IsReadOnly = false;
                
                schema.Columns.Add(colvarContactName);
                
                TableSchema.TableColumn colvarContactInitials = new TableSchema.TableColumn(schema);
                colvarContactInitials.ColumnName = "ContactInitials";
                colvarContactInitials.DataType = DbType.String;
                colvarContactInitials.MaxLength = 5;
                colvarContactInitials.AutoIncrement = false;
                colvarContactInitials.IsNullable = true;
                colvarContactInitials.IsPrimaryKey = false;
                colvarContactInitials.IsForeignKey = false;
                colvarContactInitials.IsReadOnly = false;
                
                schema.Columns.Add(colvarContactInitials);
                
                TableSchema.TableColumn colvarEMail = new TableSchema.TableColumn(schema);
                colvarEMail.ColumnName = "EMail";
                colvarEMail.DataType = DbType.String;
                colvarEMail.MaxLength = 50;
                colvarEMail.AutoIncrement = false;
                colvarEMail.IsNullable = true;
                colvarEMail.IsPrimaryKey = false;
                colvarEMail.IsForeignKey = false;
                colvarEMail.IsReadOnly = false;
                
                schema.Columns.Add(colvarEMail);
                
                TableSchema.TableColumn colvarCompanyName = new TableSchema.TableColumn(schema);
                colvarCompanyName.ColumnName = "CompanyName";
                colvarCompanyName.DataType = DbType.String;
                colvarCompanyName.MaxLength = 50;
                colvarCompanyName.AutoIncrement = false;
                colvarCompanyName.IsNullable = true;
                colvarCompanyName.IsPrimaryKey = false;
                colvarCompanyName.IsForeignKey = false;
                colvarCompanyName.IsReadOnly = false;
                
                schema.Columns.Add(colvarCompanyName);
                
                TableSchema.TableColumn colvarMainEmail = new TableSchema.TableColumn(schema);
                colvarMainEmail.ColumnName = "MainEmail";
                colvarMainEmail.DataType = DbType.String;
                colvarMainEmail.MaxLength = 50;
                colvarMainEmail.AutoIncrement = false;
                colvarMainEmail.IsNullable = true;
                colvarMainEmail.IsPrimaryKey = false;
                colvarMainEmail.IsForeignKey = false;
                colvarMainEmail.IsReadOnly = false;
                
                schema.Columns.Add(colvarMainEmail);
                
                TableSchema.TableColumn colvarOrderNumber = new TableSchema.TableColumn(schema);
                colvarOrderNumber.ColumnName = "OrderNumber";
                colvarOrderNumber.DataType = DbType.Int32;
                colvarOrderNumber.MaxLength = 0;
                colvarOrderNumber.AutoIncrement = false;
                colvarOrderNumber.IsNullable = true;
                colvarOrderNumber.IsPrimaryKey = false;
                colvarOrderNumber.IsForeignKey = false;
                colvarOrderNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderNumber);
                
                TableSchema.TableColumn colvarHouseBLNUmber = new TableSchema.TableColumn(schema);
                colvarHouseBLNUmber.ColumnName = "HouseBLNUmber";
                colvarHouseBLNUmber.DataType = DbType.String;
                colvarHouseBLNUmber.MaxLength = 50;
                colvarHouseBLNUmber.AutoIncrement = false;
                colvarHouseBLNUmber.IsNullable = true;
                colvarHouseBLNUmber.IsPrimaryKey = false;
                colvarHouseBLNUmber.IsForeignKey = false;
                colvarHouseBLNUmber.IsReadOnly = false;
                
                schema.Columns.Add(colvarHouseBLNUmber);
                
                TableSchema.TableColumn colvarCustomersRef = new TableSchema.TableColumn(schema);
                colvarCustomersRef.ColumnName = "CustomersRef";
                colvarCustomersRef.DataType = DbType.String;
                colvarCustomersRef.MaxLength = 20;
                colvarCustomersRef.AutoIncrement = false;
                colvarCustomersRef.IsNullable = true;
                colvarCustomersRef.IsPrimaryKey = false;
                colvarCustomersRef.IsForeignKey = false;
                colvarCustomersRef.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomersRef);
                
                TableSchema.TableColumn colvarTitle = new TableSchema.TableColumn(schema);
                colvarTitle.ColumnName = "Title";
                colvarTitle.DataType = DbType.String;
                colvarTitle.MaxLength = 100;
                colvarTitle.AutoIncrement = false;
                colvarTitle.IsNullable = true;
                colvarTitle.IsPrimaryKey = false;
                colvarTitle.IsForeignKey = false;
                colvarTitle.IsReadOnly = false;
                
                schema.Columns.Add(colvarTitle);
                
                TableSchema.TableColumn colvarIsbn = new TableSchema.TableColumn(schema);
                colvarIsbn.ColumnName = "ISBN";
                colvarIsbn.DataType = DbType.String;
                colvarIsbn.MaxLength = 50;
                colvarIsbn.AutoIncrement = false;
                colvarIsbn.IsNullable = true;
                colvarIsbn.IsPrimaryKey = false;
                colvarIsbn.IsForeignKey = false;
                colvarIsbn.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsbn);
                
                TableSchema.TableColumn colvarCompanyid = new TableSchema.TableColumn(schema);
                colvarCompanyid.ColumnName = "companyid";
                colvarCompanyid.DataType = DbType.Int32;
                colvarCompanyid.MaxLength = 0;
                colvarCompanyid.AutoIncrement = false;
                colvarCompanyid.IsNullable = true;
                colvarCompanyid.IsPrimaryKey = false;
                colvarCompanyid.IsForeignKey = false;
                colvarCompanyid.IsReadOnly = false;
                
                schema.Columns.Add(colvarCompanyid);
                
                TableSchema.TableColumn colvarUserid = new TableSchema.TableColumn(schema);
                colvarUserid.ColumnName = "userid";
                colvarUserid.DataType = DbType.Int32;
                colvarUserid.MaxLength = 0;
                colvarUserid.AutoIncrement = false;
                colvarUserid.IsNullable = true;
                colvarUserid.IsPrimaryKey = false;
                colvarUserid.IsForeignKey = false;
                colvarUserid.IsReadOnly = false;
                
                schema.Columns.Add(colvarUserid);
                
                TableSchema.TableColumn colvarUpdguid = new TableSchema.TableColumn(schema);
                colvarUpdguid.ColumnName = "updguid";
                colvarUpdguid.DataType = DbType.AnsiString;
                colvarUpdguid.MaxLength = 30;
                colvarUpdguid.AutoIncrement = false;
                colvarUpdguid.IsNullable = true;
                colvarUpdguid.IsPrimaryKey = false;
                colvarUpdguid.IsForeignKey = false;
                colvarUpdguid.IsReadOnly = false;
                
                schema.Columns.Add(colvarUpdguid);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["WWIprov"].AddSchema("view_cargo_updates",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewCargoUpdate()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewCargoUpdate(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewCargoUpdate(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewCargoUpdate(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("Cargoupdateid")]
        [Bindable(true)]
        public int Cargoupdateid 
	    {
		    get
		    {
			    return GetColumnValue<int>("cargoupdateid");
		    }
            set 
		    {
			    SetColumnValue("cargoupdateid", value);
            }
        }
	      
        [XmlAttribute("Orderid")]
        [Bindable(true)]
        public int? Orderid 
	    {
		    get
		    {
			    return GetColumnValue<int?>("orderid");
		    }
            set 
		    {
			    SetColumnValue("orderid", value);
            }
        }
	      
        [XmlAttribute("PreCargoready")]
        [Bindable(true)]
        public DateTime? PreCargoready 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("pre_cargoready");
		    }
            set 
		    {
			    SetColumnValue("pre_cargoready", value);
            }
        }
	      
        [XmlAttribute("PreEstpallets")]
        [Bindable(true)]
        public int? PreEstpallets 
	    {
		    get
		    {
			    return GetColumnValue<int?>("pre_estpallets");
		    }
            set 
		    {
			    SetColumnValue("pre_estpallets", value);
            }
        }
	      
        [XmlAttribute("PreEstweight")]
        [Bindable(true)]
        public int? PreEstweight 
	    {
		    get
		    {
			    return GetColumnValue<int?>("pre_estweight");
		    }
            set 
		    {
			    SetColumnValue("pre_estweight", value);
            }
        }
	      
        [XmlAttribute("PreEstvolume")]
        [Bindable(true)]
        public float? PreEstvolume 
	    {
		    get
		    {
			    return GetColumnValue<float?>("pre_estvolume");
		    }
            set 
		    {
			    SetColumnValue("pre_estvolume", value);
            }
        }
	      
        [XmlAttribute("PostCargoready")]
        [Bindable(true)]
        public DateTime? PostCargoready 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("post_cargoready");
		    }
            set 
		    {
			    SetColumnValue("post_cargoready", value);
            }
        }
	      
        [XmlAttribute("PostEstpallets")]
        [Bindable(true)]
        public int? PostEstpallets 
	    {
		    get
		    {
			    return GetColumnValue<int?>("post_estpallets");
		    }
            set 
		    {
			    SetColumnValue("post_estpallets", value);
            }
        }
	      
        [XmlAttribute("PostEstweight")]
        [Bindable(true)]
        public int? PostEstweight 
	    {
		    get
		    {
			    return GetColumnValue<int?>("post_estweight");
		    }
            set 
		    {
			    SetColumnValue("post_estweight", value);
            }
        }
	      
        [XmlAttribute("PostEstvolume")]
        [Bindable(true)]
        public float? PostEstvolume 
	    {
		    get
		    {
			    return GetColumnValue<float?>("post_estvolume");
		    }
            set 
		    {
			    SetColumnValue("post_estvolume", value);
            }
        }
	      
        [XmlAttribute("Dtupdated")]
        [Bindable(true)]
        public DateTime? Dtupdated 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("dtupdated");
		    }
            set 
		    {
			    SetColumnValue("dtupdated", value);
            }
        }
	      
        [XmlAttribute("ContactName")]
        [Bindable(true)]
        public string ContactName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ContactName");
		    }
            set 
		    {
			    SetColumnValue("ContactName", value);
            }
        }
	      
        [XmlAttribute("ContactInitials")]
        [Bindable(true)]
        public string ContactInitials 
	    {
		    get
		    {
			    return GetColumnValue<string>("ContactInitials");
		    }
            set 
		    {
			    SetColumnValue("ContactInitials", value);
            }
        }
	      
        [XmlAttribute("EMail")]
        [Bindable(true)]
        public string EMail 
	    {
		    get
		    {
			    return GetColumnValue<string>("EMail");
		    }
            set 
		    {
			    SetColumnValue("EMail", value);
            }
        }
	      
        [XmlAttribute("CompanyName")]
        [Bindable(true)]
        public string CompanyName 
	    {
		    get
		    {
			    return GetColumnValue<string>("CompanyName");
		    }
            set 
		    {
			    SetColumnValue("CompanyName", value);
            }
        }
	      
        [XmlAttribute("MainEmail")]
        [Bindable(true)]
        public string MainEmail 
	    {
		    get
		    {
			    return GetColumnValue<string>("MainEmail");
		    }
            set 
		    {
			    SetColumnValue("MainEmail", value);
            }
        }
	      
        [XmlAttribute("OrderNumber")]
        [Bindable(true)]
        public int? OrderNumber 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OrderNumber");
		    }
            set 
		    {
			    SetColumnValue("OrderNumber", value);
            }
        }
	      
        [XmlAttribute("HouseBLNUmber")]
        [Bindable(true)]
        public string HouseBLNUmber 
	    {
		    get
		    {
			    return GetColumnValue<string>("HouseBLNUmber");
		    }
            set 
		    {
			    SetColumnValue("HouseBLNUmber", value);
            }
        }
	      
        [XmlAttribute("CustomersRef")]
        [Bindable(true)]
        public string CustomersRef 
	    {
		    get
		    {
			    return GetColumnValue<string>("CustomersRef");
		    }
            set 
		    {
			    SetColumnValue("CustomersRef", value);
            }
        }
	      
        [XmlAttribute("Title")]
        [Bindable(true)]
        public string Title 
	    {
		    get
		    {
			    return GetColumnValue<string>("Title");
		    }
            set 
		    {
			    SetColumnValue("Title", value);
            }
        }
	      
        [XmlAttribute("Isbn")]
        [Bindable(true)]
        public string Isbn 
	    {
		    get
		    {
			    return GetColumnValue<string>("ISBN");
		    }
            set 
		    {
			    SetColumnValue("ISBN", value);
            }
        }
	      
        [XmlAttribute("Companyid")]
        [Bindable(true)]
        public int? Companyid 
	    {
		    get
		    {
			    return GetColumnValue<int?>("companyid");
		    }
            set 
		    {
			    SetColumnValue("companyid", value);
            }
        }
	      
        [XmlAttribute("Userid")]
        [Bindable(true)]
        public int? Userid 
	    {
		    get
		    {
			    return GetColumnValue<int?>("userid");
		    }
            set 
		    {
			    SetColumnValue("userid", value);
            }
        }
	      
        [XmlAttribute("Updguid")]
        [Bindable(true)]
        public string Updguid 
	    {
		    get
		    {
			    return GetColumnValue<string>("updguid");
		    }
            set 
		    {
			    SetColumnValue("updguid", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string Cargoupdateid = @"cargoupdateid";
            
            public static string Orderid = @"orderid";
            
            public static string PreCargoready = @"pre_cargoready";
            
            public static string PreEstpallets = @"pre_estpallets";
            
            public static string PreEstweight = @"pre_estweight";
            
            public static string PreEstvolume = @"pre_estvolume";
            
            public static string PostCargoready = @"post_cargoready";
            
            public static string PostEstpallets = @"post_estpallets";
            
            public static string PostEstweight = @"post_estweight";
            
            public static string PostEstvolume = @"post_estvolume";
            
            public static string Dtupdated = @"dtupdated";
            
            public static string ContactName = @"ContactName";
            
            public static string ContactInitials = @"ContactInitials";
            
            public static string EMail = @"EMail";
            
            public static string CompanyName = @"CompanyName";
            
            public static string MainEmail = @"MainEmail";
            
            public static string OrderNumber = @"OrderNumber";
            
            public static string HouseBLNUmber = @"HouseBLNUmber";
            
            public static string CustomersRef = @"CustomersRef";
            
            public static string Title = @"Title";
            
            public static string Isbn = @"ISBN";
            
            public static string Companyid = @"companyid";
            
            public static string Userid = @"userid";
            
            public static string Updguid = @"updguid";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
