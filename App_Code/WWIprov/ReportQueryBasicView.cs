using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Logistics{
    /// <summary>
    /// Strongly-typed collection for the ReportQueryBasicView class.
    /// </summary>
    [Serializable]
    public partial class ReportQueryBasicViewCollection : ReadOnlyList<ReportQueryBasicView, ReportQueryBasicViewCollection>
    {        
        public ReportQueryBasicViewCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the ReportQueryBasicView view.
    /// </summary>
    [Serializable]
    public partial class ReportQueryBasicView : ReadOnlyRecord<ReportQueryBasicView>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("ReportQueryBasicView", TableType.View, DataService.GetInstance("WWIprov"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarOrderNumber = new TableSchema.TableColumn(schema);
                colvarOrderNumber.ColumnName = "OrderNumber";
                colvarOrderNumber.DataType = DbType.Int32;
                colvarOrderNumber.MaxLength = 0;
                colvarOrderNumber.AutoIncrement = false;
                colvarOrderNumber.IsNullable = true;
                colvarOrderNumber.IsPrimaryKey = false;
                colvarOrderNumber.IsForeignKey = false;
                colvarOrderNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderNumber);
                
                TableSchema.TableColumn colvarCompanyID = new TableSchema.TableColumn(schema);
                colvarCompanyID.ColumnName = "CompanyID";
                colvarCompanyID.DataType = DbType.Int32;
                colvarCompanyID.MaxLength = 0;
                colvarCompanyID.AutoIncrement = false;
                colvarCompanyID.IsNullable = true;
                colvarCompanyID.IsPrimaryKey = false;
                colvarCompanyID.IsForeignKey = false;
                colvarCompanyID.IsReadOnly = false;
                
                schema.Columns.Add(colvarCompanyID);
                
                TableSchema.TableColumn colvarClient = new TableSchema.TableColumn(schema);
                colvarClient.ColumnName = "Client";
                colvarClient.DataType = DbType.String;
                colvarClient.MaxLength = 50;
                colvarClient.AutoIncrement = false;
                colvarClient.IsNullable = true;
                colvarClient.IsPrimaryKey = false;
                colvarClient.IsForeignKey = false;
                colvarClient.IsReadOnly = false;
                
                schema.Columns.Add(colvarClient);
                
                TableSchema.TableColumn colvarConsignee = new TableSchema.TableColumn(schema);
                colvarConsignee.ColumnName = "Consignee";
                colvarConsignee.DataType = DbType.String;
                colvarConsignee.MaxLength = 50;
                colvarConsignee.AutoIncrement = false;
                colvarConsignee.IsNullable = true;
                colvarConsignee.IsPrimaryKey = false;
                colvarConsignee.IsForeignKey = false;
                colvarConsignee.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsignee);
                
                TableSchema.TableColumn colvarPrinter = new TableSchema.TableColumn(schema);
                colvarPrinter.ColumnName = "Printer";
                colvarPrinter.DataType = DbType.String;
                colvarPrinter.MaxLength = 50;
                colvarPrinter.AutoIncrement = false;
                colvarPrinter.IsNullable = true;
                colvarPrinter.IsPrimaryKey = false;
                colvarPrinter.IsForeignKey = false;
                colvarPrinter.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinter);
                
                TableSchema.TableColumn colvarExWorksDate = new TableSchema.TableColumn(schema);
                colvarExWorksDate.ColumnName = "ExWorksDate";
                colvarExWorksDate.DataType = DbType.DateTime;
                colvarExWorksDate.MaxLength = 0;
                colvarExWorksDate.AutoIncrement = false;
                colvarExWorksDate.IsNullable = true;
                colvarExWorksDate.IsPrimaryKey = false;
                colvarExWorksDate.IsForeignKey = false;
                colvarExWorksDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarExWorksDate);
                
                TableSchema.TableColumn colvarContactID = new TableSchema.TableColumn(schema);
                colvarContactID.ColumnName = "ContactID";
                colvarContactID.DataType = DbType.Int32;
                colvarContactID.MaxLength = 0;
                colvarContactID.AutoIncrement = false;
                colvarContactID.IsNullable = true;
                colvarContactID.IsPrimaryKey = false;
                colvarContactID.IsForeignKey = false;
                colvarContactID.IsReadOnly = false;
                
                schema.Columns.Add(colvarContactID);
                
                TableSchema.TableColumn colvarContactName = new TableSchema.TableColumn(schema);
                colvarContactName.ColumnName = "ContactName";
                colvarContactName.DataType = DbType.String;
                colvarContactName.MaxLength = 50;
                colvarContactName.AutoIncrement = false;
                colvarContactName.IsNullable = true;
                colvarContactName.IsPrimaryKey = false;
                colvarContactName.IsForeignKey = false;
                colvarContactName.IsReadOnly = false;
                
                schema.Columns.Add(colvarContactName);
                
                TableSchema.TableColumn colvarCustomersRef = new TableSchema.TableColumn(schema);
                colvarCustomersRef.ColumnName = "CustomersRef";
                colvarCustomersRef.DataType = DbType.String;
                colvarCustomersRef.MaxLength = 20;
                colvarCustomersRef.AutoIncrement = false;
                colvarCustomersRef.IsNullable = true;
                colvarCustomersRef.IsPrimaryKey = false;
                colvarCustomersRef.IsForeignKey = false;
                colvarCustomersRef.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomersRef);
                
                TableSchema.TableColumn colvarEts = new TableSchema.TableColumn(schema);
                colvarEts.ColumnName = "ETS";
                colvarEts.DataType = DbType.DateTime;
                colvarEts.MaxLength = 0;
                colvarEts.AutoIncrement = false;
                colvarEts.IsNullable = true;
                colvarEts.IsPrimaryKey = false;
                colvarEts.IsForeignKey = false;
                colvarEts.IsReadOnly = false;
                
                schema.Columns.Add(colvarEts);
                
                TableSchema.TableColumn colvarEta = new TableSchema.TableColumn(schema);
                colvarEta.ColumnName = "ETA";
                colvarEta.DataType = DbType.DateTime;
                colvarEta.MaxLength = 0;
                colvarEta.AutoIncrement = false;
                colvarEta.IsNullable = true;
                colvarEta.IsPrimaryKey = false;
                colvarEta.IsForeignKey = false;
                colvarEta.IsReadOnly = false;
                
                schema.Columns.Add(colvarEta);
                
                TableSchema.TableColumn colvarField1 = new TableSchema.TableColumn(schema);
                colvarField1.ColumnName = "Field1";
                colvarField1.DataType = DbType.String;
                colvarField1.MaxLength = 50;
                colvarField1.AutoIncrement = false;
                colvarField1.IsNullable = true;
                colvarField1.IsPrimaryKey = false;
                colvarField1.IsForeignKey = false;
                colvarField1.IsReadOnly = false;
                
                schema.Columns.Add(colvarField1);
                
                TableSchema.TableColumn colvarShippedOnBoard = new TableSchema.TableColumn(schema);
                colvarShippedOnBoard.ColumnName = "ShippedOnBoard";
                colvarShippedOnBoard.DataType = DbType.Boolean;
                colvarShippedOnBoard.MaxLength = 0;
                colvarShippedOnBoard.AutoIncrement = false;
                colvarShippedOnBoard.IsNullable = false;
                colvarShippedOnBoard.IsPrimaryKey = false;
                colvarShippedOnBoard.IsForeignKey = false;
                colvarShippedOnBoard.IsReadOnly = false;
                
                schema.Columns.Add(colvarShippedOnBoard);
                
                TableSchema.TableColumn colvarRemarksToCustomer = new TableSchema.TableColumn(schema);
                colvarRemarksToCustomer.ColumnName = "RemarksToCustomer";
                colvarRemarksToCustomer.DataType = DbType.String;
                colvarRemarksToCustomer.MaxLength = 1073741823;
                colvarRemarksToCustomer.AutoIncrement = false;
                colvarRemarksToCustomer.IsNullable = true;
                colvarRemarksToCustomer.IsPrimaryKey = false;
                colvarRemarksToCustomer.IsForeignKey = false;
                colvarRemarksToCustomer.IsReadOnly = false;
                
                schema.Columns.Add(colvarRemarksToCustomer);
                
                TableSchema.TableColumn colvarJobClosed = new TableSchema.TableColumn(schema);
                colvarJobClosed.ColumnName = "JobClosed";
                colvarJobClosed.DataType = DbType.Boolean;
                colvarJobClosed.MaxLength = 0;
                colvarJobClosed.AutoIncrement = false;
                colvarJobClosed.IsNullable = false;
                colvarJobClosed.IsPrimaryKey = false;
                colvarJobClosed.IsForeignKey = false;
                colvarJobClosed.IsReadOnly = false;
                
                schema.Columns.Add(colvarJobClosed);
                
                TableSchema.TableColumn colvarDestinationPort = new TableSchema.TableColumn(schema);
                colvarDestinationPort.ColumnName = "DestinationPort";
                colvarDestinationPort.DataType = DbType.String;
                colvarDestinationPort.MaxLength = 30;
                colvarDestinationPort.AutoIncrement = false;
                colvarDestinationPort.IsNullable = true;
                colvarDestinationPort.IsPrimaryKey = false;
                colvarDestinationPort.IsForeignKey = false;
                colvarDestinationPort.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestinationPort);
                
                TableSchema.TableColumn colvarOriginPort = new TableSchema.TableColumn(schema);
                colvarOriginPort.ColumnName = "OriginPort";
                colvarOriginPort.DataType = DbType.String;
                colvarOriginPort.MaxLength = 30;
                colvarOriginPort.AutoIncrement = false;
                colvarOriginPort.IsNullable = true;
                colvarOriginPort.IsPrimaryKey = false;
                colvarOriginPort.IsForeignKey = false;
                colvarOriginPort.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginPort);
                
                TableSchema.TableColumn colvarFinalDestination = new TableSchema.TableColumn(schema);
                colvarFinalDestination.ColumnName = "FinalDestination";
                colvarFinalDestination.DataType = DbType.String;
                colvarFinalDestination.MaxLength = 30;
                colvarFinalDestination.AutoIncrement = false;
                colvarFinalDestination.IsNullable = true;
                colvarFinalDestination.IsPrimaryKey = false;
                colvarFinalDestination.IsForeignKey = false;
                colvarFinalDestination.IsReadOnly = false;
                
                schema.Columns.Add(colvarFinalDestination);
                
                TableSchema.TableColumn colvarVesselName = new TableSchema.TableColumn(schema);
                colvarVesselName.ColumnName = "VesselName";
                colvarVesselName.DataType = DbType.String;
                colvarVesselName.MaxLength = 50;
                colvarVesselName.AutoIncrement = false;
                colvarVesselName.IsNullable = true;
                colvarVesselName.IsPrimaryKey = false;
                colvarVesselName.IsForeignKey = false;
                colvarVesselName.IsReadOnly = false;
                
                schema.Columns.Add(colvarVesselName);
                
                TableSchema.TableColumn colvarDeliveryTo = new TableSchema.TableColumn(schema);
                colvarDeliveryTo.ColumnName = "DeliveryTo";
                colvarDeliveryTo.DataType = DbType.String;
                colvarDeliveryTo.MaxLength = 50;
                colvarDeliveryTo.AutoIncrement = false;
                colvarDeliveryTo.IsNullable = true;
                colvarDeliveryTo.IsPrimaryKey = false;
                colvarDeliveryTo.IsForeignKey = false;
                colvarDeliveryTo.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeliveryTo);
                
                TableSchema.TableColumn colvarCurrentStatusDate = new TableSchema.TableColumn(schema);
                colvarCurrentStatusDate.ColumnName = "CurrentStatusDate";
                colvarCurrentStatusDate.DataType = DbType.DateTime;
                colvarCurrentStatusDate.MaxLength = 0;
                colvarCurrentStatusDate.AutoIncrement = false;
                colvarCurrentStatusDate.IsNullable = true;
                colvarCurrentStatusDate.IsPrimaryKey = false;
                colvarCurrentStatusDate.IsForeignKey = false;
                colvarCurrentStatusDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarCurrentStatusDate);
                
                TableSchema.TableColumn colvarVesselLastUpdated = new TableSchema.TableColumn(schema);
                colvarVesselLastUpdated.ColumnName = "VesselLastUpdated";
                colvarVesselLastUpdated.DataType = DbType.DateTime;
                colvarVesselLastUpdated.MaxLength = 0;
                colvarVesselLastUpdated.AutoIncrement = false;
                colvarVesselLastUpdated.IsNullable = true;
                colvarVesselLastUpdated.IsPrimaryKey = false;
                colvarVesselLastUpdated.IsForeignKey = false;
                colvarVesselLastUpdated.IsReadOnly = false;
                
                schema.Columns.Add(colvarVesselLastUpdated);
                
                TableSchema.TableColumn colvarEWDLastUpdated = new TableSchema.TableColumn(schema);
                colvarEWDLastUpdated.ColumnName = "EWDLastUpdated";
                colvarEWDLastUpdated.DataType = DbType.DateTime;
                colvarEWDLastUpdated.MaxLength = 0;
                colvarEWDLastUpdated.AutoIncrement = false;
                colvarEWDLastUpdated.IsNullable = true;
                colvarEWDLastUpdated.IsPrimaryKey = false;
                colvarEWDLastUpdated.IsForeignKey = false;
                colvarEWDLastUpdated.IsReadOnly = false;
                
                schema.Columns.Add(colvarEWDLastUpdated);
                
                TableSchema.TableColumn colvarEXPR1 = new TableSchema.TableColumn(schema);
                colvarEXPR1.ColumnName = "EXPR1";
                colvarEXPR1.DataType = DbType.DateTime;
                colvarEXPR1.MaxLength = 0;
                colvarEXPR1.AutoIncrement = false;
                colvarEXPR1.IsNullable = true;
                colvarEXPR1.IsPrimaryKey = false;
                colvarEXPR1.IsForeignKey = false;
                colvarEXPR1.IsReadOnly = false;
                
                schema.Columns.Add(colvarEXPR1);
                
                TableSchema.TableColumn colvarEXPR2 = new TableSchema.TableColumn(schema);
                colvarEXPR2.ColumnName = "EXPR2";
                colvarEXPR2.DataType = DbType.DateTime;
                colvarEXPR2.MaxLength = 0;
                colvarEXPR2.AutoIncrement = false;
                colvarEXPR2.IsNullable = true;
                colvarEXPR2.IsPrimaryKey = false;
                colvarEXPR2.IsForeignKey = false;
                colvarEXPR2.IsReadOnly = false;
                
                schema.Columns.Add(colvarEXPR2);
                
                TableSchema.TableColumn colvarBookingReceived = new TableSchema.TableColumn(schema);
                colvarBookingReceived.ColumnName = "BookingReceived";
                colvarBookingReceived.DataType = DbType.DateTime;
                colvarBookingReceived.MaxLength = 0;
                colvarBookingReceived.AutoIncrement = false;
                colvarBookingReceived.IsNullable = true;
                colvarBookingReceived.IsPrimaryKey = false;
                colvarBookingReceived.IsForeignKey = false;
                colvarBookingReceived.IsReadOnly = false;
                
                schema.Columns.Add(colvarBookingReceived);
                
                TableSchema.TableColumn colvarTitle = new TableSchema.TableColumn(schema);
                colvarTitle.ColumnName = "Title";
                colvarTitle.DataType = DbType.String;
                colvarTitle.MaxLength = 100;
                colvarTitle.AutoIncrement = false;
                colvarTitle.IsNullable = true;
                colvarTitle.IsPrimaryKey = false;
                colvarTitle.IsForeignKey = false;
                colvarTitle.IsReadOnly = false;
                
                schema.Columns.Add(colvarTitle);
                
                TableSchema.TableColumn colvarIsbn = new TableSchema.TableColumn(schema);
                colvarIsbn.ColumnName = "ISBN";
                colvarIsbn.DataType = DbType.String;
                colvarIsbn.MaxLength = 50;
                colvarIsbn.AutoIncrement = false;
                colvarIsbn.IsNullable = true;
                colvarIsbn.IsPrimaryKey = false;
                colvarIsbn.IsForeignKey = false;
                colvarIsbn.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsbn);
                
                TableSchema.TableColumn colvarCopies = new TableSchema.TableColumn(schema);
                colvarCopies.ColumnName = "Copies";
                colvarCopies.DataType = DbType.Int32;
                colvarCopies.MaxLength = 0;
                colvarCopies.AutoIncrement = false;
                colvarCopies.IsNullable = true;
                colvarCopies.IsPrimaryKey = false;
                colvarCopies.IsForeignKey = false;
                colvarCopies.IsReadOnly = false;
                
                schema.Columns.Add(colvarCopies);
                
                TableSchema.TableColumn colvarPONumber = new TableSchema.TableColumn(schema);
                colvarPONumber.ColumnName = "PONumber";
                colvarPONumber.DataType = DbType.String;
                colvarPONumber.MaxLength = 50;
                colvarPONumber.AutoIncrement = false;
                colvarPONumber.IsNullable = true;
                colvarPONumber.IsPrimaryKey = false;
                colvarPONumber.IsForeignKey = false;
                colvarPONumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarPONumber);
                
                TableSchema.TableColumn colvarDeliveryID = new TableSchema.TableColumn(schema);
                colvarDeliveryID.ColumnName = "DeliveryID";
                colvarDeliveryID.DataType = DbType.Int32;
                colvarDeliveryID.MaxLength = 0;
                colvarDeliveryID.AutoIncrement = false;
                colvarDeliveryID.IsNullable = true;
                colvarDeliveryID.IsPrimaryKey = false;
                colvarDeliveryID.IsForeignKey = false;
                colvarDeliveryID.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeliveryID);
                
                TableSchema.TableColumn colvarTitleID = new TableSchema.TableColumn(schema);
                colvarTitleID.ColumnName = "TitleID";
                colvarTitleID.DataType = DbType.Int32;
                colvarTitleID.MaxLength = 0;
                colvarTitleID.AutoIncrement = false;
                colvarTitleID.IsNullable = true;
                colvarTitleID.IsPrimaryKey = false;
                colvarTitleID.IsForeignKey = false;
                colvarTitleID.IsReadOnly = false;
                
                schema.Columns.Add(colvarTitleID);
                
                TableSchema.TableColumn colvarDeliveryCopies = new TableSchema.TableColumn(schema);
                colvarDeliveryCopies.ColumnName = "DeliveryCopies";
                colvarDeliveryCopies.DataType = DbType.Int32;
                colvarDeliveryCopies.MaxLength = 0;
                colvarDeliveryCopies.AutoIncrement = false;
                colvarDeliveryCopies.IsNullable = true;
                colvarDeliveryCopies.IsPrimaryKey = false;
                colvarDeliveryCopies.IsForeignKey = false;
                colvarDeliveryCopies.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeliveryCopies);
                
                TableSchema.TableColumn colvarPearsonDivCode = new TableSchema.TableColumn(schema);
                colvarPearsonDivCode.ColumnName = "PearsonDivCode";
                colvarPearsonDivCode.DataType = DbType.String;
                colvarPearsonDivCode.MaxLength = 50;
                colvarPearsonDivCode.AutoIncrement = false;
                colvarPearsonDivCode.IsNullable = true;
                colvarPearsonDivCode.IsPrimaryKey = false;
                colvarPearsonDivCode.IsForeignKey = false;
                colvarPearsonDivCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPearsonDivCode);
                
                TableSchema.TableColumn colvarImpression = new TableSchema.TableColumn(schema);
                colvarImpression.ColumnName = "Impression";
                colvarImpression.DataType = DbType.String;
                colvarImpression.MaxLength = 50;
                colvarImpression.AutoIncrement = false;
                colvarImpression.IsNullable = true;
                colvarImpression.IsPrimaryKey = false;
                colvarImpression.IsForeignKey = false;
                colvarImpression.IsReadOnly = false;
                
                schema.Columns.Add(colvarImpression);
                
                TableSchema.TableColumn colvarSSRNo = new TableSchema.TableColumn(schema);
                colvarSSRNo.ColumnName = "SSRNo";
                colvarSSRNo.DataType = DbType.String;
                colvarSSRNo.MaxLength = 50;
                colvarSSRNo.AutoIncrement = false;
                colvarSSRNo.IsNullable = true;
                colvarSSRNo.IsPrimaryKey = false;
                colvarSSRNo.IsForeignKey = false;
                colvarSSRNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarSSRNo);
                
                TableSchema.TableColumn colvarSSRDate = new TableSchema.TableColumn(schema);
                colvarSSRDate.ColumnName = "SSRDate";
                colvarSSRDate.DataType = DbType.DateTime;
                colvarSSRDate.MaxLength = 0;
                colvarSSRDate.AutoIncrement = false;
                colvarSSRDate.IsNullable = true;
                colvarSSRDate.IsPrimaryKey = false;
                colvarSSRDate.IsForeignKey = false;
                colvarSSRDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarSSRDate);
                
                TableSchema.TableColumn colvarOtherRef = new TableSchema.TableColumn(schema);
                colvarOtherRef.ColumnName = "OtherRef";
                colvarOtherRef.DataType = DbType.String;
                colvarOtherRef.MaxLength = 50;
                colvarOtherRef.AutoIncrement = false;
                colvarOtherRef.IsNullable = true;
                colvarOtherRef.IsPrimaryKey = false;
                colvarOtherRef.IsForeignKey = false;
                colvarOtherRef.IsReadOnly = false;
                
                schema.Columns.Add(colvarOtherRef);
                
                TableSchema.TableColumn colvarTotalValue = new TableSchema.TableColumn(schema);
                colvarTotalValue.ColumnName = "TotalValue";
                colvarTotalValue.DataType = DbType.Decimal;
                colvarTotalValue.MaxLength = 0;
                colvarTotalValue.AutoIncrement = false;
                colvarTotalValue.IsNullable = true;
                colvarTotalValue.IsPrimaryKey = false;
                colvarTotalValue.IsForeignKey = false;
                colvarTotalValue.IsReadOnly = false;
                
                schema.Columns.Add(colvarTotalValue);
                
                TableSchema.TableColumn colvarUnitPricePerCopy = new TableSchema.TableColumn(schema);
                colvarUnitPricePerCopy.ColumnName = "UnitPricePerCopy";
                colvarUnitPricePerCopy.DataType = DbType.Single;
                colvarUnitPricePerCopy.MaxLength = 0;
                colvarUnitPricePerCopy.AutoIncrement = false;
                colvarUnitPricePerCopy.IsNullable = true;
                colvarUnitPricePerCopy.IsPrimaryKey = false;
                colvarUnitPricePerCopy.IsForeignKey = false;
                colvarUnitPricePerCopy.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitPricePerCopy);
                
                TableSchema.TableColumn colvarHCCompositeRef = new TableSchema.TableColumn(schema);
                colvarHCCompositeRef.ColumnName = "HCCompositeRef";
                colvarHCCompositeRef.DataType = DbType.String;
                colvarHCCompositeRef.MaxLength = 50;
                colvarHCCompositeRef.AutoIncrement = false;
                colvarHCCompositeRef.IsNullable = true;
                colvarHCCompositeRef.IsPrimaryKey = false;
                colvarHCCompositeRef.IsForeignKey = false;
                colvarHCCompositeRef.IsReadOnly = false;
                
                schema.Columns.Add(colvarHCCompositeRef);
                
                TableSchema.TableColumn colvarHCInvoiceAmount = new TableSchema.TableColumn(schema);
                colvarHCInvoiceAmount.ColumnName = "HCInvoiceAmount";
                colvarHCInvoiceAmount.DataType = DbType.Currency;
                colvarHCInvoiceAmount.MaxLength = 0;
                colvarHCInvoiceAmount.AutoIncrement = false;
                colvarHCInvoiceAmount.IsNullable = true;
                colvarHCInvoiceAmount.IsPrimaryKey = false;
                colvarHCInvoiceAmount.IsForeignKey = false;
                colvarHCInvoiceAmount.IsReadOnly = false;
                
                schema.Columns.Add(colvarHCInvoiceAmount);
                
                TableSchema.TableColumn colvarWarehouseDate = new TableSchema.TableColumn(schema);
                colvarWarehouseDate.ColumnName = "WarehouseDate";
                colvarWarehouseDate.DataType = DbType.DateTime;
                colvarWarehouseDate.MaxLength = 0;
                colvarWarehouseDate.AutoIncrement = false;
                colvarWarehouseDate.IsNullable = true;
                colvarWarehouseDate.IsPrimaryKey = false;
                colvarWarehouseDate.IsForeignKey = false;
                colvarWarehouseDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarWarehouseDate);
                
                TableSchema.TableColumn colvarOnTime = new TableSchema.TableColumn(schema);
                colvarOnTime.ColumnName = "OnTime";
                colvarOnTime.DataType = DbType.Boolean;
                colvarOnTime.MaxLength = 0;
                colvarOnTime.AutoIncrement = false;
                colvarOnTime.IsNullable = true;
                colvarOnTime.IsPrimaryKey = false;
                colvarOnTime.IsForeignKey = false;
                colvarOnTime.IsReadOnly = false;
                
                schema.Columns.Add(colvarOnTime);
                
                TableSchema.TableColumn colvarActualWeight = new TableSchema.TableColumn(schema);
                colvarActualWeight.ColumnName = "ActualWeight";
                colvarActualWeight.DataType = DbType.Int32;
                colvarActualWeight.MaxLength = 0;
                colvarActualWeight.AutoIncrement = false;
                colvarActualWeight.IsNullable = true;
                colvarActualWeight.IsPrimaryKey = false;
                colvarActualWeight.IsForeignKey = false;
                colvarActualWeight.IsReadOnly = false;
                
                schema.Columns.Add(colvarActualWeight);
                
                TableSchema.TableColumn colvarCartonLength = new TableSchema.TableColumn(schema);
                colvarCartonLength.ColumnName = "CartonLength";
                colvarCartonLength.DataType = DbType.Decimal;
                colvarCartonLength.MaxLength = 0;
                colvarCartonLength.AutoIncrement = false;
                colvarCartonLength.IsNullable = true;
                colvarCartonLength.IsPrimaryKey = false;
                colvarCartonLength.IsForeignKey = false;
                colvarCartonLength.IsReadOnly = false;
                
                schema.Columns.Add(colvarCartonLength);
                
                TableSchema.TableColumn colvarCartonDepth = new TableSchema.TableColumn(schema);
                colvarCartonDepth.ColumnName = "CartonDepth";
                colvarCartonDepth.DataType = DbType.Decimal;
                colvarCartonDepth.MaxLength = 0;
                colvarCartonDepth.AutoIncrement = false;
                colvarCartonDepth.IsNullable = true;
                colvarCartonDepth.IsPrimaryKey = false;
                colvarCartonDepth.IsForeignKey = false;
                colvarCartonDepth.IsReadOnly = false;
                
                schema.Columns.Add(colvarCartonDepth);
                
                TableSchema.TableColumn colvarCartonHeight = new TableSchema.TableColumn(schema);
                colvarCartonHeight.ColumnName = "CartonHeight";
                colvarCartonHeight.DataType = DbType.Decimal;
                colvarCartonHeight.MaxLength = 0;
                colvarCartonHeight.AutoIncrement = false;
                colvarCartonHeight.IsNullable = true;
                colvarCartonHeight.IsPrimaryKey = false;
                colvarCartonHeight.IsForeignKey = false;
                colvarCartonHeight.IsReadOnly = false;
                
                schema.Columns.Add(colvarCartonHeight);
                
                TableSchema.TableColumn colvarCopiesPerCarton = new TableSchema.TableColumn(schema);
                colvarCopiesPerCarton.ColumnName = "CopiesPerCarton";
                colvarCopiesPerCarton.DataType = DbType.Int32;
                colvarCopiesPerCarton.MaxLength = 0;
                colvarCopiesPerCarton.AutoIncrement = false;
                colvarCopiesPerCarton.IsNullable = true;
                colvarCopiesPerCarton.IsPrimaryKey = false;
                colvarCopiesPerCarton.IsForeignKey = false;
                colvarCopiesPerCarton.IsReadOnly = false;
                
                schema.Columns.Add(colvarCopiesPerCarton);
                
                TableSchema.TableColumn colvarCartonWeight = new TableSchema.TableColumn(schema);
                colvarCartonWeight.ColumnName = "CartonWeight";
                colvarCartonWeight.DataType = DbType.Single;
                colvarCartonWeight.MaxLength = 0;
                colvarCartonWeight.AutoIncrement = false;
                colvarCartonWeight.IsNullable = true;
                colvarCartonWeight.IsPrimaryKey = false;
                colvarCartonWeight.IsForeignKey = false;
                colvarCartonWeight.IsReadOnly = false;
                
                schema.Columns.Add(colvarCartonWeight);
                
                TableSchema.TableColumn colvarEMail = new TableSchema.TableColumn(schema);
                colvarEMail.ColumnName = "EMail";
                colvarEMail.DataType = DbType.String;
                colvarEMail.MaxLength = 50;
                colvarEMail.AutoIncrement = false;
                colvarEMail.IsNullable = true;
                colvarEMail.IsPrimaryKey = false;
                colvarEMail.IsForeignKey = false;
                colvarEMail.IsReadOnly = false;
                
                schema.Columns.Add(colvarEMail);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["WWIprov"].AddSchema("ReportQueryBasicView",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ReportQueryBasicView()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ReportQueryBasicView(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ReportQueryBasicView(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ReportQueryBasicView(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("OrderNumber")]
        [Bindable(true)]
        public int? OrderNumber 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OrderNumber");
		    }
            set 
		    {
			    SetColumnValue("OrderNumber", value);
            }
        }
	      
        [XmlAttribute("CompanyID")]
        [Bindable(true)]
        public int? CompanyID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CompanyID");
		    }
            set 
		    {
			    SetColumnValue("CompanyID", value);
            }
        }
	      
        [XmlAttribute("Client")]
        [Bindable(true)]
        public string Client 
	    {
		    get
		    {
			    return GetColumnValue<string>("Client");
		    }
            set 
		    {
			    SetColumnValue("Client", value);
            }
        }
	      
        [XmlAttribute("Consignee")]
        [Bindable(true)]
        public string Consignee 
	    {
		    get
		    {
			    return GetColumnValue<string>("Consignee");
		    }
            set 
		    {
			    SetColumnValue("Consignee", value);
            }
        }
	      
        [XmlAttribute("Printer")]
        [Bindable(true)]
        public string Printer 
	    {
		    get
		    {
			    return GetColumnValue<string>("Printer");
		    }
            set 
		    {
			    SetColumnValue("Printer", value);
            }
        }
	      
        [XmlAttribute("ExWorksDate")]
        [Bindable(true)]
        public DateTime? ExWorksDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ExWorksDate");
		    }
            set 
		    {
			    SetColumnValue("ExWorksDate", value);
            }
        }
	      
        [XmlAttribute("ContactID")]
        [Bindable(true)]
        public int? ContactID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ContactID");
		    }
            set 
		    {
			    SetColumnValue("ContactID", value);
            }
        }
	      
        [XmlAttribute("ContactName")]
        [Bindable(true)]
        public string ContactName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ContactName");
		    }
            set 
		    {
			    SetColumnValue("ContactName", value);
            }
        }
	      
        [XmlAttribute("CustomersRef")]
        [Bindable(true)]
        public string CustomersRef 
	    {
		    get
		    {
			    return GetColumnValue<string>("CustomersRef");
		    }
            set 
		    {
			    SetColumnValue("CustomersRef", value);
            }
        }
	      
        [XmlAttribute("Ets")]
        [Bindable(true)]
        public DateTime? Ets 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ETS");
		    }
            set 
		    {
			    SetColumnValue("ETS", value);
            }
        }
	      
        [XmlAttribute("Eta")]
        [Bindable(true)]
        public DateTime? Eta 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ETA");
		    }
            set 
		    {
			    SetColumnValue("ETA", value);
            }
        }
	      
        [XmlAttribute("Field1")]
        [Bindable(true)]
        public string Field1 
	    {
		    get
		    {
			    return GetColumnValue<string>("Field1");
		    }
            set 
		    {
			    SetColumnValue("Field1", value);
            }
        }
	      
        [XmlAttribute("ShippedOnBoard")]
        [Bindable(true)]
        public bool ShippedOnBoard 
	    {
		    get
		    {
			    return GetColumnValue<bool>("ShippedOnBoard");
		    }
            set 
		    {
			    SetColumnValue("ShippedOnBoard", value);
            }
        }
	      
        [XmlAttribute("RemarksToCustomer")]
        [Bindable(true)]
        public string RemarksToCustomer 
	    {
		    get
		    {
			    return GetColumnValue<string>("RemarksToCustomer");
		    }
            set 
		    {
			    SetColumnValue("RemarksToCustomer", value);
            }
        }
	      
        [XmlAttribute("JobClosed")]
        [Bindable(true)]
        public bool JobClosed 
	    {
		    get
		    {
			    return GetColumnValue<bool>("JobClosed");
		    }
            set 
		    {
			    SetColumnValue("JobClosed", value);
            }
        }
	      
        [XmlAttribute("DestinationPort")]
        [Bindable(true)]
        public string DestinationPort 
	    {
		    get
		    {
			    return GetColumnValue<string>("DestinationPort");
		    }
            set 
		    {
			    SetColumnValue("DestinationPort", value);
            }
        }
	      
        [XmlAttribute("OriginPort")]
        [Bindable(true)]
        public string OriginPort 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginPort");
		    }
            set 
		    {
			    SetColumnValue("OriginPort", value);
            }
        }
	      
        [XmlAttribute("FinalDestination")]
        [Bindable(true)]
        public string FinalDestination 
	    {
		    get
		    {
			    return GetColumnValue<string>("FinalDestination");
		    }
            set 
		    {
			    SetColumnValue("FinalDestination", value);
            }
        }
	      
        [XmlAttribute("VesselName")]
        [Bindable(true)]
        public string VesselName 
	    {
		    get
		    {
			    return GetColumnValue<string>("VesselName");
		    }
            set 
		    {
			    SetColumnValue("VesselName", value);
            }
        }
	      
        [XmlAttribute("DeliveryTo")]
        [Bindable(true)]
        public string DeliveryTo 
	    {
		    get
		    {
			    return GetColumnValue<string>("DeliveryTo");
		    }
            set 
		    {
			    SetColumnValue("DeliveryTo", value);
            }
        }
	      
        [XmlAttribute("CurrentStatusDate")]
        [Bindable(true)]
        public DateTime? CurrentStatusDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("CurrentStatusDate");
		    }
            set 
		    {
			    SetColumnValue("CurrentStatusDate", value);
            }
        }
	      
        [XmlAttribute("VesselLastUpdated")]
        [Bindable(true)]
        public DateTime? VesselLastUpdated 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("VesselLastUpdated");
		    }
            set 
		    {
			    SetColumnValue("VesselLastUpdated", value);
            }
        }
	      
        [XmlAttribute("EWDLastUpdated")]
        [Bindable(true)]
        public DateTime? EWDLastUpdated 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("EWDLastUpdated");
		    }
            set 
		    {
			    SetColumnValue("EWDLastUpdated", value);
            }
        }
	      
        [XmlAttribute("EXPR1")]
        [Bindable(true)]
        public DateTime? EXPR1 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("EXPR1");
		    }
            set 
		    {
			    SetColumnValue("EXPR1", value);
            }
        }
	      
        [XmlAttribute("EXPR2")]
        [Bindable(true)]
        public DateTime? EXPR2 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("EXPR2");
		    }
            set 
		    {
			    SetColumnValue("EXPR2", value);
            }
        }
	      
        [XmlAttribute("BookingReceived")]
        [Bindable(true)]
        public DateTime? BookingReceived 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("BookingReceived");
		    }
            set 
		    {
			    SetColumnValue("BookingReceived", value);
            }
        }
	      
        [XmlAttribute("Title")]
        [Bindable(true)]
        public string Title 
	    {
		    get
		    {
			    return GetColumnValue<string>("Title");
		    }
            set 
		    {
			    SetColumnValue("Title", value);
            }
        }
	      
        [XmlAttribute("Isbn")]
        [Bindable(true)]
        public string Isbn 
	    {
		    get
		    {
			    return GetColumnValue<string>("ISBN");
		    }
            set 
		    {
			    SetColumnValue("ISBN", value);
            }
        }
	      
        [XmlAttribute("Copies")]
        [Bindable(true)]
        public int? Copies 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Copies");
		    }
            set 
		    {
			    SetColumnValue("Copies", value);
            }
        }
	      
        [XmlAttribute("PONumber")]
        [Bindable(true)]
        public string PONumber 
	    {
		    get
		    {
			    return GetColumnValue<string>("PONumber");
		    }
            set 
		    {
			    SetColumnValue("PONumber", value);
            }
        }
	      
        [XmlAttribute("DeliveryID")]
        [Bindable(true)]
        public int? DeliveryID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("DeliveryID");
		    }
            set 
		    {
			    SetColumnValue("DeliveryID", value);
            }
        }
	      
        [XmlAttribute("TitleID")]
        [Bindable(true)]
        public int? TitleID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("TitleID");
		    }
            set 
		    {
			    SetColumnValue("TitleID", value);
            }
        }
	      
        [XmlAttribute("DeliveryCopies")]
        [Bindable(true)]
        public int? DeliveryCopies 
	    {
		    get
		    {
			    return GetColumnValue<int?>("DeliveryCopies");
		    }
            set 
		    {
			    SetColumnValue("DeliveryCopies", value);
            }
        }
	      
        [XmlAttribute("PearsonDivCode")]
        [Bindable(true)]
        public string PearsonDivCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("PearsonDivCode");
		    }
            set 
		    {
			    SetColumnValue("PearsonDivCode", value);
            }
        }
	      
        [XmlAttribute("Impression")]
        [Bindable(true)]
        public string Impression 
	    {
		    get
		    {
			    return GetColumnValue<string>("Impression");
		    }
            set 
		    {
			    SetColumnValue("Impression", value);
            }
        }
	      
        [XmlAttribute("SSRNo")]
        [Bindable(true)]
        public string SSRNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("SSRNo");
		    }
            set 
		    {
			    SetColumnValue("SSRNo", value);
            }
        }
	      
        [XmlAttribute("SSRDate")]
        [Bindable(true)]
        public DateTime? SSRDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("SSRDate");
		    }
            set 
		    {
			    SetColumnValue("SSRDate", value);
            }
        }
	      
        [XmlAttribute("OtherRef")]
        [Bindable(true)]
        public string OtherRef 
	    {
		    get
		    {
			    return GetColumnValue<string>("OtherRef");
		    }
            set 
		    {
			    SetColumnValue("OtherRef", value);
            }
        }
	      
        [XmlAttribute("TotalValue")]
        [Bindable(true)]
        public decimal? TotalValue 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("TotalValue");
		    }
            set 
		    {
			    SetColumnValue("TotalValue", value);
            }
        }
	      
        [XmlAttribute("UnitPricePerCopy")]
        [Bindable(true)]
        public float? UnitPricePerCopy 
	    {
		    get
		    {
			    return GetColumnValue<float?>("UnitPricePerCopy");
		    }
            set 
		    {
			    SetColumnValue("UnitPricePerCopy", value);
            }
        }
	      
        [XmlAttribute("HCCompositeRef")]
        [Bindable(true)]
        public string HCCompositeRef 
	    {
		    get
		    {
			    return GetColumnValue<string>("HCCompositeRef");
		    }
            set 
		    {
			    SetColumnValue("HCCompositeRef", value);
            }
        }
	      
        [XmlAttribute("HCInvoiceAmount")]
        [Bindable(true)]
        public decimal? HCInvoiceAmount 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("HCInvoiceAmount");
		    }
            set 
		    {
			    SetColumnValue("HCInvoiceAmount", value);
            }
        }
	      
        [XmlAttribute("WarehouseDate")]
        [Bindable(true)]
        public DateTime? WarehouseDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("WarehouseDate");
		    }
            set 
		    {
			    SetColumnValue("WarehouseDate", value);
            }
        }
	      
        [XmlAttribute("OnTime")]
        [Bindable(true)]
        public bool? OnTime 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("OnTime");
		    }
            set 
		    {
			    SetColumnValue("OnTime", value);
            }
        }
	      
        [XmlAttribute("ActualWeight")]
        [Bindable(true)]
        public int? ActualWeight 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ActualWeight");
		    }
            set 
		    {
			    SetColumnValue("ActualWeight", value);
            }
        }
	      
        [XmlAttribute("CartonLength")]
        [Bindable(true)]
        public decimal? CartonLength 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("CartonLength");
		    }
            set 
		    {
			    SetColumnValue("CartonLength", value);
            }
        }
	      
        [XmlAttribute("CartonDepth")]
        [Bindable(true)]
        public decimal? CartonDepth 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("CartonDepth");
		    }
            set 
		    {
			    SetColumnValue("CartonDepth", value);
            }
        }
	      
        [XmlAttribute("CartonHeight")]
        [Bindable(true)]
        public decimal? CartonHeight 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("CartonHeight");
		    }
            set 
		    {
			    SetColumnValue("CartonHeight", value);
            }
        }
	      
        [XmlAttribute("CopiesPerCarton")]
        [Bindable(true)]
        public int? CopiesPerCarton 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CopiesPerCarton");
		    }
            set 
		    {
			    SetColumnValue("CopiesPerCarton", value);
            }
        }
	      
        [XmlAttribute("CartonWeight")]
        [Bindable(true)]
        public float? CartonWeight 
	    {
		    get
		    {
			    return GetColumnValue<float?>("CartonWeight");
		    }
            set 
		    {
			    SetColumnValue("CartonWeight", value);
            }
        }
	      
        [XmlAttribute("EMail")]
        [Bindable(true)]
        public string EMail 
	    {
		    get
		    {
			    return GetColumnValue<string>("EMail");
		    }
            set 
		    {
			    SetColumnValue("EMail", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string OrderNumber = @"OrderNumber";
            
            public static string CompanyID = @"CompanyID";
            
            public static string Client = @"Client";
            
            public static string Consignee = @"Consignee";
            
            public static string Printer = @"Printer";
            
            public static string ExWorksDate = @"ExWorksDate";
            
            public static string ContactID = @"ContactID";
            
            public static string ContactName = @"ContactName";
            
            public static string CustomersRef = @"CustomersRef";
            
            public static string Ets = @"ETS";
            
            public static string Eta = @"ETA";
            
            public static string Field1 = @"Field1";
            
            public static string ShippedOnBoard = @"ShippedOnBoard";
            
            public static string RemarksToCustomer = @"RemarksToCustomer";
            
            public static string JobClosed = @"JobClosed";
            
            public static string DestinationPort = @"DestinationPort";
            
            public static string OriginPort = @"OriginPort";
            
            public static string FinalDestination = @"FinalDestination";
            
            public static string VesselName = @"VesselName";
            
            public static string DeliveryTo = @"DeliveryTo";
            
            public static string CurrentStatusDate = @"CurrentStatusDate";
            
            public static string VesselLastUpdated = @"VesselLastUpdated";
            
            public static string EWDLastUpdated = @"EWDLastUpdated";
            
            public static string EXPR1 = @"EXPR1";
            
            public static string EXPR2 = @"EXPR2";
            
            public static string BookingReceived = @"BookingReceived";
            
            public static string Title = @"Title";
            
            public static string Isbn = @"ISBN";
            
            public static string Copies = @"Copies";
            
            public static string PONumber = @"PONumber";
            
            public static string DeliveryID = @"DeliveryID";
            
            public static string TitleID = @"TitleID";
            
            public static string DeliveryCopies = @"DeliveryCopies";
            
            public static string PearsonDivCode = @"PearsonDivCode";
            
            public static string Impression = @"Impression";
            
            public static string SSRNo = @"SSRNo";
            
            public static string SSRDate = @"SSRDate";
            
            public static string OtherRef = @"OtherRef";
            
            public static string TotalValue = @"TotalValue";
            
            public static string UnitPricePerCopy = @"UnitPricePerCopy";
            
            public static string HCCompositeRef = @"HCCompositeRef";
            
            public static string HCInvoiceAmount = @"HCInvoiceAmount";
            
            public static string WarehouseDate = @"WarehouseDate";
            
            public static string OnTime = @"OnTime";
            
            public static string ActualWeight = @"ActualWeight";
            
            public static string CartonLength = @"CartonLength";
            
            public static string CartonDepth = @"CartonDepth";
            
            public static string CartonHeight = @"CartonHeight";
            
            public static string CopiesPerCarton = @"CopiesPerCarton";
            
            public static string CartonWeight = @"CartonWeight";
            
            public static string EMail = @"EMail";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
