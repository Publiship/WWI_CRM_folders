using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Logistics{
    public partial class SPs{
        
        /// <summary>
        /// Creates an object wrapper for the dt_addtosourcecontrol Procedure
        /// </summary>
        public static StoredProcedure DtAddtosourcecontrol(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_addtosourcecontrol", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@vchSourceSafeINI", vchSourceSafeINI, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchProjectName", vchProjectName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchComment", vchComment, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_addtosourcecontrol_u Procedure
        /// </summary>
        public static StoredProcedure DtAddtosourcecontrolU(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_addtosourcecontrol_u", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@vchSourceSafeINI", vchSourceSafeINI, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchProjectName", vchProjectName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchComment", vchComment, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_adduserobject Procedure
        /// </summary>
        public static StoredProcedure DtAdduserobject()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_adduserobject", DataService.GetInstance("WWIprov"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_adduserobject_vcs Procedure
        /// </summary>
        public static StoredProcedure DtAdduserobjectVcs(string vchProperty)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_adduserobject_vcs", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@vchProperty", vchProperty, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_checkinobject Procedure
        /// </summary>
        public static StoredProcedure DtCheckinobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, int? iVCSFlags, int? iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_checkinobject", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@chObjectType", chObjectType, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@vchObjectName", vchObjectName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchComment", vchComment, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@iVCSFlags", iVCSFlags, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@iActionFlag", iActionFlag, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@txStream1", txStream1, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@txStream2", txStream2, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@txStream3", txStream3, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_checkinobject_u Procedure
        /// </summary>
        public static StoredProcedure DtCheckinobjectU(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, int? iVCSFlags, int? iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_checkinobject_u", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@chObjectType", chObjectType, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@vchObjectName", vchObjectName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchComment", vchComment, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.String, null, null);
        	
            sp.Command.AddParameter("@iVCSFlags", iVCSFlags, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@iActionFlag", iActionFlag, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@txStream1", txStream1, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@txStream2", txStream2, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@txStream3", txStream3, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_checkoutobject Procedure
        /// </summary>
        public static StoredProcedure DtCheckoutobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, int? iVCSFlags, int? iActionFlag)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_checkoutobject", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@chObjectType", chObjectType, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@vchObjectName", vchObjectName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchComment", vchComment, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@iVCSFlags", iVCSFlags, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@iActionFlag", iActionFlag, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_checkoutobject_u Procedure
        /// </summary>
        public static StoredProcedure DtCheckoutobjectU(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, int? iVCSFlags, int? iActionFlag)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_checkoutobject_u", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@chObjectType", chObjectType, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@vchObjectName", vchObjectName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchComment", vchComment, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.String, null, null);
        	
            sp.Command.AddParameter("@iVCSFlags", iVCSFlags, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@iActionFlag", iActionFlag, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_displayoaerror Procedure
        /// </summary>
        public static StoredProcedure DtDisplayoaerror(int? iObject, int? iresult)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_displayoaerror", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@iObject", iObject, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@iresult", iresult, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_displayoaerror_u Procedure
        /// </summary>
        public static StoredProcedure DtDisplayoaerrorU(int? iObject, int? iresult)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_displayoaerror_u", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@iObject", iObject, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@iresult", iresult, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_droppropertiesbyid Procedure
        /// </summary>
        public static StoredProcedure DtDroppropertiesbyid(int? id, string propertyX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_droppropertiesbyid", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_dropuserobjectbyid Procedure
        /// </summary>
        public static StoredProcedure DtDropuserobjectbyid(int? id)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_dropuserobjectbyid", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_generateansiname Procedure
        /// </summary>
        public static StoredProcedure DtGenerateansiname(string name)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_generateansiname", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddOutputParameter("@name", DbType.AnsiString, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_getobjwithprop Procedure
        /// </summary>
        public static StoredProcedure DtGetobjwithprop(string propertyX, string valueX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_getobjwithprop", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@value", valueX, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_getobjwithprop_u Procedure
        /// </summary>
        public static StoredProcedure DtGetobjwithpropU(string propertyX, string uvalue)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_getobjwithprop_u", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@uvalue", uvalue, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_getpropertiesbyid Procedure
        /// </summary>
        public static StoredProcedure DtGetpropertiesbyid(int? id, string propertyX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_getpropertiesbyid", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_getpropertiesbyid_u Procedure
        /// </summary>
        public static StoredProcedure DtGetpropertiesbyidU(int? id, string propertyX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_getpropertiesbyid_u", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_getpropertiesbyid_vcs Procedure
        /// </summary>
        public static StoredProcedure DtGetpropertiesbyidVcs(int? id, string propertyX, string valueX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_getpropertiesbyid_vcs", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            sp.Command.AddOutputParameter("@value", DbType.AnsiString, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_getpropertiesbyid_vcs_u Procedure
        /// </summary>
        public static StoredProcedure DtGetpropertiesbyidVcsU(int? id, string propertyX, string valueX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_getpropertiesbyid_vcs_u", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            sp.Command.AddOutputParameter("@value", DbType.String, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_isundersourcecontrol Procedure
        /// </summary>
        public static StoredProcedure DtIsundersourcecontrol(string vchLoginName, string vchPassword, int? iWhoToo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_isundersourcecontrol", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@iWhoToo", iWhoToo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_isundersourcecontrol_u Procedure
        /// </summary>
        public static StoredProcedure DtIsundersourcecontrolU(string vchLoginName, string vchPassword, int? iWhoToo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_isundersourcecontrol_u", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.String, null, null);
        	
            sp.Command.AddParameter("@iWhoToo", iWhoToo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_removefromsourcecontrol Procedure
        /// </summary>
        public static StoredProcedure DtRemovefromsourcecontrol()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_removefromsourcecontrol", DataService.GetInstance("WWIprov"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_setpropertybyid Procedure
        /// </summary>
        public static StoredProcedure DtSetpropertybyid(int? id, string propertyX, string valueX, byte[] lvalue)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_setpropertybyid", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@value", valueX, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@lvalue", lvalue, DbType.Binary, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_setpropertybyid_u Procedure
        /// </summary>
        public static StoredProcedure DtSetpropertybyidU(int? id, string propertyX, string uvalue, byte[] lvalue)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_setpropertybyid_u", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@uvalue", uvalue, DbType.String, null, null);
        	
            sp.Command.AddParameter("@lvalue", lvalue, DbType.Binary, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_validateloginparams Procedure
        /// </summary>
        public static StoredProcedure DtValidateloginparams(string vchLoginName, string vchPassword)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_validateloginparams", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_validateloginparams_u Procedure
        /// </summary>
        public static StoredProcedure DtValidateloginparamsU(string vchLoginName, string vchPassword)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_validateloginparams_u", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_vcsenabled Procedure
        /// </summary>
        public static StoredProcedure DtVcsenabled()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_vcsenabled", DataService.GetInstance("WWIprov"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_verstamp006 Procedure
        /// </summary>
        public static StoredProcedure DtVerstamp006()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_verstamp006", DataService.GetInstance("WWIprov"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_whocheckedout Procedure
        /// </summary>
        public static StoredProcedure DtWhocheckedout(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_whocheckedout", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@chObjectType", chObjectType, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@vchObjectName", vchObjectName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_whocheckedout_u Procedure
        /// </summary>
        public static StoredProcedure DtWhocheckedoutU(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_whocheckedout_u", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@chObjectType", chObjectType, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@vchObjectName", vchObjectName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the OrderForm Procedure
        /// </summary>
        public static StoredProcedure OrderForm(string titleparam, int? PortID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("OrderForm", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@titleparam", titleparam, DbType.String, null, null);
        	
            sp.Command.AddParameter("@PortID", PortID, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the OrderStatusChanged Procedure
        /// </summary>
        public static StoredProcedure OrderStatusChanged()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("OrderStatusChanged", DataService.GetInstance("WWIprov"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Reindex_ALL Procedure
        /// </summary>
        public static StoredProcedure ReindexAll()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Reindex_ALL", DataService.GetInstance("WWIprov"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_B3CopyToDeliverySubSubTable Procedure
        /// </summary>
        public static StoredProcedure SpB3CopyToDeliverySubSubTable(int? DeliveryID, int? TitleID, string Remarks, string Title, int? Copies, decimal? CartonLength, decimal? CartonDepth, decimal? CartonHeight, int? CopiesPerCarton, float? CartonWeight, int? SubDeliveryID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_B3CopyToDeliverySubSubTable", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@DeliveryID", DeliveryID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@TitleID", TitleID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@Remarks", Remarks, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Title", Title, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Copies", Copies, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CartonLength", CartonLength, DbType.Decimal, 0, 18);
        	
            sp.Command.AddParameter("@CartonDepth", CartonDepth, DbType.Decimal, 0, 18);
        	
            sp.Command.AddParameter("@CartonHeight", CartonHeight, DbType.Decimal, 0, 18);
        	
            sp.Command.AddParameter("@CopiesPerCarton", CopiesPerCarton, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CartonWeight", CartonWeight, DbType.Single, null, 24);
        	
            sp.Command.AddOutputParameter("@SubDeliveryID", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_B3CopyToDeliverySubTable Procedure
        /// </summary>
        public static StoredProcedure SpB3CopyToDeliverySubTable(int? OrderNumber, int? CurrentStatusID, int? DeliveryAddress, string SpecialInstructions, int? DeliveryID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_B3CopyToDeliverySubTable", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@OrderNumber", OrderNumber, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CurrentStatusID", CurrentStatusID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@DeliveryAddress", DeliveryAddress, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@SpecialInstructions", SpecialInstructions, DbType.String, null, null);
        	
            sp.Command.AddOutputParameter("@DeliveryID", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_B3CopyToItemTable Procedure
        /// </summary>
        public static StoredProcedure SpB3CopyToItemTable(int? OrderNumber, string Title, string ISBN, string Impression, string PORef, int? Copies, int? TitleID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_B3CopyToItemTable", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@OrderNumber", OrderNumber, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@Title", Title, DbType.String, null, null);
        	
            sp.Command.AddParameter("@ISBN", ISBN, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Impression", Impression, DbType.String, null, null);
        	
            sp.Command.AddParameter("@PORef", PORef, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Copies", Copies, DbType.Int32, 0, 10);
        	
            sp.Command.AddOutputParameter("@TitleID", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_B3CopyToOrderTable Procedure
        /// </summary>
        public static StoredProcedure SpB3CopyToOrderTable(string OfficeIndicator, bool? PublishipOrder, DateTime? DateOrderCreated, bool? HotJob, int? CompanyID, int? ConsigneeID, int? NotifyPartyID, int? AgentAtOriginID, int? AgentAtDestinationID, int? PrinterID, int? OrderControllerID, int? OperationsControllerID, int? OriginPortControllerID, string CustomersRef, int? ContactID, DateTime? ExWorksDate, int? OriginPointID, int? PortID, int? DestinationPortID, int? FinalDestinationID, string RemarksToCustomer, string Incoterms, int? OrderID, int? OrderNumber)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_B3CopyToOrderTable", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@OfficeIndicator", OfficeIndicator, DbType.String, null, null);
        	
            sp.Command.AddParameter("@PublishipOrder", PublishipOrder, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@DateOrderCreated", DateOrderCreated, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@HotJob", HotJob, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@CompanyID", CompanyID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@ConsigneeID", ConsigneeID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@NotifyPartyID", NotifyPartyID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@AgentAtOriginID", AgentAtOriginID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@AgentAtDestinationID", AgentAtDestinationID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@PrinterID", PrinterID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@OrderControllerID", OrderControllerID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@OperationsControllerID", OperationsControllerID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@OriginPortControllerID", OriginPortControllerID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CustomersRef", CustomersRef, DbType.String, null, null);
        	
            sp.Command.AddParameter("@ContactID", ContactID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@ExWorksDate", ExWorksDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@OriginPointID", OriginPointID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@PortID", PortID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@DestinationPortID", DestinationPortID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@FinalDestinationID", FinalDestinationID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@RemarksToCustomer", RemarksToCustomer, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Incoterms", Incoterms, DbType.String, null, null);
        	
            sp.Command.AddOutputParameter("@OrderID", DbType.Int32, 0, 10);
            
            sp.Command.AddOutputParameter("@OrderNumber", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_B3DeleteDirtyJobs Procedure
        /// </summary>
        public static StoredProcedure SpB3DeleteDirtyJobs(int? Order, DateTime? DirtyTime)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_B3DeleteDirtyJobs", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@Order", Order, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@DirtyTime", DirtyTime, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_B3InsertJob Procedure
        /// </summary>
        public static StoredProcedure SpB3InsertJob(int? JobID, string FreightSupplierCode, string FreightSupplierName, int? ProcessLogRecordID, string Cancelled, string SupplierPurchaseOrderNo, string FreightPurchaseOrderNo, int? PickUpLocationID, string PickUpLocationDesc, string PickUpCountryISO, string PortOfEntry, DateTime? RAPDate, DateTime? CriticalDate, int? PrinterSupplierID, string PrinterSupplierName, int? ControllerID, string ControllerName, int? CustomerID, string CustomerName, int? LoadItemID, string Title, string ISBN, string BookCode, int? SupplyEdition, decimal? RVD, int? DealNo, string CustomerOrderRef, string Currency, decimal? ProformaValue, int? B3DeliveryID, int? DeliveryAddressID, string DeliveryAddressDesc, int? Quantity, int? DestinationLocationID, string DestinationLocationDesc, string DestinationCountryISO, string Incoterm, string TransportMode, int? CartonLength, int? CartonWidth, int? CartonHeight, int? CartonWeight, int? UnitsPerCarton, int? OrderedQuantity, DateTime? ExWorks, DateTime? Original, string Comment1, string Comment2, string Comment3, string Comment4, string Comment5, int? ID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_B3InsertJob", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@JobID", JobID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@FreightSupplierCode", FreightSupplierCode, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@FreightSupplierName", FreightSupplierName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@ProcessLogRecordID", ProcessLogRecordID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@Cancelled", Cancelled, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@SupplierPurchaseOrderNo", SupplierPurchaseOrderNo, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@FreightPurchaseOrderNo", FreightPurchaseOrderNo, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@PickUpLocationID", PickUpLocationID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@PickUpLocationDesc", PickUpLocationDesc, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@PickUpCountryISO", PickUpCountryISO, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@PortOfEntry", PortOfEntry, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@RAPDate", RAPDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@CriticalDate", CriticalDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@PrinterSupplierID", PrinterSupplierID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@PrinterSupplierName", PrinterSupplierName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@ControllerID", ControllerID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@ControllerName", ControllerName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@CustomerID", CustomerID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CustomerName", CustomerName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@LoadItemID", LoadItemID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@Title", Title, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@ISBN", ISBN, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@BookCode", BookCode, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@SupplyEdition", SupplyEdition, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@RVD", RVD, DbType.Decimal, 0, 18);
        	
            sp.Command.AddParameter("@DealNo", DealNo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CustomerOrderRef", CustomerOrderRef, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Currency", Currency, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@ProformaValue", ProformaValue, DbType.Decimal, 0, 18);
        	
            sp.Command.AddParameter("@B3DeliveryID", B3DeliveryID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@DeliveryAddressID", DeliveryAddressID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@DeliveryAddressDesc", DeliveryAddressDesc, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Quantity", Quantity, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@DestinationLocationID", DestinationLocationID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@DestinationLocationDesc", DestinationLocationDesc, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@DestinationCountryISO", DestinationCountryISO, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Incoterm", Incoterm, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@TransportMode", TransportMode, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@CartonLength", CartonLength, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CartonWidth", CartonWidth, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CartonHeight", CartonHeight, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CartonWeight", CartonWeight, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@UnitsPerCarton", UnitsPerCarton, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@OrderedQuantity", OrderedQuantity, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@ExWorks", ExWorks, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@Original", Original, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@Comment1", Comment1, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Comment2", Comment2, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Comment3", Comment3, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Comment4", Comment4, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Comment5", Comment5, DbType.AnsiString, null, null);
        	
            sp.Command.AddOutputParameter("@ID", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_B3LookupConsigneeID Procedure
        /// </summary>
        public static StoredProcedure SpB3LookupConsigneeID(int? B3CustomerID, int? ConsigneeID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_B3LookupConsigneeID", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@B3CustomerID", B3CustomerID, DbType.Int32, 0, 10);
        	
            sp.Command.AddOutputParameter("@ConsigneeID", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_B3LookupContactID Procedure
        /// </summary>
        public static StoredProcedure SpB3LookupContactID(int? B3ControllerID, int? ContactID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_B3LookupContactID", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@B3ControllerID", B3ControllerID, DbType.Int32, 0, 10);
        	
            sp.Command.AddOutputParameter("@ContactID", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_B3LookupDeliveryAddressID Procedure
        /// </summary>
        public static StoredProcedure SpB3LookupDeliveryAddressID(int? B3DeliveryAddressID, int? DeliveryAddressID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_B3LookupDeliveryAddressID", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@B3DeliveryAddressID", B3DeliveryAddressID, DbType.Int32, 0, 10);
        	
            sp.Command.AddOutputParameter("@DeliveryAddressID", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_B3LookupDestinationPortID Procedure
        /// </summary>
        public static StoredProcedure SpB3LookupDestinationPortID(string B3PortOfEntry, int? DestinationPortID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_B3LookupDestinationPortID", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@B3PortOfEntry", B3PortOfEntry, DbType.String, null, null);
        	
            sp.Command.AddOutputParameter("@DestinationPortID", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_B3LookupOriginPointID Procedure
        /// </summary>
        public static StoredProcedure SpB3LookupOriginPointID(int? B3PickUpLocationID, int? OriginPointID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_B3LookupOriginPointID", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@B3PickUpLocationID", B3PickUpLocationID, DbType.Int32, 0, 10);
        	
            sp.Command.AddOutputParameter("@OriginPointID", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_B3LookupPortID Procedure
        /// </summary>
        public static StoredProcedure SpB3LookupPortID(int? B3PickUpLocationID, int? PortID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_B3LookupPortID", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@B3PickUpLocationID", B3PickUpLocationID, DbType.Int32, 0, 10);
        	
            sp.Command.AddOutputParameter("@PortID", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_B3LookupPrinterID Procedure
        /// </summary>
        public static StoredProcedure SpB3LookupPrinterID(int? B3PrinterSupplierID, int? PrinterID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_B3LookupPrinterID", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@B3PrinterSupplierID", B3PrinterSupplierID, DbType.Int32, 0, 10);
        	
            sp.Command.AddOutputParameter("@PrinterID", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_B3SelectDirtyJobs Procedure
        /// </summary>
        public static StoredProcedure SpB3SelectDirtyJobs()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_B3SelectDirtyJobs", DataService.GetInstance("WWIprov"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_B3SelectIntermediate Procedure
        /// </summary>
        public static StoredProcedure SpB3SelectIntermediate(int? ID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_B3SelectIntermediate", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@ID", ID, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_B3SelectIntermediateFromJobID Procedure
        /// </summary>
        public static StoredProcedure SpB3SelectIntermediateFromJobID(int? JobID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_B3SelectIntermediateFromJobID", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@JobID", JobID, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_B3UpdateIntermediate Procedure
        /// </summary>
        public static StoredProcedure SpB3UpdateIntermediate(int? JobID, int? JobIDParent, string FreightSupplierCode, string FreightSupplierName, int? ProcessLogRecordID, string Cancelled, string SupplierPurchaseOrderNo, string FreightPurchaseOrderNo, int? PickUpLocationID, string PickUpLocationDesc, string PickUpCountryISO, string PortOfEntry, string ActualPortOfEntry, string Vessel, DateTime? RAPDate, DateTime? EstimatedDeliveryDate, DateTime? CriticalDate, int? PrinterSupplierID, string PrinterSupplierName, int? ControllerID, string ControllerName, int? CustomerID, string CustomerName, bool? PrinterDelay, bool? Booked, bool? Completed, string BookingInReference, bool? ManualDropShip, string Remarks, int? LoadItemID, bool? AllUnitsShipped, string Title, string ISBN, string BookCode, int? SupplyEdition, decimal? RVD, int? DealNo, string CustomerOrderRef, string Currency, decimal? ProformaValue, int? B3DeliveryID, int? DeliveryAddressID, string DeliveryAddressDesc, int? Quantity, int? DestinationLocationID, string DestinationLocationDesc, string DestinationCountryISO, string Incoterm, string TransportMode, int? CartonLength, int? CartonWidth, int? CartonHeight, int? CartonWeight, int? UnitsPerCarton, int? NetCartonWeight, int? OrderedQuantity, int? TotalCartons, int? PalletType, int? NumPallets, int? NumFullPalletLabels, int? NumPartPalletLabels, int? CartonPerFullPalletLayer, int? LayersPerFullPallet, int? RemainderCartons, int? CartonPerFullPallet, int? ShipmentID, string Container, int? ShippedQuantity, string LoadWeight, string LoadVolume, string Comment, DateTime? Entered, DateTime? ExWorks, DateTime? Original, DateTime? ExWorksOriginal, DateTime? ExWorksEstimated, DateTime? ExWorksActual, DateTime? DepartedOriginal, DateTime? DepartedEstimated, DateTime? DepartedActual, DateTime? ArrivedPortOriginal, DateTime? ArrivedPortEstimated, DateTime? ArrivedPortActual, DateTime? DeliveredOriginal, DateTime? DeliveredEstimated, DateTime? DeliveredActual, DateTime? InvoicedOriginal, DateTime? InvoicedEstimated, DateTime? InvoicedActual, DateTime? CompletedOriginal, DateTime? CompletedEstimated, DateTime? CompletedActual, string Comment1, string Comment2, string Comment3, string Comment4, string Comment5, string DealNumber, string SuccessIndicator, string Message, string ErrorMsg, DateTime? DateTimeOfCancellation, string CancelConfirm)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_B3UpdateIntermediate", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@JobID", JobID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@JobIDParent", JobIDParent, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@FreightSupplierCode", FreightSupplierCode, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@FreightSupplierName", FreightSupplierName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@ProcessLogRecordID", ProcessLogRecordID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@Cancelled", Cancelled, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@SupplierPurchaseOrderNo", SupplierPurchaseOrderNo, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@FreightPurchaseOrderNo", FreightPurchaseOrderNo, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@PickUpLocationID", PickUpLocationID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@PickUpLocationDesc", PickUpLocationDesc, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@PickUpCountryISO", PickUpCountryISO, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@PortOfEntry", PortOfEntry, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@ActualPortOfEntry", ActualPortOfEntry, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Vessel", Vessel, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@RAPDate", RAPDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@EstimatedDeliveryDate", EstimatedDeliveryDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@CriticalDate", CriticalDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@PrinterSupplierID", PrinterSupplierID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@PrinterSupplierName", PrinterSupplierName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@ControllerID", ControllerID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@ControllerName", ControllerName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@CustomerID", CustomerID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CustomerName", CustomerName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@PrinterDelay", PrinterDelay, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@Booked", Booked, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@Completed", Completed, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@BookingInReference", BookingInReference, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@ManualDropShip", ManualDropShip, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@Remarks", Remarks, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@LoadItemID", LoadItemID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@AllUnitsShipped", AllUnitsShipped, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@Title", Title, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@ISBN", ISBN, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@BookCode", BookCode, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@SupplyEdition", SupplyEdition, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@RVD", RVD, DbType.Decimal, 0, 18);
        	
            sp.Command.AddParameter("@DealNo", DealNo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CustomerOrderRef", CustomerOrderRef, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Currency", Currency, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@ProformaValue", ProformaValue, DbType.Decimal, 0, 18);
        	
            sp.Command.AddParameter("@B3DeliveryID", B3DeliveryID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@DeliveryAddressID", DeliveryAddressID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@DeliveryAddressDesc", DeliveryAddressDesc, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Quantity", Quantity, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@DestinationLocationID", DestinationLocationID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@DestinationLocationDesc", DestinationLocationDesc, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@DestinationCountryISO", DestinationCountryISO, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Incoterm", Incoterm, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@TransportMode", TransportMode, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@CartonLength", CartonLength, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CartonWidth", CartonWidth, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CartonHeight", CartonHeight, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CartonWeight", CartonWeight, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@UnitsPerCarton", UnitsPerCarton, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@NetCartonWeight", NetCartonWeight, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@OrderedQuantity", OrderedQuantity, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@TotalCartons", TotalCartons, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@PalletType", PalletType, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@NumPallets", NumPallets, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@NumFullPalletLabels", NumFullPalletLabels, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@NumPartPalletLabels", NumPartPalletLabels, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CartonPerFullPalletLayer", CartonPerFullPalletLayer, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@LayersPerFullPallet", LayersPerFullPallet, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@RemainderCartons", RemainderCartons, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CartonPerFullPallet", CartonPerFullPallet, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@ShipmentID", ShipmentID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@Container", Container, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@ShippedQuantity", ShippedQuantity, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@LoadWeight", LoadWeight, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@LoadVolume", LoadVolume, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Comment", Comment, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Entered", Entered, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ExWorks", ExWorks, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@Original", Original, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ExWorksOriginal", ExWorksOriginal, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ExWorksEstimated", ExWorksEstimated, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ExWorksActual", ExWorksActual, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@DepartedOriginal", DepartedOriginal, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@DepartedEstimated", DepartedEstimated, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@DepartedActual", DepartedActual, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ArrivedPortOriginal", ArrivedPortOriginal, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ArrivedPortEstimated", ArrivedPortEstimated, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ArrivedPortActual", ArrivedPortActual, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@DeliveredOriginal", DeliveredOriginal, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@DeliveredEstimated", DeliveredEstimated, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@DeliveredActual", DeliveredActual, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@InvoicedOriginal", InvoicedOriginal, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@InvoicedEstimated", InvoicedEstimated, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@InvoicedActual", InvoicedActual, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@CompletedOriginal", CompletedOriginal, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@CompletedEstimated", CompletedEstimated, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@CompletedActual", CompletedActual, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@Comment1", Comment1, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Comment2", Comment2, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Comment3", Comment3, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Comment4", Comment4, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Comment5", Comment5, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@DealNumber", DealNumber, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@SuccessIndicator", SuccessIndicator, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Message", Message, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@ErrorMsg", ErrorMsg, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@DateTimeOfCancellation", DateTimeOfCancellation, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@CancelConfirm", CancelConfirm, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_B3UpdateIntermediateJobID Procedure
        /// </summary>
        public static StoredProcedure SpB3UpdateIntermediateJobID(int? ID, int? JobID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_B3UpdateIntermediateJobID", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@ID", ID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@JobID", JobID, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_FindByContainer Procedure
        /// </summary>
        public static StoredProcedure SpFindByContainer(string strVALUE, string FldName)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_FindByContainer", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@strVALUE", strVALUE, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@FldName", FldName, DbType.AnsiStringFixedLength, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_FindByDate Procedure
        /// </summary>
        public static StoredProcedure SpFindByDate(string strVALUE, string FldName)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_FindByDate", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@strVALUE", strVALUE, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@FldName", FldName, DbType.AnsiStringFixedLength, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_FindByInteger Procedure
        /// </summary>
        public static StoredProcedure SpFindByInteger(string strVALUE, string FldName)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_FindByInteger", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@strVALUE", strVALUE, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@FldName", FldName, DbType.AnsiStringFixedLength, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_FindByItem Procedure
        /// </summary>
        public static StoredProcedure SpFindByItem(string strVALUE, string FldName)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_FindByItem", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@strVALUE", strVALUE, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@FldName", FldName, DbType.AnsiStringFixedLength, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_FindByString Procedure
        /// </summary>
        public static StoredProcedure SpFindByString(string strVALUE, string FldName)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_FindByString", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@strVALUE", strVALUE, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@FldName", FldName, DbType.AnsiStringFixedLength, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_findOrderNumber Procedure
        /// </summary>
        public static StoredProcedure SpFindOrderNumber(string strVALUE)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_findOrderNumber", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@strVALUE", strVALUE, DbType.AnsiStringFixedLength, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_findOrderNumber2 Procedure
        /// </summary>
        public static StoredProcedure SpFindOrderNumber2(int? strVALUE)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_findOrderNumber2", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@strVALUE", strVALUE, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_LogUser Procedure
        /// </summary>
        public static StoredProcedure SpLogUser(int? IDCode, int? UserType)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_LogUser", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@IDCode", IDCode, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@UserType", UserType, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SendASPEMail Procedure
        /// </summary>
        public static StoredProcedure SpSendASPEMail(string ToX, string Subject, string Body, string AddCC)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SendASPEMail", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@To", ToX, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Subject", Subject, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Body", Body, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@AddCC", AddCC, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_StartSearch Procedure
        /// </summary>
        public static StoredProcedure SpStartSearch(string strVALUE)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_StartSearch", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@strVALUE", strVALUE, DbType.AnsiStringFixedLength, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_testing Procedure
        /// </summary>
        public static StoredProcedure SpTesting(string XMLCargo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_testing", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@XMLCargo", XMLCargo, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_update_order_cargo Procedure
        /// </summary>
        public static StoredProcedure SpUpdateOrderCargo(string XMLCargo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_update_order_cargo", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@XMLCargo", XMLCargo, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_updatestatus Procedure
        /// </summary>
        public static StoredProcedure SpUpdatestatus(int? DeliveryID, int? CurrentStatusID, int? CurrentStatusDate)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_updatestatus", DataService.GetInstance("WWIprov"), "dbo");
        	
            sp.Command.AddParameter("@DeliveryID", DeliveryID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CurrentStatusID", CurrentStatusID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CurrentStatusDate", CurrentStatusDate, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Zap Procedure
        /// </summary>
        public static StoredProcedure Zap()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Zap", DataService.GetInstance("WWIprov"), "");
        	
            return sp;
        }
        
    }
    
}
