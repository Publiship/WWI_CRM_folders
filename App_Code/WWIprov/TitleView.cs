using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Logistics{
    /// <summary>
    /// Strongly-typed collection for the TitleView class.
    /// </summary>
    [Serializable]
    public partial class TitleViewCollection : ReadOnlyList<TitleView, TitleViewCollection>
    {        
        public TitleViewCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the TitleView view.
    /// </summary>
    [Serializable]
    public partial class TitleView : ReadOnlyRecord<TitleView>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("TitleView", TableType.View, DataService.GetInstance("WWIprov"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarTitleID = new TableSchema.TableColumn(schema);
                colvarTitleID.ColumnName = "TitleID";
                colvarTitleID.DataType = DbType.Int32;
                colvarTitleID.MaxLength = 0;
                colvarTitleID.AutoIncrement = false;
                colvarTitleID.IsNullable = false;
                colvarTitleID.IsPrimaryKey = false;
                colvarTitleID.IsForeignKey = false;
                colvarTitleID.IsReadOnly = false;
                
                schema.Columns.Add(colvarTitleID);
                
                TableSchema.TableColumn colvarOrderNumber = new TableSchema.TableColumn(schema);
                colvarOrderNumber.ColumnName = "OrderNumber";
                colvarOrderNumber.DataType = DbType.Int32;
                colvarOrderNumber.MaxLength = 0;
                colvarOrderNumber.AutoIncrement = false;
                colvarOrderNumber.IsNullable = true;
                colvarOrderNumber.IsPrimaryKey = false;
                colvarOrderNumber.IsForeignKey = false;
                colvarOrderNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderNumber);
                
                TableSchema.TableColumn colvarTitle = new TableSchema.TableColumn(schema);
                colvarTitle.ColumnName = "Title";
                colvarTitle.DataType = DbType.String;
                colvarTitle.MaxLength = 100;
                colvarTitle.AutoIncrement = false;
                colvarTitle.IsNullable = true;
                colvarTitle.IsPrimaryKey = false;
                colvarTitle.IsForeignKey = false;
                colvarTitle.IsReadOnly = false;
                
                schema.Columns.Add(colvarTitle);
                
                TableSchema.TableColumn colvarIsbn = new TableSchema.TableColumn(schema);
                colvarIsbn.ColumnName = "ISBN";
                colvarIsbn.DataType = DbType.String;
                colvarIsbn.MaxLength = 50;
                colvarIsbn.AutoIncrement = false;
                colvarIsbn.IsNullable = true;
                colvarIsbn.IsPrimaryKey = false;
                colvarIsbn.IsForeignKey = false;
                colvarIsbn.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsbn);
                
                TableSchema.TableColumn colvarImpression = new TableSchema.TableColumn(schema);
                colvarImpression.ColumnName = "Impression";
                colvarImpression.DataType = DbType.String;
                colvarImpression.MaxLength = 50;
                colvarImpression.AutoIncrement = false;
                colvarImpression.IsNullable = true;
                colvarImpression.IsPrimaryKey = false;
                colvarImpression.IsForeignKey = false;
                colvarImpression.IsReadOnly = false;
                
                schema.Columns.Add(colvarImpression);
                
                TableSchema.TableColumn colvarPONumber = new TableSchema.TableColumn(schema);
                colvarPONumber.ColumnName = "PONumber";
                colvarPONumber.DataType = DbType.String;
                colvarPONumber.MaxLength = 50;
                colvarPONumber.AutoIncrement = false;
                colvarPONumber.IsNullable = true;
                colvarPONumber.IsPrimaryKey = false;
                colvarPONumber.IsForeignKey = false;
                colvarPONumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarPONumber);
                
                TableSchema.TableColumn colvarOtherRef = new TableSchema.TableColumn(schema);
                colvarOtherRef.ColumnName = "OtherRef";
                colvarOtherRef.DataType = DbType.String;
                colvarOtherRef.MaxLength = 50;
                colvarOtherRef.AutoIncrement = false;
                colvarOtherRef.IsNullable = true;
                colvarOtherRef.IsPrimaryKey = false;
                colvarOtherRef.IsForeignKey = false;
                colvarOtherRef.IsReadOnly = false;
                
                schema.Columns.Add(colvarOtherRef);
                
                TableSchema.TableColumn colvarCopies = new TableSchema.TableColumn(schema);
                colvarCopies.ColumnName = "Copies";
                colvarCopies.DataType = DbType.Int32;
                colvarCopies.MaxLength = 0;
                colvarCopies.AutoIncrement = false;
                colvarCopies.IsNullable = true;
                colvarCopies.IsPrimaryKey = false;
                colvarCopies.IsForeignKey = false;
                colvarCopies.IsReadOnly = false;
                
                schema.Columns.Add(colvarCopies);
                
                TableSchema.TableColumn colvarCopiesLastUpdated = new TableSchema.TableColumn(schema);
                colvarCopiesLastUpdated.ColumnName = "CopiesLastUpdated";
                colvarCopiesLastUpdated.DataType = DbType.DateTime;
                colvarCopiesLastUpdated.MaxLength = 0;
                colvarCopiesLastUpdated.AutoIncrement = false;
                colvarCopiesLastUpdated.IsNullable = true;
                colvarCopiesLastUpdated.IsPrimaryKey = false;
                colvarCopiesLastUpdated.IsForeignKey = false;
                colvarCopiesLastUpdated.IsReadOnly = false;
                
                schema.Columns.Add(colvarCopiesLastUpdated);
                
                TableSchema.TableColumn colvarItemDesc = new TableSchema.TableColumn(schema);
                colvarItemDesc.ColumnName = "ItemDesc";
                colvarItemDesc.DataType = DbType.String;
                colvarItemDesc.MaxLength = 50;
                colvarItemDesc.AutoIncrement = false;
                colvarItemDesc.IsNullable = true;
                colvarItemDesc.IsPrimaryKey = false;
                colvarItemDesc.IsForeignKey = false;
                colvarItemDesc.IsReadOnly = false;
                
                schema.Columns.Add(colvarItemDesc);
                
                TableSchema.TableColumn colvarPackages = new TableSchema.TableColumn(schema);
                colvarPackages.ColumnName = "Packages";
                colvarPackages.DataType = DbType.Int32;
                colvarPackages.MaxLength = 0;
                colvarPackages.AutoIncrement = false;
                colvarPackages.IsNullable = true;
                colvarPackages.IsPrimaryKey = false;
                colvarPackages.IsForeignKey = false;
                colvarPackages.IsReadOnly = false;
                
                schema.Columns.Add(colvarPackages);
                
                TableSchema.TableColumn colvarPackageID = new TableSchema.TableColumn(schema);
                colvarPackageID.ColumnName = "PackageID";
                colvarPackageID.DataType = DbType.Int32;
                colvarPackageID.MaxLength = 0;
                colvarPackageID.AutoIncrement = false;
                colvarPackageID.IsNullable = true;
                colvarPackageID.IsPrimaryKey = false;
                colvarPackageID.IsForeignKey = false;
                colvarPackageID.IsReadOnly = false;
                
                schema.Columns.Add(colvarPackageID);
                
                TableSchema.TableColumn colvarWeight = new TableSchema.TableColumn(schema);
                colvarWeight.ColumnName = "Weight";
                colvarWeight.DataType = DbType.Int32;
                colvarWeight.MaxLength = 0;
                colvarWeight.AutoIncrement = false;
                colvarWeight.IsNullable = true;
                colvarWeight.IsPrimaryKey = false;
                colvarWeight.IsForeignKey = false;
                colvarWeight.IsReadOnly = false;
                
                schema.Columns.Add(colvarWeight);
                
                TableSchema.TableColumn colvarVolume = new TableSchema.TableColumn(schema);
                colvarVolume.ColumnName = "Volume";
                colvarVolume.DataType = DbType.Int32;
                colvarVolume.MaxLength = 0;
                colvarVolume.AutoIncrement = false;
                colvarVolume.IsNullable = true;
                colvarVolume.IsPrimaryKey = false;
                colvarVolume.IsForeignKey = false;
                colvarVolume.IsReadOnly = false;
                
                schema.Columns.Add(colvarVolume);
                
                TableSchema.TableColumn colvarTotalValue = new TableSchema.TableColumn(schema);
                colvarTotalValue.ColumnName = "TotalValue";
                colvarTotalValue.DataType = DbType.Decimal;
                colvarTotalValue.MaxLength = 0;
                colvarTotalValue.AutoIncrement = false;
                colvarTotalValue.IsNullable = true;
                colvarTotalValue.IsPrimaryKey = false;
                colvarTotalValue.IsForeignKey = false;
                colvarTotalValue.IsReadOnly = false;
                
                schema.Columns.Add(colvarTotalValue);
                
                TableSchema.TableColumn colvarSSRNo = new TableSchema.TableColumn(schema);
                colvarSSRNo.ColumnName = "SSRNo";
                colvarSSRNo.DataType = DbType.String;
                colvarSSRNo.MaxLength = 50;
                colvarSSRNo.AutoIncrement = false;
                colvarSSRNo.IsNullable = true;
                colvarSSRNo.IsPrimaryKey = false;
                colvarSSRNo.IsForeignKey = false;
                colvarSSRNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarSSRNo);
                
                TableSchema.TableColumn colvarSSRDate = new TableSchema.TableColumn(schema);
                colvarSSRDate.ColumnName = "SSRDate";
                colvarSSRDate.DataType = DbType.DateTime;
                colvarSSRDate.MaxLength = 0;
                colvarSSRDate.AutoIncrement = false;
                colvarSSRDate.IsNullable = true;
                colvarSSRDate.IsPrimaryKey = false;
                colvarSSRDate.IsForeignKey = false;
                colvarSSRDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarSSRDate);
                
                TableSchema.TableColumn colvarPerCopy = new TableSchema.TableColumn(schema);
                colvarPerCopy.ColumnName = "PerCopy";
                colvarPerCopy.DataType = DbType.Decimal;
                colvarPerCopy.MaxLength = 0;
                colvarPerCopy.AutoIncrement = false;
                colvarPerCopy.IsNullable = true;
                colvarPerCopy.IsPrimaryKey = false;
                colvarPerCopy.IsForeignKey = false;
                colvarPerCopy.IsReadOnly = false;
                
                schema.Columns.Add(colvarPerCopy);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["WWIprov"].AddSchema("TitleView",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public TitleView()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public TitleView(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public TitleView(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public TitleView(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("TitleID")]
        [Bindable(true)]
        public int TitleID 
	    {
		    get
		    {
			    return GetColumnValue<int>("TitleID");
		    }
            set 
		    {
			    SetColumnValue("TitleID", value);
            }
        }
	      
        [XmlAttribute("OrderNumber")]
        [Bindable(true)]
        public int? OrderNumber 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OrderNumber");
		    }
            set 
		    {
			    SetColumnValue("OrderNumber", value);
            }
        }
	      
        [XmlAttribute("Title")]
        [Bindable(true)]
        public string Title 
	    {
		    get
		    {
			    return GetColumnValue<string>("Title");
		    }
            set 
		    {
			    SetColumnValue("Title", value);
            }
        }
	      
        [XmlAttribute("Isbn")]
        [Bindable(true)]
        public string Isbn 
	    {
		    get
		    {
			    return GetColumnValue<string>("ISBN");
		    }
            set 
		    {
			    SetColumnValue("ISBN", value);
            }
        }
	      
        [XmlAttribute("Impression")]
        [Bindable(true)]
        public string Impression 
	    {
		    get
		    {
			    return GetColumnValue<string>("Impression");
		    }
            set 
		    {
			    SetColumnValue("Impression", value);
            }
        }
	      
        [XmlAttribute("PONumber")]
        [Bindable(true)]
        public string PONumber 
	    {
		    get
		    {
			    return GetColumnValue<string>("PONumber");
		    }
            set 
		    {
			    SetColumnValue("PONumber", value);
            }
        }
	      
        [XmlAttribute("OtherRef")]
        [Bindable(true)]
        public string OtherRef 
	    {
		    get
		    {
			    return GetColumnValue<string>("OtherRef");
		    }
            set 
		    {
			    SetColumnValue("OtherRef", value);
            }
        }
	      
        [XmlAttribute("Copies")]
        [Bindable(true)]
        public int? Copies 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Copies");
		    }
            set 
		    {
			    SetColumnValue("Copies", value);
            }
        }
	      
        [XmlAttribute("CopiesLastUpdated")]
        [Bindable(true)]
        public DateTime? CopiesLastUpdated 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("CopiesLastUpdated");
		    }
            set 
		    {
			    SetColumnValue("CopiesLastUpdated", value);
            }
        }
	      
        [XmlAttribute("ItemDesc")]
        [Bindable(true)]
        public string ItemDesc 
	    {
		    get
		    {
			    return GetColumnValue<string>("ItemDesc");
		    }
            set 
		    {
			    SetColumnValue("ItemDesc", value);
            }
        }
	      
        [XmlAttribute("Packages")]
        [Bindable(true)]
        public int? Packages 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Packages");
		    }
            set 
		    {
			    SetColumnValue("Packages", value);
            }
        }
	      
        [XmlAttribute("PackageID")]
        [Bindable(true)]
        public int? PackageID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PackageID");
		    }
            set 
		    {
			    SetColumnValue("PackageID", value);
            }
        }
	      
        [XmlAttribute("Weight")]
        [Bindable(true)]
        public int? Weight 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Weight");
		    }
            set 
		    {
			    SetColumnValue("Weight", value);
            }
        }
	      
        [XmlAttribute("Volume")]
        [Bindable(true)]
        public int? Volume 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Volume");
		    }
            set 
		    {
			    SetColumnValue("Volume", value);
            }
        }
	      
        [XmlAttribute("TotalValue")]
        [Bindable(true)]
        public decimal? TotalValue 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("TotalValue");
		    }
            set 
		    {
			    SetColumnValue("TotalValue", value);
            }
        }
	      
        [XmlAttribute("SSRNo")]
        [Bindable(true)]
        public string SSRNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("SSRNo");
		    }
            set 
		    {
			    SetColumnValue("SSRNo", value);
            }
        }
	      
        [XmlAttribute("SSRDate")]
        [Bindable(true)]
        public DateTime? SSRDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("SSRDate");
		    }
            set 
		    {
			    SetColumnValue("SSRDate", value);
            }
        }
	      
        [XmlAttribute("PerCopy")]
        [Bindable(true)]
        public decimal? PerCopy 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("PerCopy");
		    }
            set 
		    {
			    SetColumnValue("PerCopy", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string TitleID = @"TitleID";
            
            public static string OrderNumber = @"OrderNumber";
            
            public static string Title = @"Title";
            
            public static string Isbn = @"ISBN";
            
            public static string Impression = @"Impression";
            
            public static string PONumber = @"PONumber";
            
            public static string OtherRef = @"OtherRef";
            
            public static string Copies = @"Copies";
            
            public static string CopiesLastUpdated = @"CopiesLastUpdated";
            
            public static string ItemDesc = @"ItemDesc";
            
            public static string Packages = @"Packages";
            
            public static string PackageID = @"PackageID";
            
            public static string Weight = @"Weight";
            
            public static string Volume = @"Volume";
            
            public static string TotalValue = @"TotalValue";
            
            public static string SSRNo = @"SSRNo";
            
            public static string SSRDate = @"SSRDate";
            
            public static string PerCopy = @"PerCopy";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
