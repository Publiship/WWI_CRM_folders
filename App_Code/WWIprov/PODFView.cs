using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Logistics{
    /// <summary>
    /// Strongly-typed collection for the PODFView class.
    /// </summary>
    [Serializable]
    public partial class PODFViewCollection : ReadOnlyList<PODFView, PODFViewCollection>
    {        
        public PODFViewCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the PODFView view.
    /// </summary>
    [Serializable]
    public partial class PODFView : ReadOnlyRecord<PODFView>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("PODFView", TableType.View, DataService.GetInstance("WWIprov"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarOrderID = new TableSchema.TableColumn(schema);
                colvarOrderID.ColumnName = "OrderID";
                colvarOrderID.DataType = DbType.Int32;
                colvarOrderID.MaxLength = 0;
                colvarOrderID.AutoIncrement = false;
                colvarOrderID.IsNullable = false;
                colvarOrderID.IsPrimaryKey = false;
                colvarOrderID.IsForeignKey = false;
                colvarOrderID.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderID);
                
                TableSchema.TableColumn colvarOrderNumber = new TableSchema.TableColumn(schema);
                colvarOrderNumber.ColumnName = "OrderNumber";
                colvarOrderNumber.DataType = DbType.Int32;
                colvarOrderNumber.MaxLength = 0;
                colvarOrderNumber.AutoIncrement = false;
                colvarOrderNumber.IsNullable = true;
                colvarOrderNumber.IsPrimaryKey = false;
                colvarOrderNumber.IsForeignKey = false;
                colvarOrderNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderNumber);
                
                TableSchema.TableColumn colvarDateOrderCreated = new TableSchema.TableColumn(schema);
                colvarDateOrderCreated.ColumnName = "DateOrderCreated";
                colvarDateOrderCreated.DataType = DbType.DateTime;
                colvarDateOrderCreated.MaxLength = 0;
                colvarDateOrderCreated.AutoIncrement = false;
                colvarDateOrderCreated.IsNullable = true;
                colvarDateOrderCreated.IsPrimaryKey = false;
                colvarDateOrderCreated.IsForeignKey = false;
                colvarDateOrderCreated.IsReadOnly = false;
                
                schema.Columns.Add(colvarDateOrderCreated);
                
                TableSchema.TableColumn colvarCompanyID = new TableSchema.TableColumn(schema);
                colvarCompanyID.ColumnName = "CompanyID";
                colvarCompanyID.DataType = DbType.Int32;
                colvarCompanyID.MaxLength = 0;
                colvarCompanyID.AutoIncrement = false;
                colvarCompanyID.IsNullable = true;
                colvarCompanyID.IsPrimaryKey = false;
                colvarCompanyID.IsForeignKey = false;
                colvarCompanyID.IsReadOnly = false;
                
                schema.Columns.Add(colvarCompanyID);
                
                TableSchema.TableColumn colvarConsigneeID = new TableSchema.TableColumn(schema);
                colvarConsigneeID.ColumnName = "ConsigneeID";
                colvarConsigneeID.DataType = DbType.Int32;
                colvarConsigneeID.MaxLength = 0;
                colvarConsigneeID.AutoIncrement = false;
                colvarConsigneeID.IsNullable = true;
                colvarConsigneeID.IsPrimaryKey = false;
                colvarConsigneeID.IsForeignKey = false;
                colvarConsigneeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsigneeID);
                
                TableSchema.TableColumn colvarContactID = new TableSchema.TableColumn(schema);
                colvarContactID.ColumnName = "ContactID";
                colvarContactID.DataType = DbType.Int32;
                colvarContactID.MaxLength = 0;
                colvarContactID.AutoIncrement = false;
                colvarContactID.IsNullable = true;
                colvarContactID.IsPrimaryKey = false;
                colvarContactID.IsForeignKey = false;
                colvarContactID.IsReadOnly = false;
                
                schema.Columns.Add(colvarContactID);
                
                TableSchema.TableColumn colvarNotifyPartyID = new TableSchema.TableColumn(schema);
                colvarNotifyPartyID.ColumnName = "NotifyPartyID";
                colvarNotifyPartyID.DataType = DbType.Int32;
                colvarNotifyPartyID.MaxLength = 0;
                colvarNotifyPartyID.AutoIncrement = false;
                colvarNotifyPartyID.IsNullable = true;
                colvarNotifyPartyID.IsPrimaryKey = false;
                colvarNotifyPartyID.IsForeignKey = false;
                colvarNotifyPartyID.IsReadOnly = false;
                
                schema.Columns.Add(colvarNotifyPartyID);
                
                TableSchema.TableColumn colvarAgentAtOriginID = new TableSchema.TableColumn(schema);
                colvarAgentAtOriginID.ColumnName = "AgentAtOriginID";
                colvarAgentAtOriginID.DataType = DbType.Int32;
                colvarAgentAtOriginID.MaxLength = 0;
                colvarAgentAtOriginID.AutoIncrement = false;
                colvarAgentAtOriginID.IsNullable = true;
                colvarAgentAtOriginID.IsPrimaryKey = false;
                colvarAgentAtOriginID.IsForeignKey = false;
                colvarAgentAtOriginID.IsReadOnly = false;
                
                schema.Columns.Add(colvarAgentAtOriginID);
                
                TableSchema.TableColumn colvarOriginPortControllerID = new TableSchema.TableColumn(schema);
                colvarOriginPortControllerID.ColumnName = "OriginPortControllerID";
                colvarOriginPortControllerID.DataType = DbType.Int32;
                colvarOriginPortControllerID.MaxLength = 0;
                colvarOriginPortControllerID.AutoIncrement = false;
                colvarOriginPortControllerID.IsNullable = true;
                colvarOriginPortControllerID.IsPrimaryKey = false;
                colvarOriginPortControllerID.IsForeignKey = false;
                colvarOriginPortControllerID.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginPortControllerID);
                
                TableSchema.TableColumn colvarAgentAtDestinationID = new TableSchema.TableColumn(schema);
                colvarAgentAtDestinationID.ColumnName = "AgentAtDestinationID";
                colvarAgentAtDestinationID.DataType = DbType.Int32;
                colvarAgentAtDestinationID.MaxLength = 0;
                colvarAgentAtDestinationID.AutoIncrement = false;
                colvarAgentAtDestinationID.IsNullable = true;
                colvarAgentAtDestinationID.IsPrimaryKey = false;
                colvarAgentAtDestinationID.IsForeignKey = false;
                colvarAgentAtDestinationID.IsReadOnly = false;
                
                schema.Columns.Add(colvarAgentAtDestinationID);
                
                TableSchema.TableColumn colvarPrinterID = new TableSchema.TableColumn(schema);
                colvarPrinterID.ColumnName = "PrinterID";
                colvarPrinterID.DataType = DbType.Int32;
                colvarPrinterID.MaxLength = 0;
                colvarPrinterID.AutoIncrement = false;
                colvarPrinterID.IsNullable = true;
                colvarPrinterID.IsPrimaryKey = false;
                colvarPrinterID.IsForeignKey = false;
                colvarPrinterID.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinterID);
                
                TableSchema.TableColumn colvarClearingAgentID = new TableSchema.TableColumn(schema);
                colvarClearingAgentID.ColumnName = "ClearingAgentID";
                colvarClearingAgentID.DataType = DbType.Int32;
                colvarClearingAgentID.MaxLength = 0;
                colvarClearingAgentID.AutoIncrement = false;
                colvarClearingAgentID.IsNullable = true;
                colvarClearingAgentID.IsPrimaryKey = false;
                colvarClearingAgentID.IsForeignKey = false;
                colvarClearingAgentID.IsReadOnly = false;
                
                schema.Columns.Add(colvarClearingAgentID);
                
                TableSchema.TableColumn colvarOnCarriageID = new TableSchema.TableColumn(schema);
                colvarOnCarriageID.ColumnName = "OnCarriageID";
                colvarOnCarriageID.DataType = DbType.Int32;
                colvarOnCarriageID.MaxLength = 0;
                colvarOnCarriageID.AutoIncrement = false;
                colvarOnCarriageID.IsNullable = true;
                colvarOnCarriageID.IsPrimaryKey = false;
                colvarOnCarriageID.IsForeignKey = false;
                colvarOnCarriageID.IsReadOnly = false;
                
                schema.Columns.Add(colvarOnCarriageID);
                
                TableSchema.TableColumn colvarOrderControllerID = new TableSchema.TableColumn(schema);
                colvarOrderControllerID.ColumnName = "OrderControllerID";
                colvarOrderControllerID.DataType = DbType.Int32;
                colvarOrderControllerID.MaxLength = 0;
                colvarOrderControllerID.AutoIncrement = false;
                colvarOrderControllerID.IsNullable = true;
                colvarOrderControllerID.IsPrimaryKey = false;
                colvarOrderControllerID.IsForeignKey = false;
                colvarOrderControllerID.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderControllerID);
                
                TableSchema.TableColumn colvarDestinationPortControllerID = new TableSchema.TableColumn(schema);
                colvarDestinationPortControllerID.ColumnName = "DestinationPortControllerID";
                colvarDestinationPortControllerID.DataType = DbType.Int32;
                colvarDestinationPortControllerID.MaxLength = 0;
                colvarDestinationPortControllerID.AutoIncrement = false;
                colvarDestinationPortControllerID.IsNullable = true;
                colvarDestinationPortControllerID.IsPrimaryKey = false;
                colvarDestinationPortControllerID.IsForeignKey = false;
                colvarDestinationPortControllerID.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestinationPortControllerID);
                
                TableSchema.TableColumn colvarCustomersRef = new TableSchema.TableColumn(schema);
                colvarCustomersRef.ColumnName = "CustomersRef";
                colvarCustomersRef.DataType = DbType.String;
                colvarCustomersRef.MaxLength = 20;
                colvarCustomersRef.AutoIncrement = false;
                colvarCustomersRef.IsNullable = true;
                colvarCustomersRef.IsPrimaryKey = false;
                colvarCustomersRef.IsForeignKey = false;
                colvarCustomersRef.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomersRef);
                
                TableSchema.TableColumn colvarHotJob = new TableSchema.TableColumn(schema);
                colvarHotJob.ColumnName = "HotJob";
                colvarHotJob.DataType = DbType.Boolean;
                colvarHotJob.MaxLength = 0;
                colvarHotJob.AutoIncrement = false;
                colvarHotJob.IsNullable = false;
                colvarHotJob.IsPrimaryKey = false;
                colvarHotJob.IsForeignKey = false;
                colvarHotJob.IsReadOnly = false;
                
                schema.Columns.Add(colvarHotJob);
                
                TableSchema.TableColumn colvarExWorksDate = new TableSchema.TableColumn(schema);
                colvarExWorksDate.ColumnName = "ExWorksDate";
                colvarExWorksDate.DataType = DbType.DateTime;
                colvarExWorksDate.MaxLength = 0;
                colvarExWorksDate.AutoIncrement = false;
                colvarExWorksDate.IsNullable = true;
                colvarExWorksDate.IsPrimaryKey = false;
                colvarExWorksDate.IsForeignKey = false;
                colvarExWorksDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarExWorksDate);
                
                TableSchema.TableColumn colvarEWDLastUpdated = new TableSchema.TableColumn(schema);
                colvarEWDLastUpdated.ColumnName = "EWDLastUpdated";
                colvarEWDLastUpdated.DataType = DbType.DateTime;
                colvarEWDLastUpdated.MaxLength = 0;
                colvarEWDLastUpdated.AutoIncrement = false;
                colvarEWDLastUpdated.IsNullable = true;
                colvarEWDLastUpdated.IsPrimaryKey = false;
                colvarEWDLastUpdated.IsForeignKey = false;
                colvarEWDLastUpdated.IsReadOnly = false;
                
                schema.Columns.Add(colvarEWDLastUpdated);
                
                TableSchema.TableColumn colvarCargoReady = new TableSchema.TableColumn(schema);
                colvarCargoReady.ColumnName = "CargoReady";
                colvarCargoReady.DataType = DbType.DateTime;
                colvarCargoReady.MaxLength = 0;
                colvarCargoReady.AutoIncrement = false;
                colvarCargoReady.IsNullable = true;
                colvarCargoReady.IsPrimaryKey = false;
                colvarCargoReady.IsForeignKey = false;
                colvarCargoReady.IsReadOnly = false;
                
                schema.Columns.Add(colvarCargoReady);
                
                TableSchema.TableColumn colvarWarehouseDate = new TableSchema.TableColumn(schema);
                colvarWarehouseDate.ColumnName = "WarehouseDate";
                colvarWarehouseDate.DataType = DbType.DateTime;
                colvarWarehouseDate.MaxLength = 0;
                colvarWarehouseDate.AutoIncrement = false;
                colvarWarehouseDate.IsNullable = true;
                colvarWarehouseDate.IsPrimaryKey = false;
                colvarWarehouseDate.IsForeignKey = false;
                colvarWarehouseDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarWarehouseDate);
                
                TableSchema.TableColumn colvarPortID = new TableSchema.TableColumn(schema);
                colvarPortID.ColumnName = "PortID";
                colvarPortID.DataType = DbType.Int32;
                colvarPortID.MaxLength = 0;
                colvarPortID.AutoIncrement = false;
                colvarPortID.IsNullable = true;
                colvarPortID.IsPrimaryKey = false;
                colvarPortID.IsForeignKey = false;
                colvarPortID.IsReadOnly = false;
                
                schema.Columns.Add(colvarPortID);
                
                TableSchema.TableColumn colvarDestinationPortID = new TableSchema.TableColumn(schema);
                colvarDestinationPortID.ColumnName = "DestinationPortID";
                colvarDestinationPortID.DataType = DbType.Int32;
                colvarDestinationPortID.MaxLength = 0;
                colvarDestinationPortID.AutoIncrement = false;
                colvarDestinationPortID.IsNullable = true;
                colvarDestinationPortID.IsPrimaryKey = false;
                colvarDestinationPortID.IsForeignKey = false;
                colvarDestinationPortID.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestinationPortID);
                
                TableSchema.TableColumn colvarFinalDestinationID = new TableSchema.TableColumn(schema);
                colvarFinalDestinationID.ColumnName = "FinalDestinationID";
                colvarFinalDestinationID.DataType = DbType.Int32;
                colvarFinalDestinationID.MaxLength = 0;
                colvarFinalDestinationID.AutoIncrement = false;
                colvarFinalDestinationID.IsNullable = true;
                colvarFinalDestinationID.IsPrimaryKey = false;
                colvarFinalDestinationID.IsForeignKey = false;
                colvarFinalDestinationID.IsReadOnly = false;
                
                schema.Columns.Add(colvarFinalDestinationID);
                
                TableSchema.TableColumn colvarCountryID = new TableSchema.TableColumn(schema);
                colvarCountryID.ColumnName = "CountryID";
                colvarCountryID.DataType = DbType.Int32;
                colvarCountryID.MaxLength = 0;
                colvarCountryID.AutoIncrement = false;
                colvarCountryID.IsNullable = true;
                colvarCountryID.IsPrimaryKey = false;
                colvarCountryID.IsForeignKey = false;
                colvarCountryID.IsReadOnly = false;
                
                schema.Columns.Add(colvarCountryID);
                
                TableSchema.TableColumn colvarVesselID = new TableSchema.TableColumn(schema);
                colvarVesselID.ColumnName = "VesselID";
                colvarVesselID.DataType = DbType.Int32;
                colvarVesselID.MaxLength = 0;
                colvarVesselID.AutoIncrement = false;
                colvarVesselID.IsNullable = true;
                colvarVesselID.IsPrimaryKey = false;
                colvarVesselID.IsForeignKey = false;
                colvarVesselID.IsReadOnly = false;
                
                schema.Columns.Add(colvarVesselID);
                
                TableSchema.TableColumn colvarVesselLastUpdated = new TableSchema.TableColumn(schema);
                colvarVesselLastUpdated.ColumnName = "VesselLastUpdated";
                colvarVesselLastUpdated.DataType = DbType.DateTime;
                colvarVesselLastUpdated.MaxLength = 0;
                colvarVesselLastUpdated.AutoIncrement = false;
                colvarVesselLastUpdated.IsNullable = true;
                colvarVesselLastUpdated.IsPrimaryKey = false;
                colvarVesselLastUpdated.IsForeignKey = false;
                colvarVesselLastUpdated.IsReadOnly = false;
                
                schema.Columns.Add(colvarVesselLastUpdated);
                
                TableSchema.TableColumn colvarEts = new TableSchema.TableColumn(schema);
                colvarEts.ColumnName = "ETS";
                colvarEts.DataType = DbType.DateTime;
                colvarEts.MaxLength = 0;
                colvarEts.AutoIncrement = false;
                colvarEts.IsNullable = true;
                colvarEts.IsPrimaryKey = false;
                colvarEts.IsForeignKey = false;
                colvarEts.IsReadOnly = false;
                
                schema.Columns.Add(colvarEts);
                
                TableSchema.TableColumn colvarEta = new TableSchema.TableColumn(schema);
                colvarEta.ColumnName = "ETA";
                colvarEta.DataType = DbType.DateTime;
                colvarEta.MaxLength = 0;
                colvarEta.AutoIncrement = false;
                colvarEta.IsNullable = true;
                colvarEta.IsPrimaryKey = false;
                colvarEta.IsForeignKey = false;
                colvarEta.IsReadOnly = false;
                
                schema.Columns.Add(colvarEta);
                
                TableSchema.TableColumn colvarShippedOnBoard = new TableSchema.TableColumn(schema);
                colvarShippedOnBoard.ColumnName = "ShippedOnBoard";
                colvarShippedOnBoard.DataType = DbType.Boolean;
                colvarShippedOnBoard.MaxLength = 0;
                colvarShippedOnBoard.AutoIncrement = false;
                colvarShippedOnBoard.IsNullable = false;
                colvarShippedOnBoard.IsPrimaryKey = false;
                colvarShippedOnBoard.IsForeignKey = false;
                colvarShippedOnBoard.IsReadOnly = false;
                
                schema.Columns.Add(colvarShippedOnBoard);
                
                TableSchema.TableColumn colvarEstCopies = new TableSchema.TableColumn(schema);
                colvarEstCopies.ColumnName = "EstCopies";
                colvarEstCopies.DataType = DbType.Single;
                colvarEstCopies.MaxLength = 0;
                colvarEstCopies.AutoIncrement = false;
                colvarEstCopies.IsNullable = true;
                colvarEstCopies.IsPrimaryKey = false;
                colvarEstCopies.IsForeignKey = false;
                colvarEstCopies.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstCopies);
                
                TableSchema.TableColumn colvarCopiesLastUpdated = new TableSchema.TableColumn(schema);
                colvarCopiesLastUpdated.ColumnName = "CopiesLastUpdated";
                colvarCopiesLastUpdated.DataType = DbType.DateTime;
                colvarCopiesLastUpdated.MaxLength = 0;
                colvarCopiesLastUpdated.AutoIncrement = false;
                colvarCopiesLastUpdated.IsNullable = true;
                colvarCopiesLastUpdated.IsPrimaryKey = false;
                colvarCopiesLastUpdated.IsForeignKey = false;
                colvarCopiesLastUpdated.IsReadOnly = false;
                
                schema.Columns.Add(colvarCopiesLastUpdated);
                
                TableSchema.TableColumn colvarEstCartons = new TableSchema.TableColumn(schema);
                colvarEstCartons.ColumnName = "EstCartons";
                colvarEstCartons.DataType = DbType.Int32;
                colvarEstCartons.MaxLength = 0;
                colvarEstCartons.AutoIncrement = false;
                colvarEstCartons.IsNullable = true;
                colvarEstCartons.IsPrimaryKey = false;
                colvarEstCartons.IsForeignKey = false;
                colvarEstCartons.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstCartons);
                
                TableSchema.TableColumn colvarEstPallets = new TableSchema.TableColumn(schema);
                colvarEstPallets.ColumnName = "EstPallets";
                colvarEstPallets.DataType = DbType.Int32;
                colvarEstPallets.MaxLength = 0;
                colvarEstPallets.AutoIncrement = false;
                colvarEstPallets.IsNullable = true;
                colvarEstPallets.IsPrimaryKey = false;
                colvarEstPallets.IsForeignKey = false;
                colvarEstPallets.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstPallets);
                
                TableSchema.TableColumn colvarEstWeight = new TableSchema.TableColumn(schema);
                colvarEstWeight.ColumnName = "EstWeight";
                colvarEstWeight.DataType = DbType.Int32;
                colvarEstWeight.MaxLength = 0;
                colvarEstWeight.AutoIncrement = false;
                colvarEstWeight.IsNullable = true;
                colvarEstWeight.IsPrimaryKey = false;
                colvarEstWeight.IsForeignKey = false;
                colvarEstWeight.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstWeight);
                
                TableSchema.TableColumn colvarEstVolume = new TableSchema.TableColumn(schema);
                colvarEstVolume.ColumnName = "EstVolume";
                colvarEstVolume.DataType = DbType.Single;
                colvarEstVolume.MaxLength = 0;
                colvarEstVolume.AutoIncrement = false;
                colvarEstVolume.IsNullable = true;
                colvarEstVolume.IsPrimaryKey = false;
                colvarEstVolume.IsForeignKey = false;
                colvarEstVolume.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstVolume);
                
                TableSchema.TableColumn colvarPalletise = new TableSchema.TableColumn(schema);
                colvarPalletise.ColumnName = "Palletise";
                colvarPalletise.DataType = DbType.Int32;
                colvarPalletise.MaxLength = 0;
                colvarPalletise.AutoIncrement = false;
                colvarPalletise.IsNullable = true;
                colvarPalletise.IsPrimaryKey = false;
                colvarPalletise.IsForeignKey = false;
                colvarPalletise.IsReadOnly = false;
                
                schema.Columns.Add(colvarPalletise);
                
                TableSchema.TableColumn colvarActualCartons = new TableSchema.TableColumn(schema);
                colvarActualCartons.ColumnName = "ActualCartons";
                colvarActualCartons.DataType = DbType.Int32;
                colvarActualCartons.MaxLength = 0;
                colvarActualCartons.AutoIncrement = false;
                colvarActualCartons.IsNullable = true;
                colvarActualCartons.IsPrimaryKey = false;
                colvarActualCartons.IsForeignKey = false;
                colvarActualCartons.IsReadOnly = false;
                
                schema.Columns.Add(colvarActualCartons);
                
                TableSchema.TableColumn colvarActualPallets = new TableSchema.TableColumn(schema);
                colvarActualPallets.ColumnName = "ActualPallets";
                colvarActualPallets.DataType = DbType.Int32;
                colvarActualPallets.MaxLength = 0;
                colvarActualPallets.AutoIncrement = false;
                colvarActualPallets.IsNullable = true;
                colvarActualPallets.IsPrimaryKey = false;
                colvarActualPallets.IsForeignKey = false;
                colvarActualPallets.IsReadOnly = false;
                
                schema.Columns.Add(colvarActualPallets);
                
                TableSchema.TableColumn colvarActualWeight = new TableSchema.TableColumn(schema);
                colvarActualWeight.ColumnName = "ActualWeight";
                colvarActualWeight.DataType = DbType.Int32;
                colvarActualWeight.MaxLength = 0;
                colvarActualWeight.AutoIncrement = false;
                colvarActualWeight.IsNullable = true;
                colvarActualWeight.IsPrimaryKey = false;
                colvarActualWeight.IsForeignKey = false;
                colvarActualWeight.IsReadOnly = false;
                
                schema.Columns.Add(colvarActualWeight);
                
                TableSchema.TableColumn colvarWeightLastUpdated = new TableSchema.TableColumn(schema);
                colvarWeightLastUpdated.ColumnName = "WeightLastUpdated";
                colvarWeightLastUpdated.DataType = DbType.DateTime;
                colvarWeightLastUpdated.MaxLength = 0;
                colvarWeightLastUpdated.AutoIncrement = false;
                colvarWeightLastUpdated.IsNullable = true;
                colvarWeightLastUpdated.IsPrimaryKey = false;
                colvarWeightLastUpdated.IsForeignKey = false;
                colvarWeightLastUpdated.IsReadOnly = false;
                
                schema.Columns.Add(colvarWeightLastUpdated);
                
                TableSchema.TableColumn colvarActualVolume = new TableSchema.TableColumn(schema);
                colvarActualVolume.ColumnName = "ActualVolume";
                colvarActualVolume.DataType = DbType.Single;
                colvarActualVolume.MaxLength = 0;
                colvarActualVolume.AutoIncrement = false;
                colvarActualVolume.IsNullable = true;
                colvarActualVolume.IsPrimaryKey = false;
                colvarActualVolume.IsForeignKey = false;
                colvarActualVolume.IsReadOnly = false;
                
                schema.Columns.Add(colvarActualVolume);
                
                TableSchema.TableColumn colvarVolumeLastUpdated = new TableSchema.TableColumn(schema);
                colvarVolumeLastUpdated.ColumnName = "VolumeLastUpdated";
                colvarVolumeLastUpdated.DataType = DbType.DateTime;
                colvarVolumeLastUpdated.MaxLength = 0;
                colvarVolumeLastUpdated.AutoIncrement = false;
                colvarVolumeLastUpdated.IsNullable = true;
                colvarVolumeLastUpdated.IsPrimaryKey = false;
                colvarVolumeLastUpdated.IsForeignKey = false;
                colvarVolumeLastUpdated.IsReadOnly = false;
                
                schema.Columns.Add(colvarVolumeLastUpdated);
                
                TableSchema.TableColumn colvarEst20 = new TableSchema.TableColumn(schema);
                colvarEst20.ColumnName = "Est20";
                colvarEst20.DataType = DbType.Int32;
                colvarEst20.MaxLength = 0;
                colvarEst20.AutoIncrement = false;
                colvarEst20.IsNullable = true;
                colvarEst20.IsPrimaryKey = false;
                colvarEst20.IsForeignKey = false;
                colvarEst20.IsReadOnly = false;
                
                schema.Columns.Add(colvarEst20);
                
                TableSchema.TableColumn colvarEst40 = new TableSchema.TableColumn(schema);
                colvarEst40.ColumnName = "Est40";
                colvarEst40.DataType = DbType.Int32;
                colvarEst40.MaxLength = 0;
                colvarEst40.AutoIncrement = false;
                colvarEst40.IsNullable = true;
                colvarEst40.IsPrimaryKey = false;
                colvarEst40.IsForeignKey = false;
                colvarEst40.IsReadOnly = false;
                
                schema.Columns.Add(colvarEst40);
                
                TableSchema.TableColumn colvarEstLCLWt = new TableSchema.TableColumn(schema);
                colvarEstLCLWt.ColumnName = "EstLCLWt";
                colvarEstLCLWt.DataType = DbType.Int32;
                colvarEstLCLWt.MaxLength = 0;
                colvarEstLCLWt.AutoIncrement = false;
                colvarEstLCLWt.IsNullable = true;
                colvarEstLCLWt.IsPrimaryKey = false;
                colvarEstLCLWt.IsForeignKey = false;
                colvarEstLCLWt.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstLCLWt);
                
                TableSchema.TableColumn colvarEstLCLVol = new TableSchema.TableColumn(schema);
                colvarEstLCLVol.ColumnName = "EstLCLVol";
                colvarEstLCLVol.DataType = DbType.Single;
                colvarEstLCLVol.MaxLength = 0;
                colvarEstLCLVol.AutoIncrement = false;
                colvarEstLCLVol.IsNullable = true;
                colvarEstLCLVol.IsPrimaryKey = false;
                colvarEstLCLVol.IsForeignKey = false;
                colvarEstLCLVol.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstLCLVol);
                
                TableSchema.TableColumn colvarNo20 = new TableSchema.TableColumn(schema);
                colvarNo20.ColumnName = "No20";
                colvarNo20.DataType = DbType.Int32;
                colvarNo20.MaxLength = 0;
                colvarNo20.AutoIncrement = false;
                colvarNo20.IsNullable = true;
                colvarNo20.IsPrimaryKey = false;
                colvarNo20.IsForeignKey = false;
                colvarNo20.IsReadOnly = false;
                
                schema.Columns.Add(colvarNo20);
                
                TableSchema.TableColumn colvarNo40 = new TableSchema.TableColumn(schema);
                colvarNo40.ColumnName = "No40";
                colvarNo40.DataType = DbType.Int32;
                colvarNo40.MaxLength = 0;
                colvarNo40.AutoIncrement = false;
                colvarNo40.IsNullable = true;
                colvarNo40.IsPrimaryKey = false;
                colvarNo40.IsForeignKey = false;
                colvarNo40.IsReadOnly = false;
                
                schema.Columns.Add(colvarNo40);
                
                TableSchema.TableColumn colvarLCLWt = new TableSchema.TableColumn(schema);
                colvarLCLWt.ColumnName = "LCLWt";
                colvarLCLWt.DataType = DbType.Int32;
                colvarLCLWt.MaxLength = 0;
                colvarLCLWt.AutoIncrement = false;
                colvarLCLWt.IsNullable = true;
                colvarLCLWt.IsPrimaryKey = false;
                colvarLCLWt.IsForeignKey = false;
                colvarLCLWt.IsReadOnly = false;
                
                schema.Columns.Add(colvarLCLWt);
                
                TableSchema.TableColumn colvarLCLVol = new TableSchema.TableColumn(schema);
                colvarLCLVol.ColumnName = "LCLVol";
                colvarLCLVol.DataType = DbType.Single;
                colvarLCLVol.MaxLength = 0;
                colvarLCLVol.AutoIncrement = false;
                colvarLCLVol.IsNullable = true;
                colvarLCLVol.IsPrimaryKey = false;
                colvarLCLVol.IsForeignKey = false;
                colvarLCLVol.IsReadOnly = false;
                
                schema.Columns.Add(colvarLCLVol);
                
                TableSchema.TableColumn colvarRemarks = new TableSchema.TableColumn(schema);
                colvarRemarks.ColumnName = "Remarks";
                colvarRemarks.DataType = DbType.String;
                colvarRemarks.MaxLength = 1073741823;
                colvarRemarks.AutoIncrement = false;
                colvarRemarks.IsNullable = true;
                colvarRemarks.IsPrimaryKey = false;
                colvarRemarks.IsForeignKey = false;
                colvarRemarks.IsReadOnly = false;
                
                schema.Columns.Add(colvarRemarks);
                
                TableSchema.TableColumn colvarRemarksToCustomer = new TableSchema.TableColumn(schema);
                colvarRemarksToCustomer.ColumnName = "RemarksToCustomer";
                colvarRemarksToCustomer.DataType = DbType.String;
                colvarRemarksToCustomer.MaxLength = 1073741823;
                colvarRemarksToCustomer.AutoIncrement = false;
                colvarRemarksToCustomer.IsNullable = true;
                colvarRemarksToCustomer.IsPrimaryKey = false;
                colvarRemarksToCustomer.IsForeignKey = false;
                colvarRemarksToCustomer.IsReadOnly = false;
                
                schema.Columns.Add(colvarRemarksToCustomer);
                
                TableSchema.TableColumn colvarSellingrate = new TableSchema.TableColumn(schema);
                colvarSellingrate.ColumnName = "Sellingrate";
                colvarSellingrate.DataType = DbType.String;
                colvarSellingrate.MaxLength = 50;
                colvarSellingrate.AutoIncrement = false;
                colvarSellingrate.IsNullable = true;
                colvarSellingrate.IsPrimaryKey = false;
                colvarSellingrate.IsForeignKey = false;
                colvarSellingrate.IsReadOnly = false;
                
                schema.Columns.Add(colvarSellingrate);
                
                TableSchema.TableColumn colvarJobClosureDate = new TableSchema.TableColumn(schema);
                colvarJobClosureDate.ColumnName = "JobClosureDate";
                colvarJobClosureDate.DataType = DbType.DateTime;
                colvarJobClosureDate.MaxLength = 0;
                colvarJobClosureDate.AutoIncrement = false;
                colvarJobClosureDate.IsNullable = true;
                colvarJobClosureDate.IsPrimaryKey = false;
                colvarJobClosureDate.IsForeignKey = false;
                colvarJobClosureDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarJobClosureDate);
                
                TableSchema.TableColumn colvarJobClosed = new TableSchema.TableColumn(schema);
                colvarJobClosed.ColumnName = "JobClosed";
                colvarJobClosed.DataType = DbType.Boolean;
                colvarJobClosed.MaxLength = 0;
                colvarJobClosed.AutoIncrement = false;
                colvarJobClosed.IsNullable = false;
                colvarJobClosed.IsPrimaryKey = false;
                colvarJobClosed.IsForeignKey = false;
                colvarJobClosed.IsReadOnly = false;
                
                schema.Columns.Add(colvarJobClosed);
                
                TableSchema.TableColumn colvarExpressBL = new TableSchema.TableColumn(schema);
                colvarExpressBL.ColumnName = "ExpressBL";
                colvarExpressBL.DataType = DbType.Boolean;
                colvarExpressBL.MaxLength = 0;
                colvarExpressBL.AutoIncrement = false;
                colvarExpressBL.IsNullable = false;
                colvarExpressBL.IsPrimaryKey = false;
                colvarExpressBL.IsForeignKey = false;
                colvarExpressBL.IsReadOnly = false;
                
                schema.Columns.Add(colvarExpressBL);
                
                TableSchema.TableColumn colvarFumigationCert = new TableSchema.TableColumn(schema);
                colvarFumigationCert.ColumnName = "FumigationCert";
                colvarFumigationCert.DataType = DbType.Boolean;
                colvarFumigationCert.MaxLength = 0;
                colvarFumigationCert.AutoIncrement = false;
                colvarFumigationCert.IsNullable = false;
                colvarFumigationCert.IsPrimaryKey = false;
                colvarFumigationCert.IsForeignKey = false;
                colvarFumigationCert.IsReadOnly = false;
                
                schema.Columns.Add(colvarFumigationCert);
                
                TableSchema.TableColumn colvarGSPCert = new TableSchema.TableColumn(schema);
                colvarGSPCert.ColumnName = "GSPCert";
                colvarGSPCert.DataType = DbType.Boolean;
                colvarGSPCert.MaxLength = 0;
                colvarGSPCert.AutoIncrement = false;
                colvarGSPCert.IsNullable = false;
                colvarGSPCert.IsPrimaryKey = false;
                colvarGSPCert.IsForeignKey = false;
                colvarGSPCert.IsReadOnly = false;
                
                schema.Columns.Add(colvarGSPCert);
                
                TableSchema.TableColumn colvarCOfO = new TableSchema.TableColumn(schema);
                colvarCOfO.ColumnName = "COfO";
                colvarCOfO.DataType = DbType.Boolean;
                colvarCOfO.MaxLength = 0;
                colvarCOfO.AutoIncrement = false;
                colvarCOfO.IsNullable = false;
                colvarCOfO.IsPrimaryKey = false;
                colvarCOfO.IsForeignKey = false;
                colvarCOfO.IsReadOnly = false;
                
                schema.Columns.Add(colvarCOfO);
                
                TableSchema.TableColumn colvarPackingDeclaration = new TableSchema.TableColumn(schema);
                colvarPackingDeclaration.ColumnName = "PackingDeclaration";
                colvarPackingDeclaration.DataType = DbType.Boolean;
                colvarPackingDeclaration.MaxLength = 0;
                colvarPackingDeclaration.AutoIncrement = false;
                colvarPackingDeclaration.IsNullable = false;
                colvarPackingDeclaration.IsPrimaryKey = false;
                colvarPackingDeclaration.IsForeignKey = false;
                colvarPackingDeclaration.IsReadOnly = false;
                
                schema.Columns.Add(colvarPackingDeclaration);
                
                TableSchema.TableColumn colvarOtherDocsRequired = new TableSchema.TableColumn(schema);
                colvarOtherDocsRequired.ColumnName = "OtherDocsRequired";
                colvarOtherDocsRequired.DataType = DbType.String;
                colvarOtherDocsRequired.MaxLength = 50;
                colvarOtherDocsRequired.AutoIncrement = false;
                colvarOtherDocsRequired.IsNullable = true;
                colvarOtherDocsRequired.IsPrimaryKey = false;
                colvarOtherDocsRequired.IsForeignKey = false;
                colvarOtherDocsRequired.IsReadOnly = false;
                
                schema.Columns.Add(colvarOtherDocsRequired);
                
                TableSchema.TableColumn colvarConsolNumber = new TableSchema.TableColumn(schema);
                colvarConsolNumber.ColumnName = "ConsolNumber";
                colvarConsolNumber.DataType = DbType.Int32;
                colvarConsolNumber.MaxLength = 0;
                colvarConsolNumber.AutoIncrement = false;
                colvarConsolNumber.IsNullable = true;
                colvarConsolNumber.IsPrimaryKey = false;
                colvarConsolNumber.IsForeignKey = false;
                colvarConsolNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsolNumber);
                
                TableSchema.TableColumn colvarCourierDetailsEntered = new TableSchema.TableColumn(schema);
                colvarCourierDetailsEntered.ColumnName = "CourierDetailsEntered";
                colvarCourierDetailsEntered.DataType = DbType.String;
                colvarCourierDetailsEntered.MaxLength = 50;
                colvarCourierDetailsEntered.AutoIncrement = false;
                colvarCourierDetailsEntered.IsNullable = true;
                colvarCourierDetailsEntered.IsPrimaryKey = false;
                colvarCourierDetailsEntered.IsForeignKey = false;
                colvarCourierDetailsEntered.IsReadOnly = false;
                
                schema.Columns.Add(colvarCourierDetailsEntered);
                
                TableSchema.TableColumn colvarHodderPricePerCopy = new TableSchema.TableColumn(schema);
                colvarHodderPricePerCopy.ColumnName = "HodderPricePerCopy";
                colvarHodderPricePerCopy.DataType = DbType.Single;
                colvarHodderPricePerCopy.MaxLength = 0;
                colvarHodderPricePerCopy.AutoIncrement = false;
                colvarHodderPricePerCopy.IsNullable = true;
                colvarHodderPricePerCopy.IsPrimaryKey = false;
                colvarHodderPricePerCopy.IsForeignKey = false;
                colvarHodderPricePerCopy.IsReadOnly = false;
                
                schema.Columns.Add(colvarHodderPricePerCopy);
                
                TableSchema.TableColumn colvarJackets = new TableSchema.TableColumn(schema);
                colvarJackets.ColumnName = "Jackets";
                colvarJackets.DataType = DbType.Int32;
                colvarJackets.MaxLength = 0;
                colvarJackets.AutoIncrement = false;
                colvarJackets.IsNullable = true;
                colvarJackets.IsPrimaryKey = false;
                colvarJackets.IsForeignKey = false;
                colvarJackets.IsReadOnly = false;
                
                schema.Columns.Add(colvarJackets);
                
                TableSchema.TableColumn colvarOriginPointID = new TableSchema.TableColumn(schema);
                colvarOriginPointID.ColumnName = "OriginPointID";
                colvarOriginPointID.DataType = DbType.Int32;
                colvarOriginPointID.MaxLength = 0;
                colvarOriginPointID.AutoIncrement = false;
                colvarOriginPointID.IsNullable = true;
                colvarOriginPointID.IsPrimaryKey = false;
                colvarOriginPointID.IsForeignKey = false;
                colvarOriginPointID.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginPointID);
                
                TableSchema.TableColumn colvarPublishipOrder = new TableSchema.TableColumn(schema);
                colvarPublishipOrder.ColumnName = "PublishipOrder";
                colvarPublishipOrder.DataType = DbType.Boolean;
                colvarPublishipOrder.MaxLength = 0;
                colvarPublishipOrder.AutoIncrement = false;
                colvarPublishipOrder.IsNullable = false;
                colvarPublishipOrder.IsPrimaryKey = false;
                colvarPublishipOrder.IsForeignKey = false;
                colvarPublishipOrder.IsReadOnly = false;
                
                schema.Columns.Add(colvarPublishipOrder);
                
                TableSchema.TableColumn colvarOfficeIndicator = new TableSchema.TableColumn(schema);
                colvarOfficeIndicator.ColumnName = "OfficeIndicator";
                colvarOfficeIndicator.DataType = DbType.String;
                colvarOfficeIndicator.MaxLength = 50;
                colvarOfficeIndicator.AutoIncrement = false;
                colvarOfficeIndicator.IsNullable = true;
                colvarOfficeIndicator.IsPrimaryKey = false;
                colvarOfficeIndicator.IsForeignKey = false;
                colvarOfficeIndicator.IsReadOnly = false;
                
                schema.Columns.Add(colvarOfficeIndicator);
                
                TableSchema.TableColumn colvarClientsTerms = new TableSchema.TableColumn(schema);
                colvarClientsTerms.ColumnName = "ClientsTerms";
                colvarClientsTerms.DataType = DbType.String;
                colvarClientsTerms.MaxLength = 50;
                colvarClientsTerms.AutoIncrement = false;
                colvarClientsTerms.IsNullable = true;
                colvarClientsTerms.IsPrimaryKey = false;
                colvarClientsTerms.IsForeignKey = false;
                colvarClientsTerms.IsReadOnly = false;
                
                schema.Columns.Add(colvarClientsTerms);
                
                TableSchema.TableColumn colvarOriginTrucking = new TableSchema.TableColumn(schema);
                colvarOriginTrucking.ColumnName = "OriginTrucking";
                colvarOriginTrucking.DataType = DbType.String;
                colvarOriginTrucking.MaxLength = 50;
                colvarOriginTrucking.AutoIncrement = false;
                colvarOriginTrucking.IsNullable = true;
                colvarOriginTrucking.IsPrimaryKey = false;
                colvarOriginTrucking.IsForeignKey = false;
                colvarOriginTrucking.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginTrucking);
                
                TableSchema.TableColumn colvarOrignTHC = new TableSchema.TableColumn(schema);
                colvarOrignTHC.ColumnName = "OrignTHC";
                colvarOrignTHC.DataType = DbType.String;
                colvarOrignTHC.MaxLength = 50;
                colvarOrignTHC.AutoIncrement = false;
                colvarOrignTHC.IsNullable = true;
                colvarOrignTHC.IsPrimaryKey = false;
                colvarOrignTHC.IsForeignKey = false;
                colvarOrignTHC.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrignTHC);
                
                TableSchema.TableColumn colvarOriginDocs = new TableSchema.TableColumn(schema);
                colvarOriginDocs.ColumnName = "OriginDocs";
                colvarOriginDocs.DataType = DbType.String;
                colvarOriginDocs.MaxLength = 50;
                colvarOriginDocs.AutoIncrement = false;
                colvarOriginDocs.IsNullable = true;
                colvarOriginDocs.IsPrimaryKey = false;
                colvarOriginDocs.IsForeignKey = false;
                colvarOriginDocs.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginDocs);
                
                TableSchema.TableColumn colvarFreight = new TableSchema.TableColumn(schema);
                colvarFreight.ColumnName = "Freight";
                colvarFreight.DataType = DbType.String;
                colvarFreight.MaxLength = 50;
                colvarFreight.AutoIncrement = false;
                colvarFreight.IsNullable = true;
                colvarFreight.IsPrimaryKey = false;
                colvarFreight.IsForeignKey = false;
                colvarFreight.IsReadOnly = false;
                
                schema.Columns.Add(colvarFreight);
                
                TableSchema.TableColumn colvarDestTHC = new TableSchema.TableColumn(schema);
                colvarDestTHC.ColumnName = "DestTHC";
                colvarDestTHC.DataType = DbType.String;
                colvarDestTHC.MaxLength = 50;
                colvarDestTHC.AutoIncrement = false;
                colvarDestTHC.IsNullable = true;
                colvarDestTHC.IsPrimaryKey = false;
                colvarDestTHC.IsForeignKey = false;
                colvarDestTHC.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestTHC);
                
                TableSchema.TableColumn colvarCustomsClearance = new TableSchema.TableColumn(schema);
                colvarCustomsClearance.ColumnName = "CustomsClearance";
                colvarCustomsClearance.DataType = DbType.String;
                colvarCustomsClearance.MaxLength = 50;
                colvarCustomsClearance.AutoIncrement = false;
                colvarCustomsClearance.IsNullable = true;
                colvarCustomsClearance.IsPrimaryKey = false;
                colvarCustomsClearance.IsForeignKey = false;
                colvarCustomsClearance.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomsClearance);
                
                TableSchema.TableColumn colvarDeliveryCharges = new TableSchema.TableColumn(schema);
                colvarDeliveryCharges.ColumnName = "DeliveryCharges";
                colvarDeliveryCharges.DataType = DbType.String;
                colvarDeliveryCharges.MaxLength = 50;
                colvarDeliveryCharges.AutoIncrement = false;
                colvarDeliveryCharges.IsNullable = true;
                colvarDeliveryCharges.IsPrimaryKey = false;
                colvarDeliveryCharges.IsForeignKey = false;
                colvarDeliveryCharges.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeliveryCharges);
                
                TableSchema.TableColumn colvarCoLoaderComments = new TableSchema.TableColumn(schema);
                colvarCoLoaderComments.ColumnName = "CoLoaderComments";
                colvarCoLoaderComments.DataType = DbType.String;
                colvarCoLoaderComments.MaxLength = 1073741823;
                colvarCoLoaderComments.AutoIncrement = false;
                colvarCoLoaderComments.IsNullable = true;
                colvarCoLoaderComments.IsPrimaryKey = false;
                colvarCoLoaderComments.IsForeignKey = false;
                colvarCoLoaderComments.IsReadOnly = false;
                
                schema.Columns.Add(colvarCoLoaderComments);
                
                TableSchema.TableColumn colvarEXPR1 = new TableSchema.TableColumn(schema);
                colvarEXPR1.ColumnName = "EXPR1";
                colvarEXPR1.DataType = DbType.String;
                colvarEXPR1.MaxLength = 50;
                colvarEXPR1.AutoIncrement = false;
                colvarEXPR1.IsNullable = true;
                colvarEXPR1.IsPrimaryKey = false;
                colvarEXPR1.IsForeignKey = false;
                colvarEXPR1.IsReadOnly = false;
                
                schema.Columns.Add(colvarEXPR1);
                
                TableSchema.TableColumn colvarImpression = new TableSchema.TableColumn(schema);
                colvarImpression.ColumnName = "Impression";
                colvarImpression.DataType = DbType.String;
                colvarImpression.MaxLength = 50;
                colvarImpression.AutoIncrement = false;
                colvarImpression.IsNullable = true;
                colvarImpression.IsPrimaryKey = false;
                colvarImpression.IsForeignKey = false;
                colvarImpression.IsReadOnly = false;
                
                schema.Columns.Add(colvarImpression);
                
                TableSchema.TableColumn colvarHCCompositeRef = new TableSchema.TableColumn(schema);
                colvarHCCompositeRef.ColumnName = "HCCompositeRef";
                colvarHCCompositeRef.DataType = DbType.String;
                colvarHCCompositeRef.MaxLength = 50;
                colvarHCCompositeRef.AutoIncrement = false;
                colvarHCCompositeRef.IsNullable = true;
                colvarHCCompositeRef.IsPrimaryKey = false;
                colvarHCCompositeRef.IsForeignKey = false;
                colvarHCCompositeRef.IsReadOnly = false;
                
                schema.Columns.Add(colvarHCCompositeRef);
                
                TableSchema.TableColumn colvarHCInvoiceAmount = new TableSchema.TableColumn(schema);
                colvarHCInvoiceAmount.ColumnName = "HCInvoiceAmount";
                colvarHCInvoiceAmount.DataType = DbType.Currency;
                colvarHCInvoiceAmount.MaxLength = 0;
                colvarHCInvoiceAmount.AutoIncrement = false;
                colvarHCInvoiceAmount.IsNullable = true;
                colvarHCInvoiceAmount.IsPrimaryKey = false;
                colvarHCInvoiceAmount.IsForeignKey = false;
                colvarHCInvoiceAmount.IsReadOnly = false;
                
                schema.Columns.Add(colvarHCInvoiceAmount);
                
                TableSchema.TableColumn colvarDocsRcdAndApproved = new TableSchema.TableColumn(schema);
                colvarDocsRcdAndApproved.ColumnName = "DocsRcdAndApproved";
                colvarDocsRcdAndApproved.DataType = DbType.Boolean;
                colvarDocsRcdAndApproved.MaxLength = 0;
                colvarDocsRcdAndApproved.AutoIncrement = false;
                colvarDocsRcdAndApproved.IsNullable = false;
                colvarDocsRcdAndApproved.IsPrimaryKey = false;
                colvarDocsRcdAndApproved.IsForeignKey = false;
                colvarDocsRcdAndApproved.IsReadOnly = false;
                
                schema.Columns.Add(colvarDocsRcdAndApproved);
                
                TableSchema.TableColumn colvarDocsApprovedDate = new TableSchema.TableColumn(schema);
                colvarDocsApprovedDate.ColumnName = "DocsApprovedDate";
                colvarDocsApprovedDate.DataType = DbType.DateTime;
                colvarDocsApprovedDate.MaxLength = 0;
                colvarDocsApprovedDate.AutoIncrement = false;
                colvarDocsApprovedDate.IsNullable = true;
                colvarDocsApprovedDate.IsPrimaryKey = false;
                colvarDocsApprovedDate.IsForeignKey = false;
                colvarDocsApprovedDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarDocsApprovedDate);
                
                TableSchema.TableColumn colvarIncoterms = new TableSchema.TableColumn(schema);
                colvarIncoterms.ColumnName = "Incoterms";
                colvarIncoterms.DataType = DbType.String;
                colvarIncoterms.MaxLength = 50;
                colvarIncoterms.AutoIncrement = false;
                colvarIncoterms.IsNullable = true;
                colvarIncoterms.IsPrimaryKey = false;
                colvarIncoterms.IsForeignKey = false;
                colvarIncoterms.IsReadOnly = false;
                
                schema.Columns.Add(colvarIncoterms);
                
                TableSchema.TableColumn colvarPricePerCopy = new TableSchema.TableColumn(schema);
                colvarPricePerCopy.ColumnName = "PricePerCopy";
                colvarPricePerCopy.DataType = DbType.Single;
                colvarPricePerCopy.MaxLength = 0;
                colvarPricePerCopy.AutoIncrement = false;
                colvarPricePerCopy.IsNullable = true;
                colvarPricePerCopy.IsPrimaryKey = false;
                colvarPricePerCopy.IsForeignKey = false;
                colvarPricePerCopy.IsReadOnly = false;
                
                schema.Columns.Add(colvarPricePerCopy);
                
                TableSchema.TableColumn colvarCustoms = new TableSchema.TableColumn(schema);
                colvarCustoms.ColumnName = "Customs";
                colvarCustoms.DataType = DbType.String;
                colvarCustoms.MaxLength = 15;
                colvarCustoms.AutoIncrement = false;
                colvarCustoms.IsNullable = true;
                colvarCustoms.IsPrimaryKey = false;
                colvarCustoms.IsForeignKey = false;
                colvarCustoms.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustoms);
                
                TableSchema.TableColumn colvarCurrency = new TableSchema.TableColumn(schema);
                colvarCurrency.ColumnName = "Currency";
                colvarCurrency.DataType = DbType.String;
                colvarCurrency.MaxLength = 3;
                colvarCurrency.AutoIncrement = false;
                colvarCurrency.IsNullable = true;
                colvarCurrency.IsPrimaryKey = false;
                colvarCurrency.IsForeignKey = false;
                colvarCurrency.IsReadOnly = false;
                
                schema.Columns.Add(colvarCurrency);
                
                TableSchema.TableColumn colvarInvoiceAddresseeID = new TableSchema.TableColumn(schema);
                colvarInvoiceAddresseeID.ColumnName = "InvoiceAddresseeID";
                colvarInvoiceAddresseeID.DataType = DbType.Int32;
                colvarInvoiceAddresseeID.MaxLength = 0;
                colvarInvoiceAddresseeID.AutoIncrement = false;
                colvarInvoiceAddresseeID.IsNullable = true;
                colvarInvoiceAddresseeID.IsPrimaryKey = false;
                colvarInvoiceAddresseeID.IsForeignKey = false;
                colvarInvoiceAddresseeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarInvoiceAddresseeID);
                
                TableSchema.TableColumn colvarSellingrateAgent = new TableSchema.TableColumn(schema);
                colvarSellingrateAgent.ColumnName = "SellingrateAgent";
                colvarSellingrateAgent.DataType = DbType.String;
                colvarSellingrateAgent.MaxLength = 50;
                colvarSellingrateAgent.AutoIncrement = false;
                colvarSellingrateAgent.IsNullable = true;
                colvarSellingrateAgent.IsPrimaryKey = false;
                colvarSellingrateAgent.IsForeignKey = false;
                colvarSellingrateAgent.IsReadOnly = false;
                
                schema.Columns.Add(colvarSellingrateAgent);
                
                TableSchema.TableColumn colvarBookingReceived = new TableSchema.TableColumn(schema);
                colvarBookingReceived.ColumnName = "BookingReceived";
                colvarBookingReceived.DataType = DbType.DateTime;
                colvarBookingReceived.MaxLength = 0;
                colvarBookingReceived.AutoIncrement = false;
                colvarBookingReceived.IsNullable = true;
                colvarBookingReceived.IsPrimaryKey = false;
                colvarBookingReceived.IsForeignKey = false;
                colvarBookingReceived.IsReadOnly = false;
                
                schema.Columns.Add(colvarBookingReceived);
                
                TableSchema.TableColumn colvarPackageTypeID = new TableSchema.TableColumn(schema);
                colvarPackageTypeID.ColumnName = "PackageTypeID";
                colvarPackageTypeID.DataType = DbType.Int32;
                colvarPackageTypeID.MaxLength = 0;
                colvarPackageTypeID.AutoIncrement = false;
                colvarPackageTypeID.IsNullable = true;
                colvarPackageTypeID.IsPrimaryKey = false;
                colvarPackageTypeID.IsForeignKey = false;
                colvarPackageTypeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarPackageTypeID);
                
                TableSchema.TableColumn colvarNumberOfPackages = new TableSchema.TableColumn(schema);
                colvarNumberOfPackages.ColumnName = "NumberOfPackages";
                colvarNumberOfPackages.DataType = DbType.Int32;
                colvarNumberOfPackages.MaxLength = 0;
                colvarNumberOfPackages.AutoIncrement = false;
                colvarNumberOfPackages.IsNullable = true;
                colvarNumberOfPackages.IsPrimaryKey = false;
                colvarNumberOfPackages.IsForeignKey = false;
                colvarNumberOfPackages.IsReadOnly = false;
                
                schema.Columns.Add(colvarNumberOfPackages);
                
                TableSchema.TableColumn colvarOperationsControllerID = new TableSchema.TableColumn(schema);
                colvarOperationsControllerID.ColumnName = "OperationsControllerID";
                colvarOperationsControllerID.DataType = DbType.Int32;
                colvarOperationsControllerID.MaxLength = 0;
                colvarOperationsControllerID.AutoIncrement = false;
                colvarOperationsControllerID.IsNullable = true;
                colvarOperationsControllerID.IsPrimaryKey = false;
                colvarOperationsControllerID.IsForeignKey = false;
                colvarOperationsControllerID.IsReadOnly = false;
                
                schema.Columns.Add(colvarOperationsControllerID);
                
                TableSchema.TableColumn colvarHouseBLNUmber = new TableSchema.TableColumn(schema);
                colvarHouseBLNUmber.ColumnName = "HouseBLNUmber";
                colvarHouseBLNUmber.DataType = DbType.String;
                colvarHouseBLNUmber.MaxLength = 50;
                colvarHouseBLNUmber.AutoIncrement = false;
                colvarHouseBLNUmber.IsNullable = true;
                colvarHouseBLNUmber.IsPrimaryKey = false;
                colvarHouseBLNUmber.IsForeignKey = false;
                colvarHouseBLNUmber.IsReadOnly = false;
                
                schema.Columns.Add(colvarHouseBLNUmber);
                
                TableSchema.TableColumn colvarInsuranceValue = new TableSchema.TableColumn(schema);
                colvarInsuranceValue.ColumnName = "InsuranceValue";
                colvarInsuranceValue.DataType = DbType.Currency;
                colvarInsuranceValue.MaxLength = 0;
                colvarInsuranceValue.AutoIncrement = false;
                colvarInsuranceValue.IsNullable = true;
                colvarInsuranceValue.IsPrimaryKey = false;
                colvarInsuranceValue.IsForeignKey = false;
                colvarInsuranceValue.IsReadOnly = false;
                
                schema.Columns.Add(colvarInsuranceValue);
                
                TableSchema.TableColumn colvarHCInvoiceAmount2 = new TableSchema.TableColumn(schema);
                colvarHCInvoiceAmount2.ColumnName = "HCInvoiceAmount2";
                colvarHCInvoiceAmount2.DataType = DbType.Currency;
                colvarHCInvoiceAmount2.MaxLength = 0;
                colvarHCInvoiceAmount2.AutoIncrement = false;
                colvarHCInvoiceAmount2.IsNullable = true;
                colvarHCInvoiceAmount2.IsPrimaryKey = false;
                colvarHCInvoiceAmount2.IsForeignKey = false;
                colvarHCInvoiceAmount2.IsReadOnly = false;
                
                schema.Columns.Add(colvarHCInvoiceAmount2);
                
                TableSchema.TableColumn colvarFcllcl = new TableSchema.TableColumn(schema);
                colvarFcllcl.ColumnName = "FCLLCL";
                colvarFcllcl.DataType = DbType.Boolean;
                colvarFcllcl.MaxLength = 0;
                colvarFcllcl.AutoIncrement = false;
                colvarFcllcl.IsNullable = true;
                colvarFcllcl.IsPrimaryKey = false;
                colvarFcllcl.IsForeignKey = false;
                colvarFcllcl.IsReadOnly = false;
                
                schema.Columns.Add(colvarFcllcl);
                
                TableSchema.TableColumn colvarTs = new TableSchema.TableColumn(schema);
                colvarTs.ColumnName = "TS";
                colvarTs.DataType = DbType.Binary;
                colvarTs.MaxLength = 0;
                colvarTs.AutoIncrement = false;
                colvarTs.IsNullable = true;
                colvarTs.IsPrimaryKey = false;
                colvarTs.IsForeignKey = false;
                colvarTs.IsReadOnly = true;
                
                schema.Columns.Add(colvarTs);
                
                TableSchema.TableColumn colvarQuoteId = new TableSchema.TableColumn(schema);
                colvarQuoteId.ColumnName = "quote_id";
                colvarQuoteId.DataType = DbType.Int32;
                colvarQuoteId.MaxLength = 0;
                colvarQuoteId.AutoIncrement = false;
                colvarQuoteId.IsNullable = true;
                colvarQuoteId.IsPrimaryKey = false;
                colvarQuoteId.IsForeignKey = false;
                colvarQuoteId.IsReadOnly = false;
                
                schema.Columns.Add(colvarQuoteId);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["WWIprov"].AddSchema("PODFView",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public PODFView()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public PODFView(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public PODFView(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public PODFView(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("OrderID")]
        [Bindable(true)]
        public int OrderID 
	    {
		    get
		    {
			    return GetColumnValue<int>("OrderID");
		    }
            set 
		    {
			    SetColumnValue("OrderID", value);
            }
        }
	      
        [XmlAttribute("OrderNumber")]
        [Bindable(true)]
        public int? OrderNumber 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OrderNumber");
		    }
            set 
		    {
			    SetColumnValue("OrderNumber", value);
            }
        }
	      
        [XmlAttribute("DateOrderCreated")]
        [Bindable(true)]
        public DateTime? DateOrderCreated 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("DateOrderCreated");
		    }
            set 
		    {
			    SetColumnValue("DateOrderCreated", value);
            }
        }
	      
        [XmlAttribute("CompanyID")]
        [Bindable(true)]
        public int? CompanyID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CompanyID");
		    }
            set 
		    {
			    SetColumnValue("CompanyID", value);
            }
        }
	      
        [XmlAttribute("ConsigneeID")]
        [Bindable(true)]
        public int? ConsigneeID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ConsigneeID");
		    }
            set 
		    {
			    SetColumnValue("ConsigneeID", value);
            }
        }
	      
        [XmlAttribute("ContactID")]
        [Bindable(true)]
        public int? ContactID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ContactID");
		    }
            set 
		    {
			    SetColumnValue("ContactID", value);
            }
        }
	      
        [XmlAttribute("NotifyPartyID")]
        [Bindable(true)]
        public int? NotifyPartyID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("NotifyPartyID");
		    }
            set 
		    {
			    SetColumnValue("NotifyPartyID", value);
            }
        }
	      
        [XmlAttribute("AgentAtOriginID")]
        [Bindable(true)]
        public int? AgentAtOriginID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("AgentAtOriginID");
		    }
            set 
		    {
			    SetColumnValue("AgentAtOriginID", value);
            }
        }
	      
        [XmlAttribute("OriginPortControllerID")]
        [Bindable(true)]
        public int? OriginPortControllerID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OriginPortControllerID");
		    }
            set 
		    {
			    SetColumnValue("OriginPortControllerID", value);
            }
        }
	      
        [XmlAttribute("AgentAtDestinationID")]
        [Bindable(true)]
        public int? AgentAtDestinationID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("AgentAtDestinationID");
		    }
            set 
		    {
			    SetColumnValue("AgentAtDestinationID", value);
            }
        }
	      
        [XmlAttribute("PrinterID")]
        [Bindable(true)]
        public int? PrinterID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PrinterID");
		    }
            set 
		    {
			    SetColumnValue("PrinterID", value);
            }
        }
	      
        [XmlAttribute("ClearingAgentID")]
        [Bindable(true)]
        public int? ClearingAgentID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ClearingAgentID");
		    }
            set 
		    {
			    SetColumnValue("ClearingAgentID", value);
            }
        }
	      
        [XmlAttribute("OnCarriageID")]
        [Bindable(true)]
        public int? OnCarriageID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OnCarriageID");
		    }
            set 
		    {
			    SetColumnValue("OnCarriageID", value);
            }
        }
	      
        [XmlAttribute("OrderControllerID")]
        [Bindable(true)]
        public int? OrderControllerID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OrderControllerID");
		    }
            set 
		    {
			    SetColumnValue("OrderControllerID", value);
            }
        }
	      
        [XmlAttribute("DestinationPortControllerID")]
        [Bindable(true)]
        public int? DestinationPortControllerID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("DestinationPortControllerID");
		    }
            set 
		    {
			    SetColumnValue("DestinationPortControllerID", value);
            }
        }
	      
        [XmlAttribute("CustomersRef")]
        [Bindable(true)]
        public string CustomersRef 
	    {
		    get
		    {
			    return GetColumnValue<string>("CustomersRef");
		    }
            set 
		    {
			    SetColumnValue("CustomersRef", value);
            }
        }
	      
        [XmlAttribute("HotJob")]
        [Bindable(true)]
        public bool HotJob 
	    {
		    get
		    {
			    return GetColumnValue<bool>("HotJob");
		    }
            set 
		    {
			    SetColumnValue("HotJob", value);
            }
        }
	      
        [XmlAttribute("ExWorksDate")]
        [Bindable(true)]
        public DateTime? ExWorksDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ExWorksDate");
		    }
            set 
		    {
			    SetColumnValue("ExWorksDate", value);
            }
        }
	      
        [XmlAttribute("EWDLastUpdated")]
        [Bindable(true)]
        public DateTime? EWDLastUpdated 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("EWDLastUpdated");
		    }
            set 
		    {
			    SetColumnValue("EWDLastUpdated", value);
            }
        }
	      
        [XmlAttribute("CargoReady")]
        [Bindable(true)]
        public DateTime? CargoReady 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("CargoReady");
		    }
            set 
		    {
			    SetColumnValue("CargoReady", value);
            }
        }
	      
        [XmlAttribute("WarehouseDate")]
        [Bindable(true)]
        public DateTime? WarehouseDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("WarehouseDate");
		    }
            set 
		    {
			    SetColumnValue("WarehouseDate", value);
            }
        }
	      
        [XmlAttribute("PortID")]
        [Bindable(true)]
        public int? PortID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PortID");
		    }
            set 
		    {
			    SetColumnValue("PortID", value);
            }
        }
	      
        [XmlAttribute("DestinationPortID")]
        [Bindable(true)]
        public int? DestinationPortID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("DestinationPortID");
		    }
            set 
		    {
			    SetColumnValue("DestinationPortID", value);
            }
        }
	      
        [XmlAttribute("FinalDestinationID")]
        [Bindable(true)]
        public int? FinalDestinationID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("FinalDestinationID");
		    }
            set 
		    {
			    SetColumnValue("FinalDestinationID", value);
            }
        }
	      
        [XmlAttribute("CountryID")]
        [Bindable(true)]
        public int? CountryID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CountryID");
		    }
            set 
		    {
			    SetColumnValue("CountryID", value);
            }
        }
	      
        [XmlAttribute("VesselID")]
        [Bindable(true)]
        public int? VesselID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("VesselID");
		    }
            set 
		    {
			    SetColumnValue("VesselID", value);
            }
        }
	      
        [XmlAttribute("VesselLastUpdated")]
        [Bindable(true)]
        public DateTime? VesselLastUpdated 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("VesselLastUpdated");
		    }
            set 
		    {
			    SetColumnValue("VesselLastUpdated", value);
            }
        }
	      
        [XmlAttribute("Ets")]
        [Bindable(true)]
        public DateTime? Ets 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ETS");
		    }
            set 
		    {
			    SetColumnValue("ETS", value);
            }
        }
	      
        [XmlAttribute("Eta")]
        [Bindable(true)]
        public DateTime? Eta 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ETA");
		    }
            set 
		    {
			    SetColumnValue("ETA", value);
            }
        }
	      
        [XmlAttribute("ShippedOnBoard")]
        [Bindable(true)]
        public bool ShippedOnBoard 
	    {
		    get
		    {
			    return GetColumnValue<bool>("ShippedOnBoard");
		    }
            set 
		    {
			    SetColumnValue("ShippedOnBoard", value);
            }
        }
	      
        [XmlAttribute("EstCopies")]
        [Bindable(true)]
        public float? EstCopies 
	    {
		    get
		    {
			    return GetColumnValue<float?>("EstCopies");
		    }
            set 
		    {
			    SetColumnValue("EstCopies", value);
            }
        }
	      
        [XmlAttribute("CopiesLastUpdated")]
        [Bindable(true)]
        public DateTime? CopiesLastUpdated 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("CopiesLastUpdated");
		    }
            set 
		    {
			    SetColumnValue("CopiesLastUpdated", value);
            }
        }
	      
        [XmlAttribute("EstCartons")]
        [Bindable(true)]
        public int? EstCartons 
	    {
		    get
		    {
			    return GetColumnValue<int?>("EstCartons");
		    }
            set 
		    {
			    SetColumnValue("EstCartons", value);
            }
        }
	      
        [XmlAttribute("EstPallets")]
        [Bindable(true)]
        public int? EstPallets 
	    {
		    get
		    {
			    return GetColumnValue<int?>("EstPallets");
		    }
            set 
		    {
			    SetColumnValue("EstPallets", value);
            }
        }
	      
        [XmlAttribute("EstWeight")]
        [Bindable(true)]
        public int? EstWeight 
	    {
		    get
		    {
			    return GetColumnValue<int?>("EstWeight");
		    }
            set 
		    {
			    SetColumnValue("EstWeight", value);
            }
        }
	      
        [XmlAttribute("EstVolume")]
        [Bindable(true)]
        public float? EstVolume 
	    {
		    get
		    {
			    return GetColumnValue<float?>("EstVolume");
		    }
            set 
		    {
			    SetColumnValue("EstVolume", value);
            }
        }
	      
        [XmlAttribute("Palletise")]
        [Bindable(true)]
        public int? Palletise 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Palletise");
		    }
            set 
		    {
			    SetColumnValue("Palletise", value);
            }
        }
	      
        [XmlAttribute("ActualCartons")]
        [Bindable(true)]
        public int? ActualCartons 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ActualCartons");
		    }
            set 
		    {
			    SetColumnValue("ActualCartons", value);
            }
        }
	      
        [XmlAttribute("ActualPallets")]
        [Bindable(true)]
        public int? ActualPallets 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ActualPallets");
		    }
            set 
		    {
			    SetColumnValue("ActualPallets", value);
            }
        }
	      
        [XmlAttribute("ActualWeight")]
        [Bindable(true)]
        public int? ActualWeight 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ActualWeight");
		    }
            set 
		    {
			    SetColumnValue("ActualWeight", value);
            }
        }
	      
        [XmlAttribute("WeightLastUpdated")]
        [Bindable(true)]
        public DateTime? WeightLastUpdated 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("WeightLastUpdated");
		    }
            set 
		    {
			    SetColumnValue("WeightLastUpdated", value);
            }
        }
	      
        [XmlAttribute("ActualVolume")]
        [Bindable(true)]
        public float? ActualVolume 
	    {
		    get
		    {
			    return GetColumnValue<float?>("ActualVolume");
		    }
            set 
		    {
			    SetColumnValue("ActualVolume", value);
            }
        }
	      
        [XmlAttribute("VolumeLastUpdated")]
        [Bindable(true)]
        public DateTime? VolumeLastUpdated 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("VolumeLastUpdated");
		    }
            set 
		    {
			    SetColumnValue("VolumeLastUpdated", value);
            }
        }
	      
        [XmlAttribute("Est20")]
        [Bindable(true)]
        public int? Est20 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Est20");
		    }
            set 
		    {
			    SetColumnValue("Est20", value);
            }
        }
	      
        [XmlAttribute("Est40")]
        [Bindable(true)]
        public int? Est40 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Est40");
		    }
            set 
		    {
			    SetColumnValue("Est40", value);
            }
        }
	      
        [XmlAttribute("EstLCLWt")]
        [Bindable(true)]
        public int? EstLCLWt 
	    {
		    get
		    {
			    return GetColumnValue<int?>("EstLCLWt");
		    }
            set 
		    {
			    SetColumnValue("EstLCLWt", value);
            }
        }
	      
        [XmlAttribute("EstLCLVol")]
        [Bindable(true)]
        public float? EstLCLVol 
	    {
		    get
		    {
			    return GetColumnValue<float?>("EstLCLVol");
		    }
            set 
		    {
			    SetColumnValue("EstLCLVol", value);
            }
        }
	      
        [XmlAttribute("No20")]
        [Bindable(true)]
        public int? No20 
	    {
		    get
		    {
			    return GetColumnValue<int?>("No20");
		    }
            set 
		    {
			    SetColumnValue("No20", value);
            }
        }
	      
        [XmlAttribute("No40")]
        [Bindable(true)]
        public int? No40 
	    {
		    get
		    {
			    return GetColumnValue<int?>("No40");
		    }
            set 
		    {
			    SetColumnValue("No40", value);
            }
        }
	      
        [XmlAttribute("LCLWt")]
        [Bindable(true)]
        public int? LCLWt 
	    {
		    get
		    {
			    return GetColumnValue<int?>("LCLWt");
		    }
            set 
		    {
			    SetColumnValue("LCLWt", value);
            }
        }
	      
        [XmlAttribute("LCLVol")]
        [Bindable(true)]
        public float? LCLVol 
	    {
		    get
		    {
			    return GetColumnValue<float?>("LCLVol");
		    }
            set 
		    {
			    SetColumnValue("LCLVol", value);
            }
        }
	      
        [XmlAttribute("Remarks")]
        [Bindable(true)]
        public string Remarks 
	    {
		    get
		    {
			    return GetColumnValue<string>("Remarks");
		    }
            set 
		    {
			    SetColumnValue("Remarks", value);
            }
        }
	      
        [XmlAttribute("RemarksToCustomer")]
        [Bindable(true)]
        public string RemarksToCustomer 
	    {
		    get
		    {
			    return GetColumnValue<string>("RemarksToCustomer");
		    }
            set 
		    {
			    SetColumnValue("RemarksToCustomer", value);
            }
        }
	      
        [XmlAttribute("Sellingrate")]
        [Bindable(true)]
        public string Sellingrate 
	    {
		    get
		    {
			    return GetColumnValue<string>("Sellingrate");
		    }
            set 
		    {
			    SetColumnValue("Sellingrate", value);
            }
        }
	      
        [XmlAttribute("JobClosureDate")]
        [Bindable(true)]
        public DateTime? JobClosureDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("JobClosureDate");
		    }
            set 
		    {
			    SetColumnValue("JobClosureDate", value);
            }
        }
	      
        [XmlAttribute("JobClosed")]
        [Bindable(true)]
        public bool JobClosed 
	    {
		    get
		    {
			    return GetColumnValue<bool>("JobClosed");
		    }
            set 
		    {
			    SetColumnValue("JobClosed", value);
            }
        }
	      
        [XmlAttribute("ExpressBL")]
        [Bindable(true)]
        public bool ExpressBL 
	    {
		    get
		    {
			    return GetColumnValue<bool>("ExpressBL");
		    }
            set 
		    {
			    SetColumnValue("ExpressBL", value);
            }
        }
	      
        [XmlAttribute("FumigationCert")]
        [Bindable(true)]
        public bool FumigationCert 
	    {
		    get
		    {
			    return GetColumnValue<bool>("FumigationCert");
		    }
            set 
		    {
			    SetColumnValue("FumigationCert", value);
            }
        }
	      
        [XmlAttribute("GSPCert")]
        [Bindable(true)]
        public bool GSPCert 
	    {
		    get
		    {
			    return GetColumnValue<bool>("GSPCert");
		    }
            set 
		    {
			    SetColumnValue("GSPCert", value);
            }
        }
	      
        [XmlAttribute("COfO")]
        [Bindable(true)]
        public bool COfO 
	    {
		    get
		    {
			    return GetColumnValue<bool>("COfO");
		    }
            set 
		    {
			    SetColumnValue("COfO", value);
            }
        }
	      
        [XmlAttribute("PackingDeclaration")]
        [Bindable(true)]
        public bool PackingDeclaration 
	    {
		    get
		    {
			    return GetColumnValue<bool>("PackingDeclaration");
		    }
            set 
		    {
			    SetColumnValue("PackingDeclaration", value);
            }
        }
	      
        [XmlAttribute("OtherDocsRequired")]
        [Bindable(true)]
        public string OtherDocsRequired 
	    {
		    get
		    {
			    return GetColumnValue<string>("OtherDocsRequired");
		    }
            set 
		    {
			    SetColumnValue("OtherDocsRequired", value);
            }
        }
	      
        [XmlAttribute("ConsolNumber")]
        [Bindable(true)]
        public int? ConsolNumber 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ConsolNumber");
		    }
            set 
		    {
			    SetColumnValue("ConsolNumber", value);
            }
        }
	      
        [XmlAttribute("CourierDetailsEntered")]
        [Bindable(true)]
        public string CourierDetailsEntered 
	    {
		    get
		    {
			    return GetColumnValue<string>("CourierDetailsEntered");
		    }
            set 
		    {
			    SetColumnValue("CourierDetailsEntered", value);
            }
        }
	      
        [XmlAttribute("HodderPricePerCopy")]
        [Bindable(true)]
        public float? HodderPricePerCopy 
	    {
		    get
		    {
			    return GetColumnValue<float?>("HodderPricePerCopy");
		    }
            set 
		    {
			    SetColumnValue("HodderPricePerCopy", value);
            }
        }
	      
        [XmlAttribute("Jackets")]
        [Bindable(true)]
        public int? Jackets 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Jackets");
		    }
            set 
		    {
			    SetColumnValue("Jackets", value);
            }
        }
	      
        [XmlAttribute("OriginPointID")]
        [Bindable(true)]
        public int? OriginPointID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OriginPointID");
		    }
            set 
		    {
			    SetColumnValue("OriginPointID", value);
            }
        }
	      
        [XmlAttribute("PublishipOrder")]
        [Bindable(true)]
        public bool PublishipOrder 
	    {
		    get
		    {
			    return GetColumnValue<bool>("PublishipOrder");
		    }
            set 
		    {
			    SetColumnValue("PublishipOrder", value);
            }
        }
	      
        [XmlAttribute("OfficeIndicator")]
        [Bindable(true)]
        public string OfficeIndicator 
	    {
		    get
		    {
			    return GetColumnValue<string>("OfficeIndicator");
		    }
            set 
		    {
			    SetColumnValue("OfficeIndicator", value);
            }
        }
	      
        [XmlAttribute("ClientsTerms")]
        [Bindable(true)]
        public string ClientsTerms 
	    {
		    get
		    {
			    return GetColumnValue<string>("ClientsTerms");
		    }
            set 
		    {
			    SetColumnValue("ClientsTerms", value);
            }
        }
	      
        [XmlAttribute("OriginTrucking")]
        [Bindable(true)]
        public string OriginTrucking 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginTrucking");
		    }
            set 
		    {
			    SetColumnValue("OriginTrucking", value);
            }
        }
	      
        [XmlAttribute("OrignTHC")]
        [Bindable(true)]
        public string OrignTHC 
	    {
		    get
		    {
			    return GetColumnValue<string>("OrignTHC");
		    }
            set 
		    {
			    SetColumnValue("OrignTHC", value);
            }
        }
	      
        [XmlAttribute("OriginDocs")]
        [Bindable(true)]
        public string OriginDocs 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginDocs");
		    }
            set 
		    {
			    SetColumnValue("OriginDocs", value);
            }
        }
	      
        [XmlAttribute("Freight")]
        [Bindable(true)]
        public string Freight 
	    {
		    get
		    {
			    return GetColumnValue<string>("Freight");
		    }
            set 
		    {
			    SetColumnValue("Freight", value);
            }
        }
	      
        [XmlAttribute("DestTHC")]
        [Bindable(true)]
        public string DestTHC 
	    {
		    get
		    {
			    return GetColumnValue<string>("DestTHC");
		    }
            set 
		    {
			    SetColumnValue("DestTHC", value);
            }
        }
	      
        [XmlAttribute("CustomsClearance")]
        [Bindable(true)]
        public string CustomsClearance 
	    {
		    get
		    {
			    return GetColumnValue<string>("CustomsClearance");
		    }
            set 
		    {
			    SetColumnValue("CustomsClearance", value);
            }
        }
	      
        [XmlAttribute("DeliveryCharges")]
        [Bindable(true)]
        public string DeliveryCharges 
	    {
		    get
		    {
			    return GetColumnValue<string>("DeliveryCharges");
		    }
            set 
		    {
			    SetColumnValue("DeliveryCharges", value);
            }
        }
	      
        [XmlAttribute("CoLoaderComments")]
        [Bindable(true)]
        public string CoLoaderComments 
	    {
		    get
		    {
			    return GetColumnValue<string>("CoLoaderComments");
		    }
            set 
		    {
			    SetColumnValue("CoLoaderComments", value);
            }
        }
	      
        [XmlAttribute("EXPR1")]
        [Bindable(true)]
        public string EXPR1 
	    {
		    get
		    {
			    return GetColumnValue<string>("EXPR1");
		    }
            set 
		    {
			    SetColumnValue("EXPR1", value);
            }
        }
	      
        [XmlAttribute("Impression")]
        [Bindable(true)]
        public string Impression 
	    {
		    get
		    {
			    return GetColumnValue<string>("Impression");
		    }
            set 
		    {
			    SetColumnValue("Impression", value);
            }
        }
	      
        [XmlAttribute("HCCompositeRef")]
        [Bindable(true)]
        public string HCCompositeRef 
	    {
		    get
		    {
			    return GetColumnValue<string>("HCCompositeRef");
		    }
            set 
		    {
			    SetColumnValue("HCCompositeRef", value);
            }
        }
	      
        [XmlAttribute("HCInvoiceAmount")]
        [Bindable(true)]
        public decimal? HCInvoiceAmount 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("HCInvoiceAmount");
		    }
            set 
		    {
			    SetColumnValue("HCInvoiceAmount", value);
            }
        }
	      
        [XmlAttribute("DocsRcdAndApproved")]
        [Bindable(true)]
        public bool DocsRcdAndApproved 
	    {
		    get
		    {
			    return GetColumnValue<bool>("DocsRcdAndApproved");
		    }
            set 
		    {
			    SetColumnValue("DocsRcdAndApproved", value);
            }
        }
	      
        [XmlAttribute("DocsApprovedDate")]
        [Bindable(true)]
        public DateTime? DocsApprovedDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("DocsApprovedDate");
		    }
            set 
		    {
			    SetColumnValue("DocsApprovedDate", value);
            }
        }
	      
        [XmlAttribute("Incoterms")]
        [Bindable(true)]
        public string Incoterms 
	    {
		    get
		    {
			    return GetColumnValue<string>("Incoterms");
		    }
            set 
		    {
			    SetColumnValue("Incoterms", value);
            }
        }
	      
        [XmlAttribute("PricePerCopy")]
        [Bindable(true)]
        public float? PricePerCopy 
	    {
		    get
		    {
			    return GetColumnValue<float?>("PricePerCopy");
		    }
            set 
		    {
			    SetColumnValue("PricePerCopy", value);
            }
        }
	      
        [XmlAttribute("Customs")]
        [Bindable(true)]
        public string Customs 
	    {
		    get
		    {
			    return GetColumnValue<string>("Customs");
		    }
            set 
		    {
			    SetColumnValue("Customs", value);
            }
        }
	      
        [XmlAttribute("Currency")]
        [Bindable(true)]
        public string Currency 
	    {
		    get
		    {
			    return GetColumnValue<string>("Currency");
		    }
            set 
		    {
			    SetColumnValue("Currency", value);
            }
        }
	      
        [XmlAttribute("InvoiceAddresseeID")]
        [Bindable(true)]
        public int? InvoiceAddresseeID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("InvoiceAddresseeID");
		    }
            set 
		    {
			    SetColumnValue("InvoiceAddresseeID", value);
            }
        }
	      
        [XmlAttribute("SellingrateAgent")]
        [Bindable(true)]
        public string SellingrateAgent 
	    {
		    get
		    {
			    return GetColumnValue<string>("SellingrateAgent");
		    }
            set 
		    {
			    SetColumnValue("SellingrateAgent", value);
            }
        }
	      
        [XmlAttribute("BookingReceived")]
        [Bindable(true)]
        public DateTime? BookingReceived 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("BookingReceived");
		    }
            set 
		    {
			    SetColumnValue("BookingReceived", value);
            }
        }
	      
        [XmlAttribute("PackageTypeID")]
        [Bindable(true)]
        public int? PackageTypeID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PackageTypeID");
		    }
            set 
		    {
			    SetColumnValue("PackageTypeID", value);
            }
        }
	      
        [XmlAttribute("NumberOfPackages")]
        [Bindable(true)]
        public int? NumberOfPackages 
	    {
		    get
		    {
			    return GetColumnValue<int?>("NumberOfPackages");
		    }
            set 
		    {
			    SetColumnValue("NumberOfPackages", value);
            }
        }
	      
        [XmlAttribute("OperationsControllerID")]
        [Bindable(true)]
        public int? OperationsControllerID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("OperationsControllerID");
		    }
            set 
		    {
			    SetColumnValue("OperationsControllerID", value);
            }
        }
	      
        [XmlAttribute("HouseBLNUmber")]
        [Bindable(true)]
        public string HouseBLNUmber 
	    {
		    get
		    {
			    return GetColumnValue<string>("HouseBLNUmber");
		    }
            set 
		    {
			    SetColumnValue("HouseBLNUmber", value);
            }
        }
	      
        [XmlAttribute("InsuranceValue")]
        [Bindable(true)]
        public decimal? InsuranceValue 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("InsuranceValue");
		    }
            set 
		    {
			    SetColumnValue("InsuranceValue", value);
            }
        }
	      
        [XmlAttribute("HCInvoiceAmount2")]
        [Bindable(true)]
        public decimal? HCInvoiceAmount2 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("HCInvoiceAmount2");
		    }
            set 
		    {
			    SetColumnValue("HCInvoiceAmount2", value);
            }
        }
	      
        [XmlAttribute("Fcllcl")]
        [Bindable(true)]
        public bool? Fcllcl 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("FCLLCL");
		    }
            set 
		    {
			    SetColumnValue("FCLLCL", value);
            }
        }
	      
        [XmlAttribute("Ts")]
        [Bindable(true)]
        public byte[] Ts 
	    {
		    get
		    {
			    return GetColumnValue<byte[]>("TS");
		    }
            set 
		    {
			    SetColumnValue("TS", value);
            }
        }
	      
        [XmlAttribute("QuoteId")]
        [Bindable(true)]
        public int? QuoteId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("quote_id");
		    }
            set 
		    {
			    SetColumnValue("quote_id", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string OrderID = @"OrderID";
            
            public static string OrderNumber = @"OrderNumber";
            
            public static string DateOrderCreated = @"DateOrderCreated";
            
            public static string CompanyID = @"CompanyID";
            
            public static string ConsigneeID = @"ConsigneeID";
            
            public static string ContactID = @"ContactID";
            
            public static string NotifyPartyID = @"NotifyPartyID";
            
            public static string AgentAtOriginID = @"AgentAtOriginID";
            
            public static string OriginPortControllerID = @"OriginPortControllerID";
            
            public static string AgentAtDestinationID = @"AgentAtDestinationID";
            
            public static string PrinterID = @"PrinterID";
            
            public static string ClearingAgentID = @"ClearingAgentID";
            
            public static string OnCarriageID = @"OnCarriageID";
            
            public static string OrderControllerID = @"OrderControllerID";
            
            public static string DestinationPortControllerID = @"DestinationPortControllerID";
            
            public static string CustomersRef = @"CustomersRef";
            
            public static string HotJob = @"HotJob";
            
            public static string ExWorksDate = @"ExWorksDate";
            
            public static string EWDLastUpdated = @"EWDLastUpdated";
            
            public static string CargoReady = @"CargoReady";
            
            public static string WarehouseDate = @"WarehouseDate";
            
            public static string PortID = @"PortID";
            
            public static string DestinationPortID = @"DestinationPortID";
            
            public static string FinalDestinationID = @"FinalDestinationID";
            
            public static string CountryID = @"CountryID";
            
            public static string VesselID = @"VesselID";
            
            public static string VesselLastUpdated = @"VesselLastUpdated";
            
            public static string Ets = @"ETS";
            
            public static string Eta = @"ETA";
            
            public static string ShippedOnBoard = @"ShippedOnBoard";
            
            public static string EstCopies = @"EstCopies";
            
            public static string CopiesLastUpdated = @"CopiesLastUpdated";
            
            public static string EstCartons = @"EstCartons";
            
            public static string EstPallets = @"EstPallets";
            
            public static string EstWeight = @"EstWeight";
            
            public static string EstVolume = @"EstVolume";
            
            public static string Palletise = @"Palletise";
            
            public static string ActualCartons = @"ActualCartons";
            
            public static string ActualPallets = @"ActualPallets";
            
            public static string ActualWeight = @"ActualWeight";
            
            public static string WeightLastUpdated = @"WeightLastUpdated";
            
            public static string ActualVolume = @"ActualVolume";
            
            public static string VolumeLastUpdated = @"VolumeLastUpdated";
            
            public static string Est20 = @"Est20";
            
            public static string Est40 = @"Est40";
            
            public static string EstLCLWt = @"EstLCLWt";
            
            public static string EstLCLVol = @"EstLCLVol";
            
            public static string No20 = @"No20";
            
            public static string No40 = @"No40";
            
            public static string LCLWt = @"LCLWt";
            
            public static string LCLVol = @"LCLVol";
            
            public static string Remarks = @"Remarks";
            
            public static string RemarksToCustomer = @"RemarksToCustomer";
            
            public static string Sellingrate = @"Sellingrate";
            
            public static string JobClosureDate = @"JobClosureDate";
            
            public static string JobClosed = @"JobClosed";
            
            public static string ExpressBL = @"ExpressBL";
            
            public static string FumigationCert = @"FumigationCert";
            
            public static string GSPCert = @"GSPCert";
            
            public static string COfO = @"COfO";
            
            public static string PackingDeclaration = @"PackingDeclaration";
            
            public static string OtherDocsRequired = @"OtherDocsRequired";
            
            public static string ConsolNumber = @"ConsolNumber";
            
            public static string CourierDetailsEntered = @"CourierDetailsEntered";
            
            public static string HodderPricePerCopy = @"HodderPricePerCopy";
            
            public static string Jackets = @"Jackets";
            
            public static string OriginPointID = @"OriginPointID";
            
            public static string PublishipOrder = @"PublishipOrder";
            
            public static string OfficeIndicator = @"OfficeIndicator";
            
            public static string ClientsTerms = @"ClientsTerms";
            
            public static string OriginTrucking = @"OriginTrucking";
            
            public static string OrignTHC = @"OrignTHC";
            
            public static string OriginDocs = @"OriginDocs";
            
            public static string Freight = @"Freight";
            
            public static string DestTHC = @"DestTHC";
            
            public static string CustomsClearance = @"CustomsClearance";
            
            public static string DeliveryCharges = @"DeliveryCharges";
            
            public static string CoLoaderComments = @"CoLoaderComments";
            
            public static string EXPR1 = @"EXPR1";
            
            public static string Impression = @"Impression";
            
            public static string HCCompositeRef = @"HCCompositeRef";
            
            public static string HCInvoiceAmount = @"HCInvoiceAmount";
            
            public static string DocsRcdAndApproved = @"DocsRcdAndApproved";
            
            public static string DocsApprovedDate = @"DocsApprovedDate";
            
            public static string Incoterms = @"Incoterms";
            
            public static string PricePerCopy = @"PricePerCopy";
            
            public static string Customs = @"Customs";
            
            public static string Currency = @"Currency";
            
            public static string InvoiceAddresseeID = @"InvoiceAddresseeID";
            
            public static string SellingrateAgent = @"SellingrateAgent";
            
            public static string BookingReceived = @"BookingReceived";
            
            public static string PackageTypeID = @"PackageTypeID";
            
            public static string NumberOfPackages = @"NumberOfPackages";
            
            public static string OperationsControllerID = @"OperationsControllerID";
            
            public static string HouseBLNUmber = @"HouseBLNUmber";
            
            public static string InsuranceValue = @"InsuranceValue";
            
            public static string HCInvoiceAmount2 = @"HCInvoiceAmount2";
            
            public static string Fcllcl = @"FCLLCL";
            
            public static string Ts = @"TS";
            
            public static string QuoteId = @"quote_id";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
