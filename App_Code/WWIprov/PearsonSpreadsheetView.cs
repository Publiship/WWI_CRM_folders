using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Logistics{
    /// <summary>
    /// Strongly-typed collection for the PearsonSpreadsheetView class.
    /// </summary>
    [Serializable]
    public partial class PearsonSpreadsheetViewCollection : ReadOnlyList<PearsonSpreadsheetView, PearsonSpreadsheetViewCollection>
    {        
        public PearsonSpreadsheetViewCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the PearsonSpreadsheetView view.
    /// </summary>
    [Serializable]
    public partial class PearsonSpreadsheetView : ReadOnlyRecord<PearsonSpreadsheetView>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("PearsonSpreadsheetView", TableType.View, DataService.GetInstance("WWIprov"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarIsbn = new TableSchema.TableColumn(schema);
                colvarIsbn.ColumnName = "ISBN";
                colvarIsbn.DataType = DbType.String;
                colvarIsbn.MaxLength = 50;
                colvarIsbn.AutoIncrement = false;
                colvarIsbn.IsNullable = true;
                colvarIsbn.IsPrimaryKey = false;
                colvarIsbn.IsForeignKey = false;
                colvarIsbn.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsbn);
                
                TableSchema.TableColumn colvarImpression = new TableSchema.TableColumn(schema);
                colvarImpression.ColumnName = "Impression";
                colvarImpression.DataType = DbType.String;
                colvarImpression.MaxLength = 50;
                colvarImpression.AutoIncrement = false;
                colvarImpression.IsNullable = true;
                colvarImpression.IsPrimaryKey = false;
                colvarImpression.IsForeignKey = false;
                colvarImpression.IsReadOnly = false;
                
                schema.Columns.Add(colvarImpression);
                
                TableSchema.TableColumn colvarTitle = new TableSchema.TableColumn(schema);
                colvarTitle.ColumnName = "Title";
                colvarTitle.DataType = DbType.String;
                colvarTitle.MaxLength = 100;
                colvarTitle.AutoIncrement = false;
                colvarTitle.IsNullable = true;
                colvarTitle.IsPrimaryKey = false;
                colvarTitle.IsForeignKey = false;
                colvarTitle.IsReadOnly = false;
                
                schema.Columns.Add(colvarTitle);
                
                TableSchema.TableColumn colvarCopies = new TableSchema.TableColumn(schema);
                colvarCopies.ColumnName = "Copies";
                colvarCopies.DataType = DbType.Int32;
                colvarCopies.MaxLength = 0;
                colvarCopies.AutoIncrement = false;
                colvarCopies.IsNullable = true;
                colvarCopies.IsPrimaryKey = false;
                colvarCopies.IsForeignKey = false;
                colvarCopies.IsReadOnly = false;
                
                schema.Columns.Add(colvarCopies);
                
                TableSchema.TableColumn colvarPearsonDivCode = new TableSchema.TableColumn(schema);
                colvarPearsonDivCode.ColumnName = "PearsonDivCode";
                colvarPearsonDivCode.DataType = DbType.String;
                colvarPearsonDivCode.MaxLength = 50;
                colvarPearsonDivCode.AutoIncrement = false;
                colvarPearsonDivCode.IsNullable = true;
                colvarPearsonDivCode.IsPrimaryKey = false;
                colvarPearsonDivCode.IsForeignKey = false;
                colvarPearsonDivCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPearsonDivCode);
                
                TableSchema.TableColumn colvarPublishipRef = new TableSchema.TableColumn(schema);
                colvarPublishipRef.ColumnName = "PublishipRef";
                colvarPublishipRef.DataType = DbType.Int32;
                colvarPublishipRef.MaxLength = 0;
                colvarPublishipRef.AutoIncrement = false;
                colvarPublishipRef.IsNullable = true;
                colvarPublishipRef.IsPrimaryKey = false;
                colvarPublishipRef.IsForeignKey = false;
                colvarPublishipRef.IsReadOnly = false;
                
                schema.Columns.Add(colvarPublishipRef);
                
                TableSchema.TableColumn colvarConsignee = new TableSchema.TableColumn(schema);
                colvarConsignee.ColumnName = "Consignee";
                colvarConsignee.DataType = DbType.String;
                colvarConsignee.MaxLength = 50;
                colvarConsignee.AutoIncrement = false;
                colvarConsignee.IsNullable = true;
                colvarConsignee.IsPrimaryKey = false;
                colvarConsignee.IsForeignKey = false;
                colvarConsignee.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsignee);
                
                TableSchema.TableColumn colvarPrinter = new TableSchema.TableColumn(schema);
                colvarPrinter.ColumnName = "Printer";
                colvarPrinter.DataType = DbType.String;
                colvarPrinter.MaxLength = 50;
                colvarPrinter.AutoIncrement = false;
                colvarPrinter.IsNullable = true;
                colvarPrinter.IsPrimaryKey = false;
                colvarPrinter.IsForeignKey = false;
                colvarPrinter.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinter);
                
                TableSchema.TableColumn colvarExWorksDate = new TableSchema.TableColumn(schema);
                colvarExWorksDate.ColumnName = "ExWorksDate";
                colvarExWorksDate.DataType = DbType.DateTime;
                colvarExWorksDate.MaxLength = 0;
                colvarExWorksDate.AutoIncrement = false;
                colvarExWorksDate.IsNullable = true;
                colvarExWorksDate.IsPrimaryKey = false;
                colvarExWorksDate.IsForeignKey = false;
                colvarExWorksDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarExWorksDate);
                
                TableSchema.TableColumn colvarContactName = new TableSchema.TableColumn(schema);
                colvarContactName.ColumnName = "ContactName";
                colvarContactName.DataType = DbType.String;
                colvarContactName.MaxLength = 50;
                colvarContactName.AutoIncrement = false;
                colvarContactName.IsNullable = true;
                colvarContactName.IsPrimaryKey = false;
                colvarContactName.IsForeignKey = false;
                colvarContactName.IsReadOnly = false;
                
                schema.Columns.Add(colvarContactName);
                
                TableSchema.TableColumn colvarCustomersRef = new TableSchema.TableColumn(schema);
                colvarCustomersRef.ColumnName = "CustomersRef";
                colvarCustomersRef.DataType = DbType.String;
                colvarCustomersRef.MaxLength = 20;
                colvarCustomersRef.AutoIncrement = false;
                colvarCustomersRef.IsNullable = true;
                colvarCustomersRef.IsPrimaryKey = false;
                colvarCustomersRef.IsForeignKey = false;
                colvarCustomersRef.IsReadOnly = false;
                
                schema.Columns.Add(colvarCustomersRef);
                
                TableSchema.TableColumn colvarOriginPort = new TableSchema.TableColumn(schema);
                colvarOriginPort.ColumnName = "OriginPort";
                colvarOriginPort.DataType = DbType.String;
                colvarOriginPort.MaxLength = 30;
                colvarOriginPort.AutoIncrement = false;
                colvarOriginPort.IsNullable = true;
                colvarOriginPort.IsPrimaryKey = false;
                colvarOriginPort.IsForeignKey = false;
                colvarOriginPort.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginPort);
                
                TableSchema.TableColumn colvarDestinationPort = new TableSchema.TableColumn(schema);
                colvarDestinationPort.ColumnName = "DestinationPort";
                colvarDestinationPort.DataType = DbType.String;
                colvarDestinationPort.MaxLength = 30;
                colvarDestinationPort.AutoIncrement = false;
                colvarDestinationPort.IsNullable = true;
                colvarDestinationPort.IsPrimaryKey = false;
                colvarDestinationPort.IsForeignKey = false;
                colvarDestinationPort.IsReadOnly = false;
                
                schema.Columns.Add(colvarDestinationPort);
                
                TableSchema.TableColumn colvarFinalDestination = new TableSchema.TableColumn(schema);
                colvarFinalDestination.ColumnName = "FinalDestination";
                colvarFinalDestination.DataType = DbType.String;
                colvarFinalDestination.MaxLength = 30;
                colvarFinalDestination.AutoIncrement = false;
                colvarFinalDestination.IsNullable = true;
                colvarFinalDestination.IsPrimaryKey = false;
                colvarFinalDestination.IsForeignKey = false;
                colvarFinalDestination.IsReadOnly = false;
                
                schema.Columns.Add(colvarFinalDestination);
                
                TableSchema.TableColumn colvarVesselName = new TableSchema.TableColumn(schema);
                colvarVesselName.ColumnName = "VesselName";
                colvarVesselName.DataType = DbType.String;
                colvarVesselName.MaxLength = 50;
                colvarVesselName.AutoIncrement = false;
                colvarVesselName.IsNullable = true;
                colvarVesselName.IsPrimaryKey = false;
                colvarVesselName.IsForeignKey = false;
                colvarVesselName.IsReadOnly = false;
                
                schema.Columns.Add(colvarVesselName);
                
                TableSchema.TableColumn colvarEts = new TableSchema.TableColumn(schema);
                colvarEts.ColumnName = "ETS";
                colvarEts.DataType = DbType.DateTime;
                colvarEts.MaxLength = 0;
                colvarEts.AutoIncrement = false;
                colvarEts.IsNullable = true;
                colvarEts.IsPrimaryKey = false;
                colvarEts.IsForeignKey = false;
                colvarEts.IsReadOnly = false;
                
                schema.Columns.Add(colvarEts);
                
                TableSchema.TableColumn colvarEta = new TableSchema.TableColumn(schema);
                colvarEta.ColumnName = "ETA";
                colvarEta.DataType = DbType.DateTime;
                colvarEta.MaxLength = 0;
                colvarEta.AutoIncrement = false;
                colvarEta.IsNullable = true;
                colvarEta.IsPrimaryKey = false;
                colvarEta.IsForeignKey = false;
                colvarEta.IsReadOnly = false;
                
                schema.Columns.Add(colvarEta);
                
                TableSchema.TableColumn colvarCurrentStatus = new TableSchema.TableColumn(schema);
                colvarCurrentStatus.ColumnName = "CurrentStatus";
                colvarCurrentStatus.DataType = DbType.String;
                colvarCurrentStatus.MaxLength = 50;
                colvarCurrentStatus.AutoIncrement = false;
                colvarCurrentStatus.IsNullable = true;
                colvarCurrentStatus.IsPrimaryKey = false;
                colvarCurrentStatus.IsForeignKey = false;
                colvarCurrentStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarCurrentStatus);
                
                TableSchema.TableColumn colvarCurrentStatusDate = new TableSchema.TableColumn(schema);
                colvarCurrentStatusDate.ColumnName = "CurrentStatusDate";
                colvarCurrentStatusDate.DataType = DbType.DateTime;
                colvarCurrentStatusDate.MaxLength = 0;
                colvarCurrentStatusDate.AutoIncrement = false;
                colvarCurrentStatusDate.IsNullable = true;
                colvarCurrentStatusDate.IsPrimaryKey = false;
                colvarCurrentStatusDate.IsForeignKey = false;
                colvarCurrentStatusDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarCurrentStatusDate);
                
                TableSchema.TableColumn colvarRemarksToCustomer = new TableSchema.TableColumn(schema);
                colvarRemarksToCustomer.ColumnName = "RemarksToCustomer";
                colvarRemarksToCustomer.DataType = DbType.String;
                colvarRemarksToCustomer.MaxLength = 1073741823;
                colvarRemarksToCustomer.AutoIncrement = false;
                colvarRemarksToCustomer.IsNullable = true;
                colvarRemarksToCustomer.IsPrimaryKey = false;
                colvarRemarksToCustomer.IsForeignKey = false;
                colvarRemarksToCustomer.IsReadOnly = false;
                
                schema.Columns.Add(colvarRemarksToCustomer);
                
                TableSchema.TableColumn colvarDeliveryTo = new TableSchema.TableColumn(schema);
                colvarDeliveryTo.ColumnName = "DeliveryTo";
                colvarDeliveryTo.DataType = DbType.String;
                colvarDeliveryTo.MaxLength = 50;
                colvarDeliveryTo.AutoIncrement = false;
                colvarDeliveryTo.IsNullable = true;
                colvarDeliveryTo.IsPrimaryKey = false;
                colvarDeliveryTo.IsForeignKey = false;
                colvarDeliveryTo.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeliveryTo);
                
                TableSchema.TableColumn colvarContainerNumber = new TableSchema.TableColumn(schema);
                colvarContainerNumber.ColumnName = "ContainerNumber";
                colvarContainerNumber.DataType = DbType.String;
                colvarContainerNumber.MaxLength = 50;
                colvarContainerNumber.AutoIncrement = false;
                colvarContainerNumber.IsNullable = true;
                colvarContainerNumber.IsPrimaryKey = false;
                colvarContainerNumber.IsForeignKey = false;
                colvarContainerNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarContainerNumber);
                
                TableSchema.TableColumn colvarPONumber = new TableSchema.TableColumn(schema);
                colvarPONumber.ColumnName = "PONumber";
                colvarPONumber.DataType = DbType.String;
                colvarPONumber.MaxLength = 50;
                colvarPONumber.AutoIncrement = false;
                colvarPONumber.IsNullable = true;
                colvarPONumber.IsPrimaryKey = false;
                colvarPONumber.IsForeignKey = false;
                colvarPONumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarPONumber);
                
                TableSchema.TableColumn colvarContainerID = new TableSchema.TableColumn(schema);
                colvarContainerID.ColumnName = "ContainerID";
                colvarContainerID.DataType = DbType.Int32;
                colvarContainerID.MaxLength = 0;
                colvarContainerID.AutoIncrement = false;
                colvarContainerID.IsNullable = true;
                colvarContainerID.IsPrimaryKey = false;
                colvarContainerID.IsForeignKey = false;
                colvarContainerID.IsReadOnly = false;
                
                schema.Columns.Add(colvarContainerID);
                
                TableSchema.TableColumn colvarJobClosed = new TableSchema.TableColumn(schema);
                colvarJobClosed.ColumnName = "JobClosed";
                colvarJobClosed.DataType = DbType.Boolean;
                colvarJobClosed.MaxLength = 0;
                colvarJobClosed.AutoIncrement = false;
                colvarJobClosed.IsNullable = false;
                colvarJobClosed.IsPrimaryKey = false;
                colvarJobClosed.IsForeignKey = false;
                colvarJobClosed.IsReadOnly = false;
                
                schema.Columns.Add(colvarJobClosed);
                
                TableSchema.TableColumn colvarTotalValue = new TableSchema.TableColumn(schema);
                colvarTotalValue.ColumnName = "TotalValue";
                colvarTotalValue.DataType = DbType.Decimal;
                colvarTotalValue.MaxLength = 0;
                colvarTotalValue.AutoIncrement = false;
                colvarTotalValue.IsNullable = true;
                colvarTotalValue.IsPrimaryKey = false;
                colvarTotalValue.IsForeignKey = false;
                colvarTotalValue.IsReadOnly = false;
                
                schema.Columns.Add(colvarTotalValue);
                
                TableSchema.TableColumn colvarUnitPricePerCopy = new TableSchema.TableColumn(schema);
                colvarUnitPricePerCopy.ColumnName = "UnitPricePerCopy";
                colvarUnitPricePerCopy.DataType = DbType.Single;
                colvarUnitPricePerCopy.MaxLength = 0;
                colvarUnitPricePerCopy.AutoIncrement = false;
                colvarUnitPricePerCopy.IsNullable = true;
                colvarUnitPricePerCopy.IsPrimaryKey = false;
                colvarUnitPricePerCopy.IsForeignKey = false;
                colvarUnitPricePerCopy.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitPricePerCopy);
                
                TableSchema.TableColumn colvarHCCompositeRef = new TableSchema.TableColumn(schema);
                colvarHCCompositeRef.ColumnName = "HCCompositeRef";
                colvarHCCompositeRef.DataType = DbType.String;
                colvarHCCompositeRef.MaxLength = 50;
                colvarHCCompositeRef.AutoIncrement = false;
                colvarHCCompositeRef.IsNullable = true;
                colvarHCCompositeRef.IsPrimaryKey = false;
                colvarHCCompositeRef.IsForeignKey = false;
                colvarHCCompositeRef.IsReadOnly = false;
                
                schema.Columns.Add(colvarHCCompositeRef);
                
                TableSchema.TableColumn colvarHCInvoiceAmount = new TableSchema.TableColumn(schema);
                colvarHCInvoiceAmount.ColumnName = "HCInvoiceAmount";
                colvarHCInvoiceAmount.DataType = DbType.Currency;
                colvarHCInvoiceAmount.MaxLength = 0;
                colvarHCInvoiceAmount.AutoIncrement = false;
                colvarHCInvoiceAmount.IsNullable = true;
                colvarHCInvoiceAmount.IsPrimaryKey = false;
                colvarHCInvoiceAmount.IsForeignKey = false;
                colvarHCInvoiceAmount.IsReadOnly = false;
                
                schema.Columns.Add(colvarHCInvoiceAmount);
                
                TableSchema.TableColumn colvarSSRNo = new TableSchema.TableColumn(schema);
                colvarSSRNo.ColumnName = "SSRNo";
                colvarSSRNo.DataType = DbType.String;
                colvarSSRNo.MaxLength = 50;
                colvarSSRNo.AutoIncrement = false;
                colvarSSRNo.IsNullable = true;
                colvarSSRNo.IsPrimaryKey = false;
                colvarSSRNo.IsForeignKey = false;
                colvarSSRNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarSSRNo);
                
                TableSchema.TableColumn colvarSSRDate = new TableSchema.TableColumn(schema);
                colvarSSRDate.ColumnName = "SSRDate";
                colvarSSRDate.DataType = DbType.DateTime;
                colvarSSRDate.MaxLength = 0;
                colvarSSRDate.AutoIncrement = false;
                colvarSSRDate.IsNullable = true;
                colvarSSRDate.IsPrimaryKey = false;
                colvarSSRDate.IsForeignKey = false;
                colvarSSRDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarSSRDate);
                
                TableSchema.TableColumn colvarOtherRef = new TableSchema.TableColumn(schema);
                colvarOtherRef.ColumnName = "OtherRef";
                colvarOtherRef.DataType = DbType.String;
                colvarOtherRef.MaxLength = 50;
                colvarOtherRef.AutoIncrement = false;
                colvarOtherRef.IsNullable = true;
                colvarOtherRef.IsPrimaryKey = false;
                colvarOtherRef.IsForeignKey = false;
                colvarOtherRef.IsReadOnly = false;
                
                schema.Columns.Add(colvarOtherRef);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["WWIprov"].AddSchema("PearsonSpreadsheetView",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public PearsonSpreadsheetView()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public PearsonSpreadsheetView(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public PearsonSpreadsheetView(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public PearsonSpreadsheetView(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("Isbn")]
        [Bindable(true)]
        public string Isbn 
	    {
		    get
		    {
			    return GetColumnValue<string>("ISBN");
		    }
            set 
		    {
			    SetColumnValue("ISBN", value);
            }
        }
	      
        [XmlAttribute("Impression")]
        [Bindable(true)]
        public string Impression 
	    {
		    get
		    {
			    return GetColumnValue<string>("Impression");
		    }
            set 
		    {
			    SetColumnValue("Impression", value);
            }
        }
	      
        [XmlAttribute("Title")]
        [Bindable(true)]
        public string Title 
	    {
		    get
		    {
			    return GetColumnValue<string>("Title");
		    }
            set 
		    {
			    SetColumnValue("Title", value);
            }
        }
	      
        [XmlAttribute("Copies")]
        [Bindable(true)]
        public int? Copies 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Copies");
		    }
            set 
		    {
			    SetColumnValue("Copies", value);
            }
        }
	      
        [XmlAttribute("PearsonDivCode")]
        [Bindable(true)]
        public string PearsonDivCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("PearsonDivCode");
		    }
            set 
		    {
			    SetColumnValue("PearsonDivCode", value);
            }
        }
	      
        [XmlAttribute("PublishipRef")]
        [Bindable(true)]
        public int? PublishipRef 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PublishipRef");
		    }
            set 
		    {
			    SetColumnValue("PublishipRef", value);
            }
        }
	      
        [XmlAttribute("Consignee")]
        [Bindable(true)]
        public string Consignee 
	    {
		    get
		    {
			    return GetColumnValue<string>("Consignee");
		    }
            set 
		    {
			    SetColumnValue("Consignee", value);
            }
        }
	      
        [XmlAttribute("Printer")]
        [Bindable(true)]
        public string Printer 
	    {
		    get
		    {
			    return GetColumnValue<string>("Printer");
		    }
            set 
		    {
			    SetColumnValue("Printer", value);
            }
        }
	      
        [XmlAttribute("ExWorksDate")]
        [Bindable(true)]
        public DateTime? ExWorksDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ExWorksDate");
		    }
            set 
		    {
			    SetColumnValue("ExWorksDate", value);
            }
        }
	      
        [XmlAttribute("ContactName")]
        [Bindable(true)]
        public string ContactName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ContactName");
		    }
            set 
		    {
			    SetColumnValue("ContactName", value);
            }
        }
	      
        [XmlAttribute("CustomersRef")]
        [Bindable(true)]
        public string CustomersRef 
	    {
		    get
		    {
			    return GetColumnValue<string>("CustomersRef");
		    }
            set 
		    {
			    SetColumnValue("CustomersRef", value);
            }
        }
	      
        [XmlAttribute("OriginPort")]
        [Bindable(true)]
        public string OriginPort 
	    {
		    get
		    {
			    return GetColumnValue<string>("OriginPort");
		    }
            set 
		    {
			    SetColumnValue("OriginPort", value);
            }
        }
	      
        [XmlAttribute("DestinationPort")]
        [Bindable(true)]
        public string DestinationPort 
	    {
		    get
		    {
			    return GetColumnValue<string>("DestinationPort");
		    }
            set 
		    {
			    SetColumnValue("DestinationPort", value);
            }
        }
	      
        [XmlAttribute("FinalDestination")]
        [Bindable(true)]
        public string FinalDestination 
	    {
		    get
		    {
			    return GetColumnValue<string>("FinalDestination");
		    }
            set 
		    {
			    SetColumnValue("FinalDestination", value);
            }
        }
	      
        [XmlAttribute("VesselName")]
        [Bindable(true)]
        public string VesselName 
	    {
		    get
		    {
			    return GetColumnValue<string>("VesselName");
		    }
            set 
		    {
			    SetColumnValue("VesselName", value);
            }
        }
	      
        [XmlAttribute("Ets")]
        [Bindable(true)]
        public DateTime? Ets 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ETS");
		    }
            set 
		    {
			    SetColumnValue("ETS", value);
            }
        }
	      
        [XmlAttribute("Eta")]
        [Bindable(true)]
        public DateTime? Eta 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ETA");
		    }
            set 
		    {
			    SetColumnValue("ETA", value);
            }
        }
	      
        [XmlAttribute("CurrentStatus")]
        [Bindable(true)]
        public string CurrentStatus 
	    {
		    get
		    {
			    return GetColumnValue<string>("CurrentStatus");
		    }
            set 
		    {
			    SetColumnValue("CurrentStatus", value);
            }
        }
	      
        [XmlAttribute("CurrentStatusDate")]
        [Bindable(true)]
        public DateTime? CurrentStatusDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("CurrentStatusDate");
		    }
            set 
		    {
			    SetColumnValue("CurrentStatusDate", value);
            }
        }
	      
        [XmlAttribute("RemarksToCustomer")]
        [Bindable(true)]
        public string RemarksToCustomer 
	    {
		    get
		    {
			    return GetColumnValue<string>("RemarksToCustomer");
		    }
            set 
		    {
			    SetColumnValue("RemarksToCustomer", value);
            }
        }
	      
        [XmlAttribute("DeliveryTo")]
        [Bindable(true)]
        public string DeliveryTo 
	    {
		    get
		    {
			    return GetColumnValue<string>("DeliveryTo");
		    }
            set 
		    {
			    SetColumnValue("DeliveryTo", value);
            }
        }
	      
        [XmlAttribute("ContainerNumber")]
        [Bindable(true)]
        public string ContainerNumber 
	    {
		    get
		    {
			    return GetColumnValue<string>("ContainerNumber");
		    }
            set 
		    {
			    SetColumnValue("ContainerNumber", value);
            }
        }
	      
        [XmlAttribute("PONumber")]
        [Bindable(true)]
        public string PONumber 
	    {
		    get
		    {
			    return GetColumnValue<string>("PONumber");
		    }
            set 
		    {
			    SetColumnValue("PONumber", value);
            }
        }
	      
        [XmlAttribute("ContainerID")]
        [Bindable(true)]
        public int? ContainerID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ContainerID");
		    }
            set 
		    {
			    SetColumnValue("ContainerID", value);
            }
        }
	      
        [XmlAttribute("JobClosed")]
        [Bindable(true)]
        public bool JobClosed 
	    {
		    get
		    {
			    return GetColumnValue<bool>("JobClosed");
		    }
            set 
		    {
			    SetColumnValue("JobClosed", value);
            }
        }
	      
        [XmlAttribute("TotalValue")]
        [Bindable(true)]
        public decimal? TotalValue 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("TotalValue");
		    }
            set 
		    {
			    SetColumnValue("TotalValue", value);
            }
        }
	      
        [XmlAttribute("UnitPricePerCopy")]
        [Bindable(true)]
        public float? UnitPricePerCopy 
	    {
		    get
		    {
			    return GetColumnValue<float?>("UnitPricePerCopy");
		    }
            set 
		    {
			    SetColumnValue("UnitPricePerCopy", value);
            }
        }
	      
        [XmlAttribute("HCCompositeRef")]
        [Bindable(true)]
        public string HCCompositeRef 
	    {
		    get
		    {
			    return GetColumnValue<string>("HCCompositeRef");
		    }
            set 
		    {
			    SetColumnValue("HCCompositeRef", value);
            }
        }
	      
        [XmlAttribute("HCInvoiceAmount")]
        [Bindable(true)]
        public decimal? HCInvoiceAmount 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("HCInvoiceAmount");
		    }
            set 
		    {
			    SetColumnValue("HCInvoiceAmount", value);
            }
        }
	      
        [XmlAttribute("SSRNo")]
        [Bindable(true)]
        public string SSRNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("SSRNo");
		    }
            set 
		    {
			    SetColumnValue("SSRNo", value);
            }
        }
	      
        [XmlAttribute("SSRDate")]
        [Bindable(true)]
        public DateTime? SSRDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("SSRDate");
		    }
            set 
		    {
			    SetColumnValue("SSRDate", value);
            }
        }
	      
        [XmlAttribute("OtherRef")]
        [Bindable(true)]
        public string OtherRef 
	    {
		    get
		    {
			    return GetColumnValue<string>("OtherRef");
		    }
            set 
		    {
			    SetColumnValue("OtherRef", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string Isbn = @"ISBN";
            
            public static string Impression = @"Impression";
            
            public static string Title = @"Title";
            
            public static string Copies = @"Copies";
            
            public static string PearsonDivCode = @"PearsonDivCode";
            
            public static string PublishipRef = @"PublishipRef";
            
            public static string Consignee = @"Consignee";
            
            public static string Printer = @"Printer";
            
            public static string ExWorksDate = @"ExWorksDate";
            
            public static string ContactName = @"ContactName";
            
            public static string CustomersRef = @"CustomersRef";
            
            public static string OriginPort = @"OriginPort";
            
            public static string DestinationPort = @"DestinationPort";
            
            public static string FinalDestination = @"FinalDestination";
            
            public static string VesselName = @"VesselName";
            
            public static string Ets = @"ETS";
            
            public static string Eta = @"ETA";
            
            public static string CurrentStatus = @"CurrentStatus";
            
            public static string CurrentStatusDate = @"CurrentStatusDate";
            
            public static string RemarksToCustomer = @"RemarksToCustomer";
            
            public static string DeliveryTo = @"DeliveryTo";
            
            public static string ContainerNumber = @"ContainerNumber";
            
            public static string PONumber = @"PONumber";
            
            public static string ContainerID = @"ContainerID";
            
            public static string JobClosed = @"JobClosed";
            
            public static string TotalValue = @"TotalValue";
            
            public static string UnitPricePerCopy = @"UnitPricePerCopy";
            
            public static string HCCompositeRef = @"HCCompositeRef";
            
            public static string HCInvoiceAmount = @"HCInvoiceAmount";
            
            public static string SSRNo = @"SSRNo";
            
            public static string SSRDate = @"SSRDate";
            
            public static string OtherRef = @"OtherRef";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
