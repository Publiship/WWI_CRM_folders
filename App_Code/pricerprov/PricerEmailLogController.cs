using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Pricer
{
    /// <summary>
    /// Controller class for pricer_email_log
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class PricerEmailLogController
    {
        // Preload our schema..
        PricerEmailLog thisSchemaLoad = new PricerEmailLog();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public PricerEmailLogCollection FetchAll()
        {
            PricerEmailLogCollection coll = new PricerEmailLogCollection();
            Query qry = new Query(PricerEmailLog.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public PricerEmailLogCollection FetchByID(object EmailLogId)
        {
            PricerEmailLogCollection coll = new PricerEmailLogCollection().Where("email_log_ID", EmailLogId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public PricerEmailLogCollection FetchByQuery(Query qry)
        {
            PricerEmailLogCollection coll = new PricerEmailLogCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object EmailLogId)
        {
            return (PricerEmailLog.Delete(EmailLogId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object EmailLogId)
        {
            return (PricerEmailLog.Destroy(EmailLogId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int? QuoteId,string PoNumber,string Isbn,string Printer,DateTime? ExworksDate,DateTime? DueDate,string Comments,string SentBy,string Company,string ContactTel,string ContactEmail,string PublishipContact,byte[] EmTimestamp)
	    {
		    PricerEmailLog item = new PricerEmailLog();
		    
            item.QuoteId = QuoteId;
            
            item.PoNumber = PoNumber;
            
            item.Isbn = Isbn;
            
            item.Printer = Printer;
            
            item.ExworksDate = ExworksDate;
            
            item.DueDate = DueDate;
            
            item.Comments = Comments;
            
            item.SentBy = SentBy;
            
            item.Company = Company;
            
            item.ContactTel = ContactTel;
            
            item.ContactEmail = ContactEmail;
            
            item.PublishipContact = PublishipContact;
            
            item.EmTimestamp = EmTimestamp;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int EmailLogId,int? QuoteId,string PoNumber,string Isbn,string Printer,DateTime? ExworksDate,DateTime? DueDate,string Comments,string SentBy,string Company,string ContactTel,string ContactEmail,string PublishipContact,byte[] EmTimestamp)
	    {
		    PricerEmailLog item = new PricerEmailLog();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.EmailLogId = EmailLogId;
				
			item.QuoteId = QuoteId;
				
			item.PoNumber = PoNumber;
				
			item.Isbn = Isbn;
				
			item.Printer = Printer;
				
			item.ExworksDate = ExworksDate;
				
			item.DueDate = DueDate;
				
			item.Comments = Comments;
				
			item.SentBy = SentBy;
				
			item.Company = Company;
				
			item.ContactTel = ContactTel;
				
			item.ContactEmail = ContactEmail;
				
			item.PublishipContact = PublishipContact;
				
			item.EmTimestamp = EmTimestamp;
				
	        item.Save(UserName);
	    }
    }
}
