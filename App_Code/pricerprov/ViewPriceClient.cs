using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Pricer{
    /// <summary>
    /// Strongly-typed collection for the ViewPriceClient class.
    /// </summary>
    [Serializable]
    public partial class ViewPriceClientCollection : ReadOnlyList<ViewPriceClient, ViewPriceClientCollection>
    {        
        public ViewPriceClientCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the view_price_client view.
    /// </summary>
    [Serializable]
    public partial class ViewPriceClient : ReadOnlyRecord<ViewPriceClient>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("view_price_client", TableType.View, DataService.GetInstance("pricerprov"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarQuoteId = new TableSchema.TableColumn(schema);
                colvarQuoteId.ColumnName = "quote_Id";
                colvarQuoteId.DataType = DbType.Int32;
                colvarQuoteId.MaxLength = 0;
                colvarQuoteId.AutoIncrement = false;
                colvarQuoteId.IsNullable = false;
                colvarQuoteId.IsPrimaryKey = false;
                colvarQuoteId.IsForeignKey = false;
                colvarQuoteId.IsReadOnly = false;
                
                schema.Columns.Add(colvarQuoteId);
                
                TableSchema.TableColumn colvarRequestDate = new TableSchema.TableColumn(schema);
                colvarRequestDate.ColumnName = "request_date";
                colvarRequestDate.DataType = DbType.DateTime;
                colvarRequestDate.MaxLength = 0;
                colvarRequestDate.AutoIncrement = false;
                colvarRequestDate.IsNullable = true;
                colvarRequestDate.IsPrimaryKey = false;
                colvarRequestDate.IsForeignKey = false;
                colvarRequestDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarRequestDate);
                
                TableSchema.TableColumn colvarBookTitle = new TableSchema.TableColumn(schema);
                colvarBookTitle.ColumnName = "book_title";
                colvarBookTitle.DataType = DbType.String;
                colvarBookTitle.MaxLength = 200;
                colvarBookTitle.AutoIncrement = false;
                colvarBookTitle.IsNullable = true;
                colvarBookTitle.IsPrimaryKey = false;
                colvarBookTitle.IsForeignKey = false;
                colvarBookTitle.IsReadOnly = false;
                
                schema.Columns.Add(colvarBookTitle);
                
                TableSchema.TableColumn colvarInDescription = new TableSchema.TableColumn(schema);
                colvarInDescription.ColumnName = "in_description";
                colvarInDescription.DataType = DbType.String;
                colvarInDescription.MaxLength = 30;
                colvarInDescription.AutoIncrement = false;
                colvarInDescription.IsNullable = true;
                colvarInDescription.IsPrimaryKey = false;
                colvarInDescription.IsForeignKey = false;
                colvarInDescription.IsReadOnly = false;
                
                schema.Columns.Add(colvarInDescription);
                
                TableSchema.TableColumn colvarInCurrency = new TableSchema.TableColumn(schema);
                colvarInCurrency.ColumnName = "in_currency";
                colvarInCurrency.DataType = DbType.String;
                colvarInCurrency.MaxLength = 50;
                colvarInCurrency.AutoIncrement = false;
                colvarInCurrency.IsNullable = true;
                colvarInCurrency.IsPrimaryKey = false;
                colvarInCurrency.IsForeignKey = false;
                colvarInCurrency.IsReadOnly = false;
                
                schema.Columns.Add(colvarInCurrency);
                
                TableSchema.TableColumn colvarInLength = new TableSchema.TableColumn(schema);
                colvarInLength.ColumnName = "in_length";
                colvarInLength.DataType = DbType.Double;
                colvarInLength.MaxLength = 0;
                colvarInLength.AutoIncrement = false;
                colvarInLength.IsNullable = true;
                colvarInLength.IsPrimaryKey = false;
                colvarInLength.IsForeignKey = false;
                colvarInLength.IsReadOnly = false;
                
                schema.Columns.Add(colvarInLength);
                
                TableSchema.TableColumn colvarInWidth = new TableSchema.TableColumn(schema);
                colvarInWidth.ColumnName = "in_width";
                colvarInWidth.DataType = DbType.Double;
                colvarInWidth.MaxLength = 0;
                colvarInWidth.AutoIncrement = false;
                colvarInWidth.IsNullable = true;
                colvarInWidth.IsPrimaryKey = false;
                colvarInWidth.IsForeignKey = false;
                colvarInWidth.IsReadOnly = false;
                
                schema.Columns.Add(colvarInWidth);
                
                TableSchema.TableColumn colvarInDepth = new TableSchema.TableColumn(schema);
                colvarInDepth.ColumnName = "in_depth";
                colvarInDepth.DataType = DbType.Double;
                colvarInDepth.MaxLength = 0;
                colvarInDepth.AutoIncrement = false;
                colvarInDepth.IsNullable = true;
                colvarInDepth.IsPrimaryKey = false;
                colvarInDepth.IsForeignKey = false;
                colvarInDepth.IsReadOnly = false;
                
                schema.Columns.Add(colvarInDepth);
                
                TableSchema.TableColumn colvarInWeight = new TableSchema.TableColumn(schema);
                colvarInWeight.ColumnName = "in_weight";
                colvarInWeight.DataType = DbType.Double;
                colvarInWeight.MaxLength = 0;
                colvarInWeight.AutoIncrement = false;
                colvarInWeight.IsNullable = true;
                colvarInWeight.IsPrimaryKey = false;
                colvarInWeight.IsForeignKey = false;
                colvarInWeight.IsReadOnly = false;
                
                schema.Columns.Add(colvarInWeight);
                
                TableSchema.TableColumn colvarInExtent = new TableSchema.TableColumn(schema);
                colvarInExtent.ColumnName = "in_extent";
                colvarInExtent.DataType = DbType.Double;
                colvarInExtent.MaxLength = 0;
                colvarInExtent.AutoIncrement = false;
                colvarInExtent.IsNullable = true;
                colvarInExtent.IsPrimaryKey = false;
                colvarInExtent.IsForeignKey = false;
                colvarInExtent.IsReadOnly = false;
                
                schema.Columns.Add(colvarInExtent);
                
                TableSchema.TableColumn colvarInPapergsm = new TableSchema.TableColumn(schema);
                colvarInPapergsm.ColumnName = "in_papergsm";
                colvarInPapergsm.DataType = DbType.Double;
                colvarInPapergsm.MaxLength = 0;
                colvarInPapergsm.AutoIncrement = false;
                colvarInPapergsm.IsNullable = true;
                colvarInPapergsm.IsPrimaryKey = false;
                colvarInPapergsm.IsForeignKey = false;
                colvarInPapergsm.IsReadOnly = false;
                
                schema.Columns.Add(colvarInPapergsm);
                
                TableSchema.TableColumn colvarInHardback = new TableSchema.TableColumn(schema);
                colvarInHardback.ColumnName = "in_hardback";
                colvarInHardback.DataType = DbType.Boolean;
                colvarInHardback.MaxLength = 0;
                colvarInHardback.AutoIncrement = false;
                colvarInHardback.IsNullable = true;
                colvarInHardback.IsPrimaryKey = false;
                colvarInHardback.IsForeignKey = false;
                colvarInHardback.IsReadOnly = false;
                
                schema.Columns.Add(colvarInHardback);
                
                TableSchema.TableColumn colvarCopiesCarton = new TableSchema.TableColumn(schema);
                colvarCopiesCarton.ColumnName = "copies_carton";
                colvarCopiesCarton.DataType = DbType.Int32;
                colvarCopiesCarton.MaxLength = 0;
                colvarCopiesCarton.AutoIncrement = false;
                colvarCopiesCarton.IsNullable = true;
                colvarCopiesCarton.IsPrimaryKey = false;
                colvarCopiesCarton.IsForeignKey = false;
                colvarCopiesCarton.IsReadOnly = false;
                
                schema.Columns.Add(colvarCopiesCarton);
                
                TableSchema.TableColumn colvarOriginName = new TableSchema.TableColumn(schema);
                colvarOriginName.ColumnName = "origin_name";
                colvarOriginName.DataType = DbType.String;
                colvarOriginName.MaxLength = 75;
                colvarOriginName.AutoIncrement = false;
                colvarOriginName.IsNullable = true;
                colvarOriginName.IsPrimaryKey = false;
                colvarOriginName.IsForeignKey = false;
                colvarOriginName.IsReadOnly = false;
                
                schema.Columns.Add(colvarOriginName);
                
                TableSchema.TableColumn colvarCountryName = new TableSchema.TableColumn(schema);
                colvarCountryName.ColumnName = "country_name";
                colvarCountryName.DataType = DbType.String;
                colvarCountryName.MaxLength = 75;
                colvarCountryName.AutoIncrement = false;
                colvarCountryName.IsNullable = true;
                colvarCountryName.IsPrimaryKey = false;
                colvarCountryName.IsForeignKey = false;
                colvarCountryName.IsReadOnly = false;
                
                schema.Columns.Add(colvarCountryName);
                
                TableSchema.TableColumn colvarFinalName = new TableSchema.TableColumn(schema);
                colvarFinalName.ColumnName = "final_name";
                colvarFinalName.DataType = DbType.String;
                colvarFinalName.MaxLength = 75;
                colvarFinalName.AutoIncrement = false;
                colvarFinalName.IsNullable = true;
                colvarFinalName.IsPrimaryKey = false;
                colvarFinalName.IsForeignKey = false;
                colvarFinalName.IsReadOnly = false;
                
                schema.Columns.Add(colvarFinalName);
                
                TableSchema.TableColumn colvarTotCopies = new TableSchema.TableColumn(schema);
                colvarTotCopies.ColumnName = "tot_copies";
                colvarTotCopies.DataType = DbType.Int32;
                colvarTotCopies.MaxLength = 0;
                colvarTotCopies.AutoIncrement = false;
                colvarTotCopies.IsNullable = true;
                colvarTotCopies.IsPrimaryKey = false;
                colvarTotCopies.IsForeignKey = false;
                colvarTotCopies.IsReadOnly = false;
                
                schema.Columns.Add(colvarTotCopies);
                
                TableSchema.TableColumn colvarPriceLoose = new TableSchema.TableColumn(schema);
                colvarPriceLoose.ColumnName = "price_loose";
                colvarPriceLoose.DataType = DbType.Double;
                colvarPriceLoose.MaxLength = 0;
                colvarPriceLoose.AutoIncrement = false;
                colvarPriceLoose.IsNullable = true;
                colvarPriceLoose.IsPrimaryKey = false;
                colvarPriceLoose.IsForeignKey = false;
                colvarPriceLoose.IsReadOnly = false;
                
                schema.Columns.Add(colvarPriceLoose);
                
                TableSchema.TableColumn colvarPriceTotal = new TableSchema.TableColumn(schema);
                colvarPriceTotal.ColumnName = "price_total";
                colvarPriceTotal.DataType = DbType.Double;
                colvarPriceTotal.MaxLength = 0;
                colvarPriceTotal.AutoIncrement = false;
                colvarPriceTotal.IsNullable = true;
                colvarPriceTotal.IsPrimaryKey = false;
                colvarPriceTotal.IsForeignKey = false;
                colvarPriceTotal.IsReadOnly = false;
                
                schema.Columns.Add(colvarPriceTotal);
                
                TableSchema.TableColumn colvarPriceClient = new TableSchema.TableColumn(schema);
                colvarPriceClient.ColumnName = "price_client";
                colvarPriceClient.DataType = DbType.Double;
                colvarPriceClient.MaxLength = 0;
                colvarPriceClient.AutoIncrement = false;
                colvarPriceClient.IsNullable = true;
                colvarPriceClient.IsPrimaryKey = false;
                colvarPriceClient.IsForeignKey = false;
                colvarPriceClient.IsReadOnly = false;
                
                schema.Columns.Add(colvarPriceClient);
                
                TableSchema.TableColumn colvarPriceLooseGbp = new TableSchema.TableColumn(schema);
                colvarPriceLooseGbp.ColumnName = "price_loose_gbp";
                colvarPriceLooseGbp.DataType = DbType.Double;
                colvarPriceLooseGbp.MaxLength = 0;
                colvarPriceLooseGbp.AutoIncrement = false;
                colvarPriceLooseGbp.IsNullable = true;
                colvarPriceLooseGbp.IsPrimaryKey = false;
                colvarPriceLooseGbp.IsForeignKey = false;
                colvarPriceLooseGbp.IsReadOnly = false;
                
                schema.Columns.Add(colvarPriceLooseGbp);
                
                TableSchema.TableColumn colvarPriceTotalGbp = new TableSchema.TableColumn(schema);
                colvarPriceTotalGbp.ColumnName = "price_total_gbp";
                colvarPriceTotalGbp.DataType = DbType.Double;
                colvarPriceTotalGbp.MaxLength = 0;
                colvarPriceTotalGbp.AutoIncrement = false;
                colvarPriceTotalGbp.IsNullable = true;
                colvarPriceTotalGbp.IsPrimaryKey = false;
                colvarPriceTotalGbp.IsForeignKey = false;
                colvarPriceTotalGbp.IsReadOnly = false;
                
                schema.Columns.Add(colvarPriceTotalGbp);
                
                TableSchema.TableColumn colvarShipVia = new TableSchema.TableColumn(schema);
                colvarShipVia.ColumnName = "ship_via";
                colvarShipVia.DataType = DbType.String;
                colvarShipVia.MaxLength = 100;
                colvarShipVia.AutoIncrement = false;
                colvarShipVia.IsNullable = true;
                colvarShipVia.IsPrimaryKey = false;
                colvarShipVia.IsForeignKey = false;
                colvarShipVia.IsReadOnly = false;
                
                schema.Columns.Add(colvarShipVia);
                
                TableSchema.TableColumn colvarPalletType = new TableSchema.TableColumn(schema);
                colvarPalletType.ColumnName = "pallet_type";
                colvarPalletType.DataType = DbType.String;
                colvarPalletType.MaxLength = 50;
                colvarPalletType.AutoIncrement = false;
                colvarPalletType.IsNullable = true;
                colvarPalletType.IsPrimaryKey = false;
                colvarPalletType.IsForeignKey = false;
                colvarPalletType.IsReadOnly = false;
                
                schema.Columns.Add(colvarPalletType);
                
                TableSchema.TableColumn colvarRequestUserId = new TableSchema.TableColumn(schema);
                colvarRequestUserId.ColumnName = "request_user_id";
                colvarRequestUserId.DataType = DbType.Int32;
                colvarRequestUserId.MaxLength = 0;
                colvarRequestUserId.AutoIncrement = false;
                colvarRequestUserId.IsNullable = true;
                colvarRequestUserId.IsPrimaryKey = false;
                colvarRequestUserId.IsForeignKey = false;
                colvarRequestUserId.IsReadOnly = false;
                
                schema.Columns.Add(colvarRequestUserId);
                
                TableSchema.TableColumn colvarRequestCompanyId = new TableSchema.TableColumn(schema);
                colvarRequestCompanyId.ColumnName = "request_company_id";
                colvarRequestCompanyId.DataType = DbType.Int32;
                colvarRequestCompanyId.MaxLength = 0;
                colvarRequestCompanyId.AutoIncrement = false;
                colvarRequestCompanyId.IsNullable = true;
                colvarRequestCompanyId.IsPrimaryKey = false;
                colvarRequestCompanyId.IsForeignKey = false;
                colvarRequestCompanyId.IsReadOnly = false;
                
                schema.Columns.Add(colvarRequestCompanyId);
                
                TableSchema.TableColumn colvarPriceEx = new TableSchema.TableColumn(schema);
                colvarPriceEx.ColumnName = "price_ex";
                colvarPriceEx.DataType = DbType.Double;
                colvarPriceEx.MaxLength = 0;
                colvarPriceEx.AutoIncrement = false;
                colvarPriceEx.IsNullable = true;
                colvarPriceEx.IsPrimaryKey = false;
                colvarPriceEx.IsForeignKey = false;
                colvarPriceEx.IsReadOnly = false;
                
                schema.Columns.Add(colvarPriceEx);
                
                TableSchema.TableColumn colvarLclName = new TableSchema.TableColumn(schema);
                colvarLclName.ColumnName = "lcl_name";
                colvarLclName.DataType = DbType.String;
                colvarLclName.MaxLength = 100;
                colvarLclName.AutoIncrement = false;
                colvarLclName.IsNullable = true;
                colvarLclName.IsPrimaryKey = false;
                colvarLclName.IsForeignKey = false;
                colvarLclName.IsReadOnly = false;
                
                schema.Columns.Add(colvarLclName);
                
                TableSchema.TableColumn colvarLooseName = new TableSchema.TableColumn(schema);
                colvarLooseName.ColumnName = "loose_name";
                colvarLooseName.DataType = DbType.String;
                colvarLooseName.MaxLength = 100;
                colvarLooseName.AutoIncrement = false;
                colvarLooseName.IsNullable = true;
                colvarLooseName.IsPrimaryKey = false;
                colvarLooseName.IsForeignKey = false;
                colvarLooseName.IsReadOnly = false;
                
                schema.Columns.Add(colvarLooseName);
                
                TableSchema.TableColumn colvarClientVisible = new TableSchema.TableColumn(schema);
                colvarClientVisible.ColumnName = "client_visible";
                colvarClientVisible.DataType = DbType.Boolean;
                colvarClientVisible.MaxLength = 0;
                colvarClientVisible.AutoIncrement = false;
                colvarClientVisible.IsNullable = true;
                colvarClientVisible.IsPrimaryKey = false;
                colvarClientVisible.IsForeignKey = false;
                colvarClientVisible.IsReadOnly = false;
                
                schema.Columns.Add(colvarClientVisible);
                
                TableSchema.TableColumn colvarOrderNo = new TableSchema.TableColumn(schema);
                colvarOrderNo.ColumnName = "order_no";
                colvarOrderNo.DataType = DbType.Int32;
                colvarOrderNo.MaxLength = 0;
                colvarOrderNo.AutoIncrement = false;
                colvarOrderNo.IsNullable = true;
                colvarOrderNo.IsPrimaryKey = false;
                colvarOrderNo.IsForeignKey = false;
                colvarOrderNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrderNo);
                
                TableSchema.TableColumn colvarIsbn = new TableSchema.TableColumn(schema);
                colvarIsbn.ColumnName = "ISBN";
                colvarIsbn.DataType = DbType.String;
                colvarIsbn.MaxLength = 50;
                colvarIsbn.AutoIncrement = false;
                colvarIsbn.IsNullable = true;
                colvarIsbn.IsPrimaryKey = false;
                colvarIsbn.IsForeignKey = false;
                colvarIsbn.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsbn);
                
                TableSchema.TableColumn colvarPrinter = new TableSchema.TableColumn(schema);
                colvarPrinter.ColumnName = "printer";
                colvarPrinter.DataType = DbType.String;
                colvarPrinter.MaxLength = 50;
                colvarPrinter.AutoIncrement = false;
                colvarPrinter.IsNullable = true;
                colvarPrinter.IsPrimaryKey = false;
                colvarPrinter.IsForeignKey = false;
                colvarPrinter.IsReadOnly = false;
                
                schema.Columns.Add(colvarPrinter);
                
                TableSchema.TableColumn colvarExworksDate = new TableSchema.TableColumn(schema);
                colvarExworksDate.ColumnName = "exworks_date";
                colvarExworksDate.DataType = DbType.DateTime;
                colvarExworksDate.MaxLength = 0;
                colvarExworksDate.AutoIncrement = false;
                colvarExworksDate.IsNullable = true;
                colvarExworksDate.IsPrimaryKey = false;
                colvarExworksDate.IsForeignKey = false;
                colvarExworksDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarExworksDate);
                
                TableSchema.TableColumn colvarComments = new TableSchema.TableColumn(schema);
                colvarComments.ColumnName = "comments";
                colvarComments.DataType = DbType.AnsiString;
                colvarComments.MaxLength = 2147483647;
                colvarComments.AutoIncrement = false;
                colvarComments.IsNullable = true;
                colvarComments.IsPrimaryKey = false;
                colvarComments.IsForeignKey = false;
                colvarComments.IsReadOnly = false;
                
                schema.Columns.Add(colvarComments);
                
                TableSchema.TableColumn colvarDueDate = new TableSchema.TableColumn(schema);
                colvarDueDate.ColumnName = "due_date";
                colvarDueDate.DataType = DbType.DateTime;
                colvarDueDate.MaxLength = 0;
                colvarDueDate.AutoIncrement = false;
                colvarDueDate.IsNullable = true;
                colvarDueDate.IsPrimaryKey = false;
                colvarDueDate.IsForeignKey = false;
                colvarDueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarDueDate);
                
                TableSchema.TableColumn colvarSentBy = new TableSchema.TableColumn(schema);
                colvarSentBy.ColumnName = "sent_by";
                colvarSentBy.DataType = DbType.String;
                colvarSentBy.MaxLength = 75;
                colvarSentBy.AutoIncrement = false;
                colvarSentBy.IsNullable = true;
                colvarSentBy.IsPrimaryKey = false;
                colvarSentBy.IsForeignKey = false;
                colvarSentBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarSentBy);
                
                TableSchema.TableColumn colvarCompany = new TableSchema.TableColumn(schema);
                colvarCompany.ColumnName = "company";
                colvarCompany.DataType = DbType.String;
                colvarCompany.MaxLength = 75;
                colvarCompany.AutoIncrement = false;
                colvarCompany.IsNullable = true;
                colvarCompany.IsPrimaryKey = false;
                colvarCompany.IsForeignKey = false;
                colvarCompany.IsReadOnly = false;
                
                schema.Columns.Add(colvarCompany);
                
                TableSchema.TableColumn colvarContactTel = new TableSchema.TableColumn(schema);
                colvarContactTel.ColumnName = "contact_tel";
                colvarContactTel.DataType = DbType.String;
                colvarContactTel.MaxLength = 50;
                colvarContactTel.AutoIncrement = false;
                colvarContactTel.IsNullable = true;
                colvarContactTel.IsPrimaryKey = false;
                colvarContactTel.IsForeignKey = false;
                colvarContactTel.IsReadOnly = false;
                
                schema.Columns.Add(colvarContactTel);
                
                TableSchema.TableColumn colvarContactEmail = new TableSchema.TableColumn(schema);
                colvarContactEmail.ColumnName = "contact_email";
                colvarContactEmail.DataType = DbType.String;
                colvarContactEmail.MaxLength = 75;
                colvarContactEmail.AutoIncrement = false;
                colvarContactEmail.IsNullable = true;
                colvarContactEmail.IsPrimaryKey = false;
                colvarContactEmail.IsForeignKey = false;
                colvarContactEmail.IsReadOnly = false;
                
                schema.Columns.Add(colvarContactEmail);
                
                TableSchema.TableColumn colvarPublishipContact = new TableSchema.TableColumn(schema);
                colvarPublishipContact.ColumnName = "publiship_contact";
                colvarPublishipContact.DataType = DbType.String;
                colvarPublishipContact.MaxLength = 50;
                colvarPublishipContact.AutoIncrement = false;
                colvarPublishipContact.IsNullable = true;
                colvarPublishipContact.IsPrimaryKey = false;
                colvarPublishipContact.IsForeignKey = false;
                colvarPublishipContact.IsReadOnly = false;
                
                schema.Columns.Add(colvarPublishipContact);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["pricerprov"].AddSchema("view_price_client",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ViewPriceClient()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ViewPriceClient(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ViewPriceClient(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ViewPriceClient(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("QuoteId")]
        [Bindable(true)]
        public int QuoteId 
	    {
		    get
		    {
			    return GetColumnValue<int>("quote_Id");
		    }
            set 
		    {
			    SetColumnValue("quote_Id", value);
            }
        }
	      
        [XmlAttribute("RequestDate")]
        [Bindable(true)]
        public DateTime? RequestDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("request_date");
		    }
            set 
		    {
			    SetColumnValue("request_date", value);
            }
        }
	      
        [XmlAttribute("BookTitle")]
        [Bindable(true)]
        public string BookTitle 
	    {
		    get
		    {
			    return GetColumnValue<string>("book_title");
		    }
            set 
		    {
			    SetColumnValue("book_title", value);
            }
        }
	      
        [XmlAttribute("InDescription")]
        [Bindable(true)]
        public string InDescription 
	    {
		    get
		    {
			    return GetColumnValue<string>("in_description");
		    }
            set 
		    {
			    SetColumnValue("in_description", value);
            }
        }
	      
        [XmlAttribute("InCurrency")]
        [Bindable(true)]
        public string InCurrency 
	    {
		    get
		    {
			    return GetColumnValue<string>("in_currency");
		    }
            set 
		    {
			    SetColumnValue("in_currency", value);
            }
        }
	      
        [XmlAttribute("InLength")]
        [Bindable(true)]
        public double? InLength 
	    {
		    get
		    {
			    return GetColumnValue<double?>("in_length");
		    }
            set 
		    {
			    SetColumnValue("in_length", value);
            }
        }
	      
        [XmlAttribute("InWidth")]
        [Bindable(true)]
        public double? InWidth 
	    {
		    get
		    {
			    return GetColumnValue<double?>("in_width");
		    }
            set 
		    {
			    SetColumnValue("in_width", value);
            }
        }
	      
        [XmlAttribute("InDepth")]
        [Bindable(true)]
        public double? InDepth 
	    {
		    get
		    {
			    return GetColumnValue<double?>("in_depth");
		    }
            set 
		    {
			    SetColumnValue("in_depth", value);
            }
        }
	      
        [XmlAttribute("InWeight")]
        [Bindable(true)]
        public double? InWeight 
	    {
		    get
		    {
			    return GetColumnValue<double?>("in_weight");
		    }
            set 
		    {
			    SetColumnValue("in_weight", value);
            }
        }
	      
        [XmlAttribute("InExtent")]
        [Bindable(true)]
        public double? InExtent 
	    {
		    get
		    {
			    return GetColumnValue<double?>("in_extent");
		    }
            set 
		    {
			    SetColumnValue("in_extent", value);
            }
        }
	      
        [XmlAttribute("InPapergsm")]
        [Bindable(true)]
        public double? InPapergsm 
	    {
		    get
		    {
			    return GetColumnValue<double?>("in_papergsm");
		    }
            set 
		    {
			    SetColumnValue("in_papergsm", value);
            }
        }
	      
        [XmlAttribute("InHardback")]
        [Bindable(true)]
        public bool? InHardback 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("in_hardback");
		    }
            set 
		    {
			    SetColumnValue("in_hardback", value);
            }
        }
	      
        [XmlAttribute("CopiesCarton")]
        [Bindable(true)]
        public int? CopiesCarton 
	    {
		    get
		    {
			    return GetColumnValue<int?>("copies_carton");
		    }
            set 
		    {
			    SetColumnValue("copies_carton", value);
            }
        }
	      
        [XmlAttribute("OriginName")]
        [Bindable(true)]
        public string OriginName 
	    {
		    get
		    {
			    return GetColumnValue<string>("origin_name");
		    }
            set 
		    {
			    SetColumnValue("origin_name", value);
            }
        }
	      
        [XmlAttribute("CountryName")]
        [Bindable(true)]
        public string CountryName 
	    {
		    get
		    {
			    return GetColumnValue<string>("country_name");
		    }
            set 
		    {
			    SetColumnValue("country_name", value);
            }
        }
	      
        [XmlAttribute("FinalName")]
        [Bindable(true)]
        public string FinalName 
	    {
		    get
		    {
			    return GetColumnValue<string>("final_name");
		    }
            set 
		    {
			    SetColumnValue("final_name", value);
            }
        }
	      
        [XmlAttribute("TotCopies")]
        [Bindable(true)]
        public int? TotCopies 
	    {
		    get
		    {
			    return GetColumnValue<int?>("tot_copies");
		    }
            set 
		    {
			    SetColumnValue("tot_copies", value);
            }
        }
	      
        [XmlAttribute("PriceLoose")]
        [Bindable(true)]
        public double? PriceLoose 
	    {
		    get
		    {
			    return GetColumnValue<double?>("price_loose");
		    }
            set 
		    {
			    SetColumnValue("price_loose", value);
            }
        }
	      
        [XmlAttribute("PriceTotal")]
        [Bindable(true)]
        public double? PriceTotal 
	    {
		    get
		    {
			    return GetColumnValue<double?>("price_total");
		    }
            set 
		    {
			    SetColumnValue("price_total", value);
            }
        }
	      
        [XmlAttribute("PriceClient")]
        [Bindable(true)]
        public double? PriceClient 
	    {
		    get
		    {
			    return GetColumnValue<double?>("price_client");
		    }
            set 
		    {
			    SetColumnValue("price_client", value);
            }
        }
	      
        [XmlAttribute("PriceLooseGbp")]
        [Bindable(true)]
        public double? PriceLooseGbp 
	    {
		    get
		    {
			    return GetColumnValue<double?>("price_loose_gbp");
		    }
            set 
		    {
			    SetColumnValue("price_loose_gbp", value);
            }
        }
	      
        [XmlAttribute("PriceTotalGbp")]
        [Bindable(true)]
        public double? PriceTotalGbp 
	    {
		    get
		    {
			    return GetColumnValue<double?>("price_total_gbp");
		    }
            set 
		    {
			    SetColumnValue("price_total_gbp", value);
            }
        }
	      
        [XmlAttribute("ShipVia")]
        [Bindable(true)]
        public string ShipVia 
	    {
		    get
		    {
			    return GetColumnValue<string>("ship_via");
		    }
            set 
		    {
			    SetColumnValue("ship_via", value);
            }
        }
	      
        [XmlAttribute("PalletType")]
        [Bindable(true)]
        public string PalletType 
	    {
		    get
		    {
			    return GetColumnValue<string>("pallet_type");
		    }
            set 
		    {
			    SetColumnValue("pallet_type", value);
            }
        }
	      
        [XmlAttribute("RequestUserId")]
        [Bindable(true)]
        public int? RequestUserId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("request_user_id");
		    }
            set 
		    {
			    SetColumnValue("request_user_id", value);
            }
        }
	      
        [XmlAttribute("RequestCompanyId")]
        [Bindable(true)]
        public int? RequestCompanyId 
	    {
		    get
		    {
			    return GetColumnValue<int?>("request_company_id");
		    }
            set 
		    {
			    SetColumnValue("request_company_id", value);
            }
        }
	      
        [XmlAttribute("PriceEx")]
        [Bindable(true)]
        public double? PriceEx 
	    {
		    get
		    {
			    return GetColumnValue<double?>("price_ex");
		    }
            set 
		    {
			    SetColumnValue("price_ex", value);
            }
        }
	      
        [XmlAttribute("LclName")]
        [Bindable(true)]
        public string LclName 
	    {
		    get
		    {
			    return GetColumnValue<string>("lcl_name");
		    }
            set 
		    {
			    SetColumnValue("lcl_name", value);
            }
        }
	      
        [XmlAttribute("LooseName")]
        [Bindable(true)]
        public string LooseName 
	    {
		    get
		    {
			    return GetColumnValue<string>("loose_name");
		    }
            set 
		    {
			    SetColumnValue("loose_name", value);
            }
        }
	      
        [XmlAttribute("ClientVisible")]
        [Bindable(true)]
        public bool? ClientVisible 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("client_visible");
		    }
            set 
		    {
			    SetColumnValue("client_visible", value);
            }
        }
	      
        [XmlAttribute("OrderNo")]
        [Bindable(true)]
        public int? OrderNo 
	    {
		    get
		    {
			    return GetColumnValue<int?>("order_no");
		    }
            set 
		    {
			    SetColumnValue("order_no", value);
            }
        }
	      
        [XmlAttribute("Isbn")]
        [Bindable(true)]
        public string Isbn 
	    {
		    get
		    {
			    return GetColumnValue<string>("ISBN");
		    }
            set 
		    {
			    SetColumnValue("ISBN", value);
            }
        }
	      
        [XmlAttribute("Printer")]
        [Bindable(true)]
        public string Printer 
	    {
		    get
		    {
			    return GetColumnValue<string>("printer");
		    }
            set 
		    {
			    SetColumnValue("printer", value);
            }
        }
	      
        [XmlAttribute("ExworksDate")]
        [Bindable(true)]
        public DateTime? ExworksDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("exworks_date");
		    }
            set 
		    {
			    SetColumnValue("exworks_date", value);
            }
        }
	      
        [XmlAttribute("Comments")]
        [Bindable(true)]
        public string Comments 
	    {
		    get
		    {
			    return GetColumnValue<string>("comments");
		    }
            set 
		    {
			    SetColumnValue("comments", value);
            }
        }
	      
        [XmlAttribute("DueDate")]
        [Bindable(true)]
        public DateTime? DueDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("due_date");
		    }
            set 
		    {
			    SetColumnValue("due_date", value);
            }
        }
	      
        [XmlAttribute("SentBy")]
        [Bindable(true)]
        public string SentBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("sent_by");
		    }
            set 
		    {
			    SetColumnValue("sent_by", value);
            }
        }
	      
        [XmlAttribute("Company")]
        [Bindable(true)]
        public string Company 
	    {
		    get
		    {
			    return GetColumnValue<string>("company");
		    }
            set 
		    {
			    SetColumnValue("company", value);
            }
        }
	      
        [XmlAttribute("ContactTel")]
        [Bindable(true)]
        public string ContactTel 
	    {
		    get
		    {
			    return GetColumnValue<string>("contact_tel");
		    }
            set 
		    {
			    SetColumnValue("contact_tel", value);
            }
        }
	      
        [XmlAttribute("ContactEmail")]
        [Bindable(true)]
        public string ContactEmail 
	    {
		    get
		    {
			    return GetColumnValue<string>("contact_email");
		    }
            set 
		    {
			    SetColumnValue("contact_email", value);
            }
        }
	      
        [XmlAttribute("PublishipContact")]
        [Bindable(true)]
        public string PublishipContact 
	    {
		    get
		    {
			    return GetColumnValue<string>("publiship_contact");
		    }
            set 
		    {
			    SetColumnValue("publiship_contact", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string QuoteId = @"quote_Id";
            
            public static string RequestDate = @"request_date";
            
            public static string BookTitle = @"book_title";
            
            public static string InDescription = @"in_description";
            
            public static string InCurrency = @"in_currency";
            
            public static string InLength = @"in_length";
            
            public static string InWidth = @"in_width";
            
            public static string InDepth = @"in_depth";
            
            public static string InWeight = @"in_weight";
            
            public static string InExtent = @"in_extent";
            
            public static string InPapergsm = @"in_papergsm";
            
            public static string InHardback = @"in_hardback";
            
            public static string CopiesCarton = @"copies_carton";
            
            public static string OriginName = @"origin_name";
            
            public static string CountryName = @"country_name";
            
            public static string FinalName = @"final_name";
            
            public static string TotCopies = @"tot_copies";
            
            public static string PriceLoose = @"price_loose";
            
            public static string PriceTotal = @"price_total";
            
            public static string PriceClient = @"price_client";
            
            public static string PriceLooseGbp = @"price_loose_gbp";
            
            public static string PriceTotalGbp = @"price_total_gbp";
            
            public static string ShipVia = @"ship_via";
            
            public static string PalletType = @"pallet_type";
            
            public static string RequestUserId = @"request_user_id";
            
            public static string RequestCompanyId = @"request_company_id";
            
            public static string PriceEx = @"price_ex";
            
            public static string LclName = @"lcl_name";
            
            public static string LooseName = @"loose_name";
            
            public static string ClientVisible = @"client_visible";
            
            public static string OrderNo = @"order_no";
            
            public static string Isbn = @"ISBN";
            
            public static string Printer = @"printer";
            
            public static string ExworksDate = @"exworks_date";
            
            public static string Comments = @"comments";
            
            public static string DueDate = @"due_date";
            
            public static string SentBy = @"sent_by";
            
            public static string Company = @"company";
            
            public static string ContactTel = @"contact_tel";
            
            public static string ContactEmail = @"contact_email";
            
            public static string PublishipContact = @"publiship_contact";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
