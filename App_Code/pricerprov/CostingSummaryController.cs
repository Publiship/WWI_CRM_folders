using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL.Pricer
{
    /// <summary>
    /// Controller class for costing_summary
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class CostingSummaryController
    {
        // Preload our schema..
        CostingSummary thisSchemaLoad = new CostingSummary();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CostingSummaryCollection FetchAll()
        {
            CostingSummaryCollection coll = new CostingSummaryCollection();
            Query qry = new Query(CostingSummary.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CostingSummaryCollection FetchByID(object CostingId)
        {
            CostingSummaryCollection coll = new CostingSummaryCollection().Where("costing_Id", CostingId).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public CostingSummaryCollection FetchByQuery(Query qry)
        {
            CostingSummaryCollection coll = new CostingSummaryCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object CostingId)
        {
            return (CostingSummary.Delete(CostingId) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object CostingId)
        {
            return (CostingSummary.Destroy(CostingId) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int? QuoteId,string SummaryType,double? PrePart,double? PreFull,double? PreThc20,double? PreThc40,double? PreThclcl,double? PreDocs,double? PreOrigin,double? PreHaul20,double? PreHaul40,double? FreightLcl,double? Freight20,double? Freight40,double? Freight40hq,double? OnDestLcl,double? OnPierEtc,double? OnDest20,double? OnDest40,double? OnDocs,double? OnCustoms,double? OnPart,double? OnFull,double? OnHaul20,double? OnHaul40,double? OnShunt20,double? OnShunt40,double? OnPallets,double? OnOther,byte[] CsTimestamp)
	    {
		    CostingSummary item = new CostingSummary();
		    
            item.QuoteId = QuoteId;
            
            item.SummaryType = SummaryType;
            
            item.PrePart = PrePart;
            
            item.PreFull = PreFull;
            
            item.PreThc20 = PreThc20;
            
            item.PreThc40 = PreThc40;
            
            item.PreThclcl = PreThclcl;
            
            item.PreDocs = PreDocs;
            
            item.PreOrigin = PreOrigin;
            
            item.PreHaul20 = PreHaul20;
            
            item.PreHaul40 = PreHaul40;
            
            item.FreightLcl = FreightLcl;
            
            item.Freight20 = Freight20;
            
            item.Freight40 = Freight40;
            
            item.Freight40hq = Freight40hq;
            
            item.OnDestLcl = OnDestLcl;
            
            item.OnPierEtc = OnPierEtc;
            
            item.OnDest20 = OnDest20;
            
            item.OnDest40 = OnDest40;
            
            item.OnDocs = OnDocs;
            
            item.OnCustoms = OnCustoms;
            
            item.OnPart = OnPart;
            
            item.OnFull = OnFull;
            
            item.OnHaul20 = OnHaul20;
            
            item.OnHaul40 = OnHaul40;
            
            item.OnShunt20 = OnShunt20;
            
            item.OnShunt40 = OnShunt40;
            
            item.OnPallets = OnPallets;
            
            item.OnOther = OnOther;
            
            item.CsTimestamp = CsTimestamp;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int CostingId,int? QuoteId,string SummaryType,double? PrePart,double? PreFull,double? PreThc20,double? PreThc40,double? PreThclcl,double? PreDocs,double? PreOrigin,double? PreHaul20,double? PreHaul40,double? FreightLcl,double? Freight20,double? Freight40,double? Freight40hq,double? OnDestLcl,double? OnPierEtc,double? OnDest20,double? OnDest40,double? OnDocs,double? OnCustoms,double? OnPart,double? OnFull,double? OnHaul20,double? OnHaul40,double? OnShunt20,double? OnShunt40,double? OnPallets,double? OnOther,byte[] CsTimestamp)
	    {
		    CostingSummary item = new CostingSummary();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.CostingId = CostingId;
				
			item.QuoteId = QuoteId;
				
			item.SummaryType = SummaryType;
				
			item.PrePart = PrePart;
				
			item.PreFull = PreFull;
				
			item.PreThc20 = PreThc20;
				
			item.PreThc40 = PreThc40;
				
			item.PreThclcl = PreThclcl;
				
			item.PreDocs = PreDocs;
				
			item.PreOrigin = PreOrigin;
				
			item.PreHaul20 = PreHaul20;
				
			item.PreHaul40 = PreHaul40;
				
			item.FreightLcl = FreightLcl;
				
			item.Freight20 = Freight20;
				
			item.Freight40 = Freight40;
				
			item.Freight40hq = Freight40hq;
				
			item.OnDestLcl = OnDestLcl;
				
			item.OnPierEtc = OnPierEtc;
				
			item.OnDest20 = OnDest20;
				
			item.OnDest40 = OnDest40;
				
			item.OnDocs = OnDocs;
				
			item.OnCustoms = OnCustoms;
				
			item.OnPart = OnPart;
				
			item.OnFull = OnFull;
				
			item.OnHaul20 = OnHaul20;
				
			item.OnHaul40 = OnHaul40;
				
			item.OnShunt20 = OnShunt20;
				
			item.OnShunt40 = OnShunt40;
				
			item.OnPallets = OnPallets;
				
			item.OnOther = OnOther;
				
			item.CsTimestamp = CsTimestamp;
				
	        item.Save(UserName);
	    }
    }
}
